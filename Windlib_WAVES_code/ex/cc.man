


cc(1)                     User Commands                     cc(1)



NAME
     cc - C compiler

SYNOPSIS
     cc [ -# ] [ -### ] [ -Aname [(tokens) ] ] [ -Bc ] [ -C ]
          [ -c ] [ -Dname [=tokens ] ] [ -dalign ] [ -dc ]
          [ -E ] [ -F ] [ -fast ] [ -fd ] [ -flags ] [ -fnonstd ]
          [ -fsimple ] [ -fsingle ] [ -G ] [ -g ] [ -H ] [ -h ]
          [ -Idir ] [ -i ] [ -K PIC ] [ -K pic ] [ -keeptmp ]
          [ -Ldir ] [ -lname ] [ -mc ] [ -misalign ] [ -mr ]
          [ -mr,<string> ] [ -mt ] [ -native ] [ -noqueue ]
          [ -O ] [ -ooutputfile ] [ -P ] [ -p ] [ -Qc ] [ -qc ]
          [ -R path ] [ -S ] [ -s ] [ -Uname ] [ -V ] [ -v ]
          [ -Wtool ,arg1 [,arg2...]  [ -w ] [ -X [a |c |s |t ]]
          [ -xa ] [ -xcg89 ] [ -xcg92 ] [ -xCC ] [ -xe ] [ -xF ]
          [ -xinline= [rlst ]] [ -xlibmieee ] [ -xlibmil ]
          [ -xlicinfo ] [ -xM ] [ -xM1 ] [ -xMerge ] [ -xnolib ]
          [ -xnolibmil ] [ -xO [level ]]
          [ -xpg ] [ -xP ] [ -xs ]
          [ -xsb ] [ -xsbfast ] [ -xstrconst ] [ -xtime ]
          [ -xunroll =n ] [ -Yitem,dir ] [ -YA,dir ]

DESCRIPTION
     The cc(1) manual page describes the ANSI C compiler  options
     that  are  SVID compliant under SunOS 5.x. cccccccc uses ggggeeeettttoooopppptttt to
     parse command line options. Options are treated as a  single
     letter  or  as a single letter followed by an argument.  See
     ggggeeeettttoooopppptttt(3c).

     For a comparison of cccccccc options in Sun C (SunOS  4.x),  SPAR-
     Compiler  C (SunOS 4.x), and SPARCompiler C (SunOS 5.x), see
     the SPARCompiler C Transition Guide .

     cccccccc is the interface to the C compilation system.  The compi-
     lation  tools  conceptually  consist of a preprocessor, com-
     piler, code  generator,  optimizer,  basic  block  analyzer,
     assembler,  and  link  editor.   cccccccc  processes  the supplied
     options and then executes the various tools with the  proper
     arguments.  cccccccc accepts several types of files as arguments.

     Files whose names end with ....cccc are taken to be C source files
     and  may  be preprocessed, compiled, optimized, instrumented
     for profiling, assembled, and link edited.  The  compilation
     process  may  be stopped after the completion of any pass if
     the appropriate options are supplied.   If  the  compilation
     process  runs  through the assembler, then an object file is
     produced whose name is that of the source  with  ....oooo  substi-
     tuted for ....cccc.  However, the ....oooo file is normally deleted if a
     single C file is compiled and then immediately link  edited.
     In the same way, files whose names end in ....ssss are taken to be
     assembly source  files;  they  may  be  assembled  and  link
     edited.   Files  whose  names  end  in  ....iiii  are  taken to be



SunOS 5.5.1       Last change: 6 December 1993                  1






cc(1)                     User Commands                     cc(1)



     preprocessed C source  files,  and  they  may  be  compiled,
     optimized,  instrumented  for profiling, assembled, and link
     edited.  Files whose names do not end in ....cccc, ....ssss, or  ....iiii  are
     handed  to  the  link  editor,  which produces a dynamically
     linked executable whose name by default is aaaa....oooouuuutttt.

     The following options are interpreted by cccccccc:

     ----####    Show each component as it is invoked (verbose mode).

     -###  Show each component as it is invoked, but, unlike the
          -# option, do not actually execute.

     ----AAAAname[((((tokens))))]
          Associate name as a predicate with the specified tokens
          as if by a ####aaaasssssssseeeerrrrtttt preprocessing directive.
          Preassertions:ssssyyyysssstttteeeemmmm((((uuuunnnniiiixxxx))))
                      ccccppppuuuu((((ssssppppaaaarrrrcccc))))
                      mmmmaaaacccchhhhiiiinnnneeee((((ssssppppaaaarrrrcccc))))

          The above are not predefined in -Xc mode.

          If -A is followed by a dash (-)  only,  it  causes  all
          predefined macros (other than those that begin with __)
          and predefined assertions to be forgotten.

     -Bc   c can be either ddddyyyynnnnaaaammmmiiiicccc or ssssttttaaaattttiiiicccc.  ----BBBB ddddyyyynnnnaaaammmmiiiicccc  causes
          the  link  editor  to  look for files named lllliiiibbbbx....ssssoooo and
          then for files named lllliiiibbbbx....aaaa when given the ----llllx  option.
          ----BBBB ssssttttaaaattttiiiicccc causes the link editor to look only for files
          named lllliiiibbbbx....aaaa.  This option may  be  specified  multiple
          times on the command line as a toggle.  This option and
          its argument are passed to lllldddd.

     -C    Cause the preprocessor  to  pass  along  all  comments
          other than those on preprocessing directive lines.

     -c    Suppress the link editing phase of the compilation and
          do not remove any produced object files.

     ----DDDDname[=tokens]
          Associates name with the specified tokens as  if  by  a
          ####ddddeeeeffffiiiinnnneeee  preprocessing  directive.   If  no  ====tokens is
          specified, the token 1111 is supplied.
          Predefinitions:ssssppppaaaarrrrcccc
                      ssssuuuunnnn
                      uuuunnnniiiixxxx

          The above are not predefined in ----XXXXcccc mode.
          These predefinitions are valid in all modes:
                   __sparc,
                   __unix,



SunOS 5.5.1       Last change: 6 December 1993                  2






cc(1)                     User Commands                     cc(1)



                   __sun,
                   __BUILTIN_VA_ARG_INCR
                   __SUNPRO_C=0x300
                   __SVR4

     -dc   c can be either yyyy or nnnn.  ----ddddyyyy specifies  dynamic  link-
          ing,  which  is  the  default, in the link editor.  ----ddddnnnn
          specifies static linking  in  the  link  editor.   This
          option and its argument are passed to lllldddd.

     -dalign
          Generate double load/store instructions wherever possi-
          ble  for improved performance.  Assume that all double-
          typed data are double aligned, and should not  be  used
          when correct alignment is not assured.

     -E    Preprocess only the named C files and send the  result
          to  the  standard  output.   The  output  will  contain
          preprocessing directives for use by the  next  pass  of
          the compilation system.

     -F    Reserved for floating-point options.

     -fast
          Select the optimum combination of  compilation  options
          for  speed.   This  should provide close to the maximum
          performance for most realistic  applications.   Modules
          compiled with -fast , must also be linked with -fast .

          It is a convenience option, and it chooses the  fastest
          code  generation  option  available on the compile-time
          hardware, the optimization level -xO2, a set of  inline
          expansion   templates,  the   - fnonstd  floating-point
          option, the -dalign option, and it adds -lm to link  in
          the math library.

          If you combine - fast  with  other  options,  the  last
          specification applies.  The code generation option, the
          optimization level and using inline template files  can
          be  overridden  by  subsequent  switches.  For example,
          although the optimization part of -fast is  - xO2,  the
          optimization part of -fast -xO1 is -xO1.

          Do not use this option for programs that depend on IEEE
          standard  exception  handling;  you  can  get different
          numerical results, premature  program  termination,  or
          unexpected SIGFPE signals.

     -fd   Reports old style function  declarations  and  defini-
          tions.

     -flags



SunOS 5.5.1       Last change: 6 December 1993                  3






cc(1)                     User Commands                     cc(1)



          Print a one-line summary of available options.

     -fnonstd
          Cause  non-standard  initialization  of  floating-point
          arithmetic  hardware.   By  default, IEEE 754 floating-
          point arithmetic is nonstop, and  underflows  are  gra-
          dual.   The -fnonstd option causes hardware traps to be
          enabled for floating-point overflows, division by zero,
          and  invalid operation exceptions.  These are converted
          into SIGFPE signals, and if the program has  no  SIGFPE
          handler,  it  will  terminate  with  a memory dump (see
          ieee_handler(3m)).   - fnonstd  also  causes  the  math
          library to be linked in (by passing -lm to the linker).

     -fsimple
          Simple floating-point model.  Allow optimization  using
          mathematically  equivalent  expressions.  The optimizer
          is allowed to act as if a simple  floating-point  model
          holds  during compilation and runtime. It is allowed to
          optimize without regard to roundoff or numerical excep-
          tions.   That  is, the optimizer can assume the follow-
          ing:
          o  The IEEE 754 default  rounding  and  trapping  modes
          hold.
          o  No exceptions arise other than inexact.
          o  The program does not  test for inexact exceptions.
          o  There are no infinities or NaNs.
          o  The program does not depend on distinguishing by the
          sign of zero.

     -fsingle
          (-Xt and -Xs modes only)  Cause the compiler to  evalu-
          ate  float expressions as single precision, rather than
          double precision.  (This option has no  effect  if  the
          compiler  is  used in either -Xa or -Xc modes, as float
          expressions are already evaluated as single precision.)

     -G    Direct the link editor  to  produce  a  shared  object
          rather  than  a  dynamically  linked  executable.  This
          option is passed to lllldddd.  It cannot be used with the ----ddddnnnn
          option.

     - g    Produces  additional  symbol  table  information  for
          dbx(1)  and  debugger(1).   This option no longer over-
          rides -O and -xO .

     -H    Print, one per  line,  the  path  name  of  each  file
          included during the current compilation on the standard
          error output.

     -h    Assign a name to a shared dynamic library; allows  you
          to keep different versions of a library.



SunOS 5.5.1       Last change: 6 December 1993                  4






cc(1)                     User Commands                     cc(1)



     -Idir
          Look in  dir,  prior  to  the  usual  directories,  for
          included files whose names do not begin with slash (/).
          Directories for multiple ----IIII options are searched in the
          order specified.

     -i    Ignore the LD_LIBRARY_PATH setting.

     -K PIC
          Produce position-independent code.  Each reference to a
          global  datum  is  generated  as  a  de-reference  of a
          pointer in the global offset table.  Each function call
          is  generated  in pc-relative addressing mode through a
          procedure linkage table.

          -K PIC allows the global offset table to span the range
          of 32-bit addresses in those rare cases where there are
          too many global data objects for -K pic.

     -K pic
          Like -K PIC , except that the size of the global offset
          table is limited to 8K.

     -keeptmp
          Retain  temporary  files  created  during  compilation,
          instead of deleting them automatically.

     -Ldir
          Add  dir  to  the  list  of  directories  searched  for
          libraries  by  lllldddd.   This  option  and its argument are
          passed to lllldddd.

     -lname
          Search the library lllliiiibbbbname....ssssoooo or lllliiiibbbbname....aaaa.  The order-
          ing  of  libraries in the command line is important, as
          symbols are resolved from left to right.   This  option
          and its argument are passed to lllldddd.

     -mc   This flag allows you to remove duplicate strings  from
          the ....ccccoooommmmmmmmeeeennnntttt section of an object file.

     -misalign
          Generate  code  to  allow  loading   and   storage   of
          misaligned data.

     -mr   This flag allows you to remove all  strings  from  the
          ....ccccoooommmmmmmmeeeennnntttt section of an object file.

     -mr,<string>
          This flag removes all strings from the ....ccccoooommmmmmmmeeeennnntttt section
          and  inserts  <string>  in  the ....ccccoooommmmmmmmeeeennnntttt section of the
          object file. If <string> is null, the ....ccccoooommmmmmmmeeeennnntttt  section



SunOS 5.5.1       Last change: 6 December 1993                  5






cc(1)                     User Commands                     cc(1)



          will be empty.






















































SunOS 5.5.1       Last change: 6 December 1993                  6






cc(1)                     User Commands                     cc(1)



     -mt   Passes D_REENTRANT to preprocessor. Also, appends  ---- llll
          thread.   Use  multi-thread safe libraries.  If you are
          doing your own multi-thread coding, then you  must  use
          the   -mt option in the compile and link steps.  To get
          faster code, this option requires a multiprocessor sys-
          tem.  On  a  single-processor system the generated code
          usually runs slower with this option.

     -native
          Best native floating  point.   Decide  which  floating-
          point options are available on the machine the compiler
          is running on, and generate code for the best one.

     -noqueue
          Tells the compiler to not  queue  your  request  if  no
          license if available.

     -O    Equivalent to -xO2 .

     -opathname
          Produce an output object file pathname, instead of  the
          default aaaa....oooouuuutttt.  This option and its argument are passed
          to lllldddd.

     -P    Preprocess only the named C files and leave the result
          in  corresponding  files  suffixed ....iiii.  The output will
          not contain any preprocessing line directives, unlike ----
          EEEE.

     -p    Produce code that counts the number of times each rou-
          tine is called; also, if link editing takes place, link
          profiled versions of lllliiiibbbbcccc....aaaa and lllliiiibbbbmmmm....aaaa (with  the  ---- llllmmmm
          option).   A mmmmoooonnnn....oooouuuutttt file will then be produced at nor-
          mal termination of execution of the object program.  An
          execution profile can then be generated by use of pppprrrrooooffff.

     -Qc   c can be either yyyy or nnnn.  If  c  is  yyyy,  identification
          information about each invoked compilation tool will be
          added to the output files (the default behavior).  This
          can   be   useful  for  software  administration.   ----QQQQnnnn
          suppresses this information.

     -qc   c can be either llll or pppp.  ----qqqqllll causes the invocation  of
          the  basic  block analyzer and arranges for the produc-
          tion of code that  counts  the  number  of  times  each
          source line is executed.  A listing of these counts can
          be generated by use of llllpppprrrrooooffff.  (Note  that  llllpppprrrrooooffff  will
          not be supported in future releases.)  ----qqqqpppp is a synonym
          for ----pppp.  -q cannot be used with the -O or -xO options.

     -R path
          A colon-separated list of directories used  to  specify



SunOS 5.5.1       Last change: 6 December 1993                  7






cc(1)                     User Commands                     cc(1)



          library  search  directories to the runtime linker.  If
          present and not null, it  is  recorded  in  the  output
          object  file and passed to the runtime linker.  If both
          LD_RUN_PATH and the -R option  are  specified,  the  -R
          option takes precedence.

          Use this option if you want your users to  be  able  to
          run  your  executables without a special path option to
          find your dynamic libraries.

     -S    Compile, optimize (if ---- OOOO  is  present),  and  do  not
          assemble   or   link  edit  the  named  C  files.   The
          assembler-language  output  is  left  in  corresponding
          files suffixed ....ssss.

     -s    Removes all symbolic debugging  information  from  the
          output object file.  This option is passed to ld(1).






































SunOS 5.5.1       Last change: 6 December 1993                  8






cc(1)                     User Commands                     cc(1)



     -Uname
          Cause any definition of name to be undefined, as if  by
          a  ####uuuunnnnddddeeeeffff preprocessing directive.  If the same name is
          specified for both ----DDDD and ---- UUUU,  name  is  not  defined,
          regardless of the order of the options.

     -V    Cause each invoked tool to print its version  informa-
          tion on the standard error output.

     -v    Cause the compiler to perform more and stricter seman-
          tic  checks,  and to enable certain lllliiiinnnntttt-like checks on
          the named C files.

     ----WWWW tool,,,,arg1[,,,,arg2 ...]
          Hand off the argument(s) argi each as a separate  argu-
          ment to tool.  Each argument must be separated from the
          preceding by only a comma.  (A comma can be part of  an
          argument  by  escaping  it  by an immediately preceding
          backslash (\\\\) character; the backslash is removed  from
          the  resulting  argument.)  tool can be one of the fol-
          lowing:

               aaaa    assembler (fbe)
               c    C code generator (cg)
               llll    link editor (ld)
               pppp    preprocessor (cpp)
               0000    compiler (acomp)
               2222    optimizer (iropt)

          For example, ----WWWWaaaa,,,,----oooo,,,,objfile passes ----oooo  and  objfile  to
          the  assembler,  in that order; also ----WWWWllll,,,,----IIII,,,,name causes
          the linking phase to override the default name  of  the
          dynamic linker, ////uuuussssrrrr////lllliiiibbbb////lllldddd....ssssoooo....1111.

          The order in which the argument(s) are passed to a tool
          with  respect  to  the  other  specified  command  line
          options may change.

     -w    Do not print warnings when compiling.

     ----XXXX [a|c|s|t ]
          Specify the degree of conformance to the ANSI  C  stan-
          dard.  Specify one of the following:

          aaaa (ANSI)
               ANSI C plus Sun C compatibility  extensions,  with
               semantic  changes required by ANSI C.  Where Sun C
               and ANSI C specify  different  semantics  for  the
               same  construct,  the compiler will issue warnings
               about the conflict and use the ANSI C  interpreta-
               tion.




SunOS 5.5.1       Last change: 6 December 1993                  9






cc(1)                     User Commands                     cc(1)



          cccc (conformance)
               Maximally conformant ANSI C, without Sun C  compa-
               tibility  extensions.   The  compiler  will reject
               programs that use non-ANSI C constructs.

          ssss (Sun C)
               The compiled language includes all features compa-
               tible  with  (pre-ANSI) Sun C.  The compiler warns
               about all language constructs that have  differing
               behavior between Sun ANSI C and the old Sun C.













































SunOS 5.5.1       Last change: 6 December 1993                 10






cc(1)                     User Commands                     cc(1)



          tttt (transition)
               ANSI  C  plus  Sun  C  compatibility   extensions,
               without  semantic  changes  required  by  ANSI  C.
               Where Sun C and ANSI C specify different semantics
               for  the  same  construct, the compiler will issue
               warnings about the conflict  and  use  the  Sun  C
               interpretation.  This is the default mode.

          The predefined macro __SSSSTTTTDDDDCCCC__ has the value 0000 for  ---- XXXXtttt
          and  ---- XXXXaaaa, and 1111 for ----XXXXcccc.  (It is not defined for -Xs.)
          All warning messages about differing  behavior  can  be
          eliminated through appropriate coding; for example, use
          of casts can eliminate the  integral  promotion  change
          warnings.

     -xa   Insert code to count how many times each  basic  block
          is  executed.   Invokes  a  runtime recording mechanism
          that creates a .d file for every  .c  file  (at  normal
          termination).   The  .d file accumulates execution data
          for the corresponding source file.  The tcov(1) utility
          can  then be run on the source file to generate statis-
          tics about the program.  This  option  is  incompatible
          with -g .

     -xcg89
          Generate code to run on the SPARC  platform.   This  is
          the default option.

     -xcg92
          Generate code for machines implementing SPARC V8  (such
          as the SPARCstation-10 series); in particular, the fol-
          lowing instructions may be  generated  in-line:   smul,
          smulcc,  sdiv,  sdivcc, umul, umulcc, udiv, udivcc, and
          fsmuld.  In addition, the built-in assembler pass  will
          perform  TI,TMS390Z5x-specific  instruction  scheduling
          automatically.  Code compiled with -xcg92 will run, but
          possibly much more slowly on pre- SPARC V8 machines; as
          such the practice is strongly discouraged.

     -xCC  Accepts the C++ style  comments.  In  particular,  the
          "//" can be used to indicate the start of a comment.

     -xe   Performs only error checking on the source  file,  but
          does not produce any object or executable file.

     -xF   Enables performance analysis of the  executable  using
          the SPARCWorks Analyzer and Debugger.  (See analyzer(1)
          and debugger(1) man pages.)  Produces code that can  be
          reordered  at the function level.  Each function in the
          file is placed in  a  separate  section;  for  example,
          functions  foo()  and  bar() will be placed in the sec-
          tions .text%foo and .text%bar , respectively.  Function



SunOS 5.5.1       Last change: 6 December 1993                 11






cc(1)                     User Commands                     cc(1)



          ordering in the executable can be controlled by using -
          xF in conjunction with the -M option to ld (see ld(1)).

     -xinline=rlst
          For user-written routines, try  to  inline  only  those
          named  in the list rlst.  It tries routines only in the
          file being compiled.  The  list  is  a  comma-separated
          list of functions and subroutines.

          If compiling with -xO3, this can increase  optimization
          by  inlining  some  routines.   The -xO3 option inlines
          none by itself.











































SunOS 5.5.1       Last change: 6 December 1993                 12






cc(1)                     User Commands                     cc(1)



          If compiling with -xO4, this can decrease  optimization
          by  restricting  inlining to only those routines in the
          list. With -xO4, iropt normally  tries  to  inline  all
          user-written subroutines and functions.

          A routine is not inlined if any of the following  apply
          (no warning):
          o  Optimization is less than ----xxxxOOOO3333
          o  The routine cannot be found
          o  Inlining the routine does  not  look  profitable  or
          safe to iropt
          o  The source for the routine is not in the file  being
          compiled

     -xlibmieee
          Force IEEE 754 style return values for math routines in
          exceptional  cases.   In such cases, no exeception mes-
          sage will be printed, and errno will not be set.

     -xlibmil
          Include inline expansion templates for the math library
          (libm).

     -xlicinfo
          Does not check out a license but returns information on
          the status of licensing.

     -xM   Runs the ANSI preprocessor on the  named  C  programs,
          generates makefile dependencies and sends the result to
          the standard output  (see  make(1)  for  details  about
          makefiles  and  dependencies).  Specifying -xM with -Xs
          runs the pre-ANSI preprocessor, /usr/ccs/lib/cpp .

     -xM1  Same as -xM except that -xM1 does not report dependen-
          cies for ////uuuussssrrrr////iiiinnnncccclllluuuuddddeeee header files.  For example:
               mmmmoooorrrreeee hhhheeeelllllllloooo....cccc
               #include <stdio.h>
               main()
               {
                   (void) printf ("hello0);
               }
               cccccccc ----xxxxMMMM hhhheeeelllllllloooo....cccc
               hello.o: hello.c
               hello.o: /usr/include/stdio.h
          Compiling with ----xxxxMMMM1111 does not report header file dependencies:
               cccccccc ----xxxxMMMM1111 hhhheeeelllllllloooo....cccc
               hello.o: hello.c

     -xMerge
          Directs cc to merge the data segment with the text seg-
          ment.   Data initialized in the object file produced by
          this compilation is read-only and (unless  linked  with



SunOS 5.5.1       Last change: 6 December 1993                 13






cc(1)                     User Commands                     cc(1)



          ld-N) is shared between processes.

     -xnolib
          Does not link any libraries by default; that is, no - l
          options  are  passed  to  ld  . Normally, the cc driver
          passes -lc to ld .

















































SunOS 5.5.1       Last change: 6 December 1993                 14






cc(1)                     User Commands                     cc(1)



          When you use -xnolib , you have to pass all -l  options
          yourself. For example:
               cc test.c -xnolib -Bstatic -lm -Bdynamic -lc
          links libm statically and the other  libraries  dynami-
          cally.

     -xnolibmil
          Reset -fast so that it does  not  include  inline  tem-
          plates.  Use this after the -fast option:
          cc fast xnolibmil ...

     -xO[level]
          Optimizes for execution time.  Ignored when either -xpg
          ,   - xa or -ql is used.  (May be used with -g.)  -O is
          equivalent to -xO2.  (Note that the ---- qqqqllll  will  not  be
          supported  in  future  releases.   Use ----xxxxaaaa option.  See
          ttttccccoooovvvv(1) for more information.)  level is one of:

               1    Do only the minimum  amount  of  optimization
                    (peephole).   This is postpass assembly-level
                    optimization.

               2    Do basic local and global optimization.  This
                    is  induction variable elimination, local and
                    global  common   subexpression   elimination,
                    algebraic  simplification,  copy propagation,
                    constant propagation, loop-invariant  optimi-
                    zation,   register  allocation,  basic  block
                    merging,  tail  recursion  elimination,  dead
                    code  elimination,  tail call elimination and
                    complex expression expansion.

                    The -xO2 level does not  optimize  references
                    or definitions for external or indirect vari-
                    ables.  In general, the -xO2 level results in
                    minimum code size.

               3    Beside what -xO2 does,  this  also  optimizes
                    references and definitions for external vari-
                    ables.  The -xO3 level  does  not  trace  the
                    effects of pointer assignments.  Do not use -
                    xO3 when compiling either device drivers,  or
                    programs  that modify external variables from
                    within signal handlers.  In general, the -xO3
                    level results in increased code size.

               4    Besides what   - xO3  does,  this  also  does
                    automatic  inlining of functions contained in
                    the same file; this usually  improves  execu-
                    tion  speed.   In  general,  the   -xO4 level
                    results in increased code size.




SunOS 5.5.1       Last change: 6 December 1993                 15






cc(1)                     User Commands                     cc(1)



               If the optimizer runs out of memory, it  tries  to
               recover  by  retrying  the  current procedure at a
               lower level of optimization and resumes subsequent
               procedures  at the original level specified in the
               command-line option.

               If you optimize at -xO3 or -xO4  with  very  large
               procedures (thousands of lines of code in a single
               procedure), the optimizer may require an unreason-
               able amount of memory.  In such cases, performance
               of the machine may degraded.  You can prevent this
               in  the  C-shell by limiting the amount of virtual
               memory available to a single process.  To do this,
               use the limit command (see csh(1)).

     -xP   Print function prototypes for all old-style  functions
          in this compilation unit.

     -xpg  Prepare the object code to collect data for  profiling
          with  gprof(1).   Invokes a runtime recording mechanism
          that produces a gmon.out file (at normal termination).

     -xs   Pass the -s option to the assembler.  Use this only in
          cases  where  stabs must remain in the .stab section of
          the executable, and not in  .stab.excl  (the  default).
          This  older method of implementing symbol tables causes
          the loader to link more slowly and for dbx to  initial-
          ize more slowly.

      - xsb  Generate  data  in  the  .sb(5)  directory  for  the
          sbrowser(1)  program,  which  is included in the SPARC-
          works product.

     -xsbfast
          Generate  data  in  the  .sb(5)   directory   for   the
          sbrowser(1)  program,  which  is included in the SPARC-
          works product.  Do not actually compile.

     -xstrconst
          Insert string literals into the text segment instead of
          the data segment.

     -xtime
          Reports the time spent compiling each component.

     ----xxxxuuuunnnnrrrroooollllllll====n
          Specifies  whether  or  not  the   compiler   optimizes
          (unrolls)  loops.   n is a positive integer.  When n is
          1, it is a command and the compiler unrolls  no  loops.
          When  n  is  greater than 1, the ----xxxxuuuunnnnrrrroooollllllll====n merely sug-
          gests to the compiler that unrolled loops be unrolled n
          times.



SunOS 5.5.1       Last change: 6 December 1993                 16






cc(1)                     User Commands                     cc(1)



     ----YYYY item,,,,dir
          Specify a new directory dir for the location  of  item.
          item  can consist of any of the characters representing
          tools listed under the ----WWWW option or the following char-
          acters   representing  directories  containing  special
          files:

          IIII    directory searched last for include files:  INCDIR
               (see ----IIII)
          SSSS    directory containing the  start-up  object  files:
               LIBDIR
          PPPP    Change the default directories  used  for  finding
               libraries. dir is a colon-separated path list.

          If the location of a tool is being specified, then  the
          new  path  name for the tool will be dir////tool.  If more
          than one  ----YYYY  option is applied to any one  item,  then
          the last occurrence holds.

     ----YYYYAAAA,,,,dir
          Specify a directory dir to search for all compiler com-
          ponents.   If  a  component  is  not  found in dir, the
          search reverts to the directory where the  compiler  is
          installed.

     cccccccc recognizes ----aaaa, ----eeee, ----hhhh, ----rrrr, ----tttt,  ----uuuu,  and  ----zzzz  and  passes
     these options and their arguments to lllldddd.  cccccccc also passes any
     unrecognized options to lllldddd with a warning.

ENVIRONMENT
     TMPDIR    cc normally creates temporary files in the  direc-
               tory  /tmp.   You may specify another directory by
               setting the environment variable  TMPDIR  to  your
               chosen directory.  (If TMPDIR isn't a valid direc-
               tory, then cc will use /tmp).

     SUNPRO_SB_INIT_FILE_NAME
               The absolute path name of the directory containing
               the  .sbinit(5)  file.  This variable is used only
               if the -xsb or -xsbfast flag is used.

FILES
     a.out                              executable output file
     file.a                             library of object files
     file.c                             C source file
     file.d                             tcov(1)   test   coverage
                                        input file
     file.i                             C   source   file   after
                                        preprocessing
     file.il                            inline(1) expansion file
     file.o                             object file
     file.s                             assembler source file



SunOS 5.5.1       Last change: 6 December 1993                 17






cc(1)                     User Commands                     cc(1)



     file.tcov                          output from tcov(1)
     acomp                              compiler front end
     cc                                 compiler   command   line
                                        driver
     cg                                 code generator
     crt1.o                             runtime startup code
     crti.o                             runtime startup code
     crtn.o                             runtime startup code
     fbe                                assembler
     gcrt1.o                            startup   for   profiling
                                        with gprof(1)
     gmon.out                           default profile file  for
                                        ----xxxxppppgggg
     iropt                              global optimzer
     mcrt1.o                            start-up  for   profiling
                                        with prof(1) and intro(3)
     mon.out                            default profile file  for
                                        ----pppp
     pcrt1.o                            start  up  for  profiling
                                        with lprof
     .sb                                The  directory  used   to
                                        store   sbrowser(1)  data
                                        when the -xsb or -xsbfast
                                        flag is used.
     .sbinit                            A  file  containing  com-
                                        mands  which  can be used
                                        to specify  the  location
                                        of  the .sb directory and
                                        to control the  execution
                                        of sbcleanup
     sbcleanup                          deletes obsolete files in
                                        the   .sb  directory  and
                                        creates   an   up-to-date
                                        .sb/Index file

SEE ALSO
     as(1),   dbx(1),   ld(1),   lint(1),   lprof(1),    prof(1),
     monitor(3C), sbrowser(1), .sb(5), .sbinit(5), tmpnam(3S)
     The SPARCompiler C User's Guide.
     SPARCompiler C Transition Guide.
     Browsing Source Code.
     Kernighan, B. W., and Ritchie,  D.  M.,  The  C  Programming
     Language, Second Edition, Prentice-Hall, 1988.
     American National Standard for Information  Systems  -  Pro-
     gramming Language C, X3.159-1989.










SunOS 5.5.1       Last change: 6 December 1993                 18



