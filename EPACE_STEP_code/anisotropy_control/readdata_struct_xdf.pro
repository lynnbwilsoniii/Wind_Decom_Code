pro readdata_struct_xdf, filename, Nmax_row, xdf,indextocut=indextocut,cutrange=cutrange; structure output format; Reads asci data file for the STEP and ULEIS instruments and produces either; standard output or histogram output depending upon type; filename is the input file name; data is an array containing the read data; titles is an array of strings containing the name of each column; header is a string array containing the file header; Nmax_row is the maximum number to data entries to read;; datatime is an array containing the time data for each histogram if histogram format; histinfo is an array containing the histogram parameters if histogram format;  Assumptions:;   1. The first column is the date and time in the form " 4/ 2/1995   0:30:51".;   2. The titles always follow the line with '****** titles ******';    ;; 7/8/98 by J. Dwyer;    3/16/99 added indextocut and cutrangedocut = 1if ((keyword_set(indextocut) eq 0)or(keyword_set(cutrange) eq 0)) then begin docut = 0 indextocut = 0 cutrange= [0,0]endifdatatime = 0histinfo = 0openr, unit, filename, /get_lun     ; open datafile for readinglinestring = ' '            ; string containing one line of headerrownumber = 0L                           ; number of rows readNoffset = -1   header = strarr(1000)   for i = 0,10 do begin  readf, unit, linestring  header(i) = linestring  nheader = i+1endfor          linestring = strtrim(linestring,1)data_type = fix(strmid(linestring,21,3))  if ((data_type ne 1)and(data_type ne 2)and(data_type ne 3)and(data_type ne 4)) then begin  print, 'Not correct data type to be read by readdata_uleis!'  print, 'data type = ',data_type  stopendif   titlestring = ' 'Emin = 0.0Emax = 0.0effmin = 0.0effmax = 0.0eff = 0.0ROMboxinfo = fltarr(100,5)ROMboxnames = strarr(100)if ((data_type eq 1)or(data_type eq 2)) then begin  print, 'Standard data output.'   for i = 11,999 do begin    readf, unit, linestring    Noffset = strpos(linestring,'ROM box energy ranges:')     header(i) = linestring    nheader = i+1    if (Noffset ge 0) then begin      readf, unit, linestring          header(nheader) = linestring      nheader = nheader+1      stringl = string(30+Noffset)      stringl = strtrim(stringl,2)      readformat = '(A'+stringl+',5(F))'  ; format of each row in data file      for j = 0,999 do begin           readf, unit, linestring  ; read data        rowstring = str_sep(linestring, ',')        Emin = float(rowstring(1))        Emax = float(rowstring(2))        effmin = float(rowstring(3))        effmax = float(rowstring(4))        eff = float(rowstring(5))        ROMboxnames(j) = rowstring(0)        ROMboxinfo(j,0) =  Emin        ROMboxinfo(j,1) = Emax        ROMboxinfo(j,2) = effmin        ROMboxinfo(j,3) = effmax        ROMboxinfo(j,4) = eff        header(nheader) = linestring        nheader = nheader+1        Noffset = strpos(ROMboxnames(j),'End of list!')        if (Noffset ge 0) then begin          if (j gt 0) then ROMboxinfo = ROMboxinfo(0:(j-1),*) else ROMboxinfo = ROMboxinfo(0,*)          if (j gt 0) then ROMboxnames = ROMboxnames(0:(j-1)) else ROMboxnames = ROMboxnames(0)          j = 1000        endif      endfor       i = 1000     endif    endfor  for i = nheader,999 do begin    readf, unit, linestring    Noffset = strpos(linestring,'****** titles ******')     header(i) = linestring    nheader = i+1    if (Noffset ge 0) then i = 1000  endfor  header = header(0:(nheader-1))  Noffset = Noffset - 1  readf, unit, linestring  getheader, linestring,titles, Ncolumns  ; put header string into an array  stringl = string(21+Noffset)  stringl = strtrim(stringl,2)  readformat = '(A'+stringl+','+string(Ncolumns)+'(E))'  ; format of each row in data file  data = fltarr(Nmax_row, Ncolumns)    ; double array containing data     row = fltarr(Ncolumns)                ; used to read in one row of data, skips time column  timetemp = ''      ; used to read time string  ; time = strarr(Nmax_row)  ; string containing time  stopreading = 0  ; flag to stop reading data file. 1 = stop  while not ((EOF(unit))or(stopreading eq 1)) do begin      readf, unit, timetemp, row, format=readformat  ; read data     data(rownumber, 0:(Ncolumns-1)) = row        ;time(rownumber) = strmid(timetemp,0,20)          if (docut eq 1) then begin       if ((row(indextocut) gt cutrange(0))and(row(indextocut) le cutrange(1))) then begin         if ((rownumber mod 1000) eq 0) then print, 'row number:', rownumber           rownumber = rownumber+1                   endif     endif else begin       if ((rownumber mod 1000) eq 0) then print, 'row number:', rownumber       rownumber = rownumber+1      endelse     if (rownumber eq Nmax_row) then begin  ; Is data array full?       print, "data array full. Stopped reading input data file."       stopreading  = 1  ; stop reading data     endif  endwhile  free_lun, unit  ; close datafile   openw, unit, 'titles.dat', /get_lun   ; open output log file   printf,unit, 'column number:       column name:'   for i = 0, Ncolumns-1 do printf,unit, i, '               ', titles(i)   free_lun, unit ; close log file  data = temporary(data(0:(rownumber-1),*))  ; reduce size of array to match number of rows actually read  ; time = temporary(time(0:(rownumber-1)))  ; gettime, time, data        xdf = {nuc:' ', filename:filename,titles:titles,header:header,ROMboxinfo:ROMboxinfo,ROMboxnames:ROMboxnames,data:data}endifif (data_type eq 3) then begin  print, 'Histogram data type.'          openw, unitout, 'titles_hist.dat', /get_lun   ; open output log file  printf,unitout, 'histogram parameters:'  printf,unitout, 'column number, title, N bins, minx, maxx, logflag'                  for i = 11,999 do begin    readf, unit, linestring    Noffset = strpos(linestring,'array dimension = ')     header(i) = linestring    nheader = i+1    if (Noffset ge 0) then i = 1000  endfor  Noffset = Noffset - 1  linestring = strtrim(linestring,1)  array_dim = fix(strmid(linestring,18,5))    stringl = string(20+Noffset)  stringl = strtrim(stringl,1)  readformat1 = '(A'+stringl+',A2,I,F,F,I)'  array_title = ' '  scomma = ' '  Nhist1 = 0  xmin1 = 0.0  xmax1 = 0.0  logflag1= 0  Nall = 1L  histinfo = fltarr(array_dim,4)   for i = 0, array_dim-1 do begin      readf, unit, array_title,scomma,Nhist1,xmin1,xmax1,logflag1, format=readformat1    printf,unitout,i,'      ',array_title,Nhist1,xmin1,xmax1,logflag1    histinfo(i,0) = 1.0*Nhist1    histinfo(i,1) = xmin1    histinfo(i,2) = xmax1    histinfo(i,3) = 1.0*logflag1    Nall = Nall*histinfo(i,0)  endfor  for i = nheader,999 do begin    readf, unit, linestring    Noffset = strpos(linestring,'****** titles ******')     header(i) = linestring    nheader = i+1    if (Noffset ge 0) then i = 1000  endfor  header = header(0:(nheader-1))  Noffset = Noffset - 1  readf, unit, linestring  getheader, linestring,titles, Ncolumns  ; put header string into an array  data = fltarr(Nmax_row,Nall)  datatime = fltarr(Nmax_row,3)  rowt = fltarr(3)  row = fltarr(Nall)                ; used to read in one row of data, skips time column  stringl = string(21+Noffset)  stringl = strtrim(stringl,2)  readformat = '(A'+stringl+','+string(Ncolumns)+'(E))'  ; format of each row in data file  timetemp = ''      ; used to read time string  stopreading = 0  ; flag to stop reading data file. 1 = stop  while not ((EOF(unit))or(stopreading eq 1)) do begin      readf, unit, timetemp, rowt, format=readformat  ; read data     readf, unit, row  ; read data       data(rownumber, *) = row     datatime(rownumber, *) = rowt         if ((rownumber mod 1000) eq 0) then print, 'row number:', rownumber     rownumber = rownumber+1        if (rownumber eq Nmax_row) then begin  ; Is data array full?       print, "data array full. Stopped reading input data file."       stopreading  = 1  ; stop reading data     endif  endwhile  free_lun, unit  ; close datafile  data = temporary(data(0:(rownumber-1),*))  ; reduce size of array to match number of rows actually read  datatime = temporary(datatime(0:(rownumber-1),*))  printf,unitout,' '  printf,unitout,'time data:'  printf,unitout, 'column number:       column name:'  for i = 0, Ncolumns-1 do printf,unitout, i, '               ', titles(i)  free_lun, unitout ; close log file    xdf = {filename:filename,titles:titles,header:header,time:datatime,info:histinfo,data:data}endifif (data_type eq 4) then begin  print, 'PHA flux data output.'   for i = 11,999 do begin    readf, unit, linestring    Noffset = strpos(linestring,'****** titles ******')     header(i) = linestring    nheader = i+1    if (Noffset ge 0) then i = 1000  endfor  header = header(0:(nheader-1))  Noffset = Noffset - 1  readf, unit, linestring  getheader, linestring,titles, Ncolumns  ; put header string into an array  stringl = string(21+Noffset)  stringl = strtrim(stringl,2)  readformat = '(A'+stringl+','+string(Ncolumns)+'(E))'  ; format of each row in data file  data = fltarr(Nmax_row, Ncolumns)    ; double array containing data     row = fltarr(Ncolumns)                ; used to read in one row of data, skips time column  timetemp = ''      ; used to read time string  ; time = strarr(Nmax_row)  ; string containing time  stopreading = 0  ; flag to stop reading data file. 1 = stop  while not ((EOF(unit))or(stopreading eq 1)) do begin        readf, unit, timetemp, row, format=readformat  ; read data     data(rownumber, 0:(Ncolumns-1)) = row        ;time(rownumber) = strmid(timetemp,0,20)     if ((rownumber mod 1000) eq 0) then print, 'row number:', rownumber     rownumber = rownumber+1          if (rownumber eq Nmax_row) then begin  ; Is data array full?       print, "data array full. Stopped reading input data file."       stopreading  = 1  ; stop reading data     endif  endwhile   free_lun, unit  ; close datafile   openw, unit, 'titles.dat', /get_lun   ; open output log file   printf,unit, 'column number:       column name:'   for i = 0, Ncolumns-1 do printf,unit, i, '               ', titles(i)   free_lun, unit ; close log file  data = temporary(data(0:(rownumber-1),*))  ; reduce size of array to match number of rows actually read  ; time = temporary(time(0:(rownumber-1)))  ; gettime, time, data        xdf = {nuc:' ', filename:filename,titles:titles,header:header,data:data}endifprint, 'readdata_xdf finished'end ; end readdata_xdfpro getheader, headerstring, titles, Ncolumns;; takes the one string, headerstring, and makes each column name a separate; element of the string array, titles.  Ncolumns is the exact number of columns to be written to data.; The time and date column (#1) is not kept;; 11/28/95 by J. Dwyer;   modified 4/2/98 by J. Dwyer added titles=strtrim(titles,2)titles = str_sep(headerstring, ',')  ; divide up string into piecesn = n_elements(titles)      ; number of columns titles=strtrim(titles,2)n = n-(titles(n-1) eq '')      ; if last element is blank, leave it offtitles = titles(1:(n-1))Ncolumns = n-1  ; leave off time and dateend   ; end getheader