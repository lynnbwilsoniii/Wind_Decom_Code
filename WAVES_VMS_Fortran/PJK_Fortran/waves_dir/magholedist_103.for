	PROGRAM MAGHOLEDIST
C
C	CALCULATES REDUCED DISTRIBUTION FUNCTION IN MAGNETIC HOLE
C
	common /fitblk/ distfun(100,4),tratio,vta,fnorm,vte,npt,nitt
	REAL DFUN(4),APPFUN(4),TRATIO(4),VTA(4),FNORM(4)
	DIMENSION X(25),DX(25),Y(25)
	EXTERNAL FUNFIT
	INTEGER IMAX(4)
	INTEGER IFIND
C	DATA TRATIO / 1.2,2.,15.,4./     ! WEDNESDAY BEST
	DATA TRATIO / 1.39,2.66,29.5,4./
c	DATA VTA /2.,1.,1.,1./
C	DATA VTA /1.364,1.082,.473,1./
C	DATA VTA /1.356,1.243,1.02,1./   ! WEDNESDAY BEST
	DATA VTA /.988,.9471,.9066,1./
C	DATA FNORM /1.052,1.108,1.172,1.58/  ! WEDNESDAY BEST
	DATA FNORM /1.01,1.054,1.088,1.58/
	DATA IMAX /4*0/
	DATA TPARDEG,TPERPDEG / 80000.,80000./
	DATA BRATIO /.75/
	DATA EMASS /.91094E-28/
	DATA BOLTZK /1.3807E-16/
	DATA QE /1.602177E-19/
	DATA PI /3.14159265/
	DATA IFIND /0/
C
      VTE = SQRT(BOLTZK*TPARDEG/EMASS)
      PRINT*,'VTE',VTE
C	PRINT*,'BRATIO',BRATIO
	NPT = 60
      DO N = 1,NPT
	SQPI = SQRT(PI)
	VZ = .05*N*VTE
          DO NIT = 1,3
	    DISTMX = 0.
c	    BRATIO = .25*NIT
	    BRATIO = .35*NIT - .1
	    SALPHA = SQRT(.5*BRATIO/(1.-BRATIO))/VTE
	    ZETA = VZ*SALPHA
C	    ZETA = VZ*SALPHA*sqrt(2.)
	    CALL Z(ZETA,0.,ZR,ZI,DZR,DZI)
	    ERFR = ZI*EXP(ZETA**2)/SQPI -1.
	    ERFI = -ZR*EXP(ZETA**2)/SQPI 
	    ZEXP = .5*(1./(1.-BRATIO))*(VZ/VTE)**2
	    DISTFR = .5*VZ*(1./(1.-BRATIO))*EXP(-ZEXP)*ERFI
     1        *SQPI/SALPHA/(VTE**2)
	    DISTFI =  (.5/SALPHA)*(-ZI*EXP(ZETA**2) + SQRT(PI))
C	    APPROXL = (1./BRATIO)*EXP(-ZEXP)
C	    APPROXS = (VZ/VTE)**2*(1./(1.-BRATIO))*EXP(-ZEXP)
c	    PRINT*,'ZETA',ZETA,DISTFR,APPROXS,APPROXL
C	    PRINT*,'ZETA',ZETA,ZETA**2,ZEXP,DISTFR,DISTFI
	    DFUN(NIT) = DISTFR
	    DISTFUN(N,NIT) = DISTFR
C	    IF(DISTFR.LT.DISTMX.AND.IMAX(NIT).EQ.0) THEN
C		VZMAX(NIT)  = .05*(N-1)*VTE
C		IMAX(NIT) = 1
C	    ELSE
C		DISTMX = DISTFR
C	    ENDIF
C	    PRINT*,'ZETA,Z,ERF',ZETA,ZR,ZI,ERFR,ERFI
C	    VT = VZMAX/.948
C	    VT = VTA(NIT)*VTE
C	    VT = SQRT(2.)*VTE
	    VT = SQRT(2.)*VTA(NIT)*VTE
	    APPFUN(NIT) = EXP(-(VZ/VT)**2) - EXP(-TRATIO(NIT)*(VZ/VT)**2)
	    APPFUN(NIT) =  APPFUN(NIT)/(1. - 1./SQRT(TRATIO(NIT)))
	    APPFUN(NIT) =  APPFUN(NIT)*FNORM(NIT)
	  ENDDO
C	  PRINT*, VZ,(DFUN(IT),IT=1,3),(APPFUN(IT),IT=1,3)
C
C	  WRITE FILE FOR PLOTTING BY MAGHOLE.MGO
	  IF(IFIND.EQ.0) THEN
	    WRITE(49,149) VZ/VTE,(DFUN(IT),IT=1,3),(APPFUN(IT),IT=1,3)
 149	  FORMAT(E12.4,2X,3E12.4,2X,3E12.4)
	  ENDIF
C
	ENDDO
C
	IF(IFIND.NE.0) THEN
	DO NIT = 1,3
	  NITT = NIT
	  X(1) = VTA(NIT)
	  X(2) = TRATIO(NIT)
	  X(3) = FNORM(NIT)
	  DX(1) = .03*X(1)
	  DX(2) = .03*X(2)
	  DX(3) = .03*X(3)
	  DO ITR = 1,30
	    CALL HUNTMN(3,X,DX,Y,FUNFIT,SUMSQ)
	    PRINT*,X(1),X(2),X(3),SUMSQ
	  ENDDO
	VTA(NIT) = X(1)
	TRATIO(NIT) = X(2)
	FNORM(NIT)   = X(3)
	ENDDO
	ENDIF
	STOP
	END
	subroutine funfit(x,sumsq)
c
	common /fitblk/ distfun(100,4),tratio,vta,fnorm,vte,npt,nitt
	REAL DFUN(4),APPFUN,TRATIO(4),VTA(4),FNORM(4)
	real x(25)
c
	SUMSQ = 0.
	COUNT = 1.E-8
	VTAT = X(1)
	TRATIOT = X(2)
	FNORMT  = X(3)
	VT = SQRT(2.)*VTAT*VTE
        DO N = 1,NPT
	    VZ = .05*N*VTE
	    APPFUN = EXP(-(VZ/VT)**2) - EXP(-TRATIOT*(VZ/VT)**2)
	    APPFUN =  APPFUN/(1. - 1./SQRT(TRATIOT))
	    APPFUN =  APPFUN*FNORMT
	    SUMSQ = SUMSQ + (DISTFUN(N,NITT) - APPFUN)**2
	    COUNT = COUNT+1.
	ENDDO
	SUMSQ = SUMSQ/COUNT
	return
	end
C	PROGRAM ZTEST
C	DO 10 I = 0,22
C	ZTR = .4*(I-10)
C	ZTI = .0
C	DO 10 J = 0,6
C	ZTI = J-3
C	CALL Z(ZTR,ZTI,ZR,ZI,DZR,DZI)
C	WRITE(7,100) ZTR,ZTI,ZR,ZI,DZR,DZI
C  10	CONTINUE
C	DO 20 I = 1,20
C	ZTR = I
C	CALL Z(ZTR,ZTI,ZR,ZI,DZR,DZI)
C	WRITE(7,100) ZTR,ZTI,ZR,ZI,DZR,DZI
C  20	CONTINUE
C 100	FORMAT(6E15.7)
C	STOP
C	END
      SUBROUTINE Z(ZTR,ZTI,ZR,ZI,DZR,DZI)
C
C	THIS ROUTINE RETURNS Z(ZETA) AS DEFINED IN EQ.(1) OF
C	FRIED AND CONTE 'THE PLASMA DISPERSION FUNCTION'
C	AND ITS DERIVATIVE.
C
	DOUBLE PRECISION Z2R,Z2I,XN,SR,SI,T,TR,TI,TTR,TTI,U,UR,UI
C      DATA DIV,EXLIM /2.6,80./
      DATA DIV,EXLIM /3.3,80./
C
      TE = ZTR*ZTR - ZTI*ZTI
      IF (ABS(TE)-EXLIM) 100,100,105  
C	ENTRY FOR REASONABLE EXPONENT
  100 CONTINUE
      U=EXP(-TE)
      UR=U*SIN(2.*ZTR*ZTI)*1.772453851 
      UI=U*COS(2.*ZTR*ZTI)*1.772453851
      GO TO 115 
C	ENTRY FOR LARGE (MAGNITUDE) EXPONENT
  105 IF ((ztr*ztr-zti*zti).LT.0..AND.zti.LT.0.) GO TO 110 
C	EXPONENT IS LARGE AND NEGATIVE
      UR=0. 
      UI=0. 
      GO TO 115 
C	EXPONENT IS LARGE AND POSITIVE
  110 U=EXP(EXLIM) 
      UR=U*SIN(2.*ZTR*ZTI)*1.772453851 
      UI=U*COS(2.*ZTR*ZTI)*1.772453851
  115 IF (ZTR*ZTR+ZTI*ZTI-(DIV)**2) 120,120,135 
C	POWER SERIES FOR SMALL ARGUMENT
  120 Z2R=ZTR*ZTR-ZTI*ZTI 
      Z2I=2.*ZTR*ZTI
      TR=-2.*ZTR
      TI=-2.*ZTI
      SR=TR+UR
      SI=TI+UI
      DO 125 N=1,40 
        XN=DFLOAT(N)+.5D00
        T=-(TR*Z2R-TI*Z2I)/XN
        TI=-(TR*Z2I+TI*Z2R)/XN
        TR=T
        SR=SR+TR
        SI=SI+TI
        IF (ABS(ZR)+ABS(ZI)-1.0E+6*(ABS(TR)+ABS(TI))) 125,125,130 
  125   CONTINUE
  130 ZR = SR
      ZI = SI
      DZR = -2.*(1.+SR*ZTR-SI*ZTI)
      DZI = -2.*(SR*ZTI+SI*ZTR)
      RETURN
C	ASYMPTOTIC SERIES FOR LARGE ARGUMENT
  135 SIG = 1.
      IF(ZTI.LT.0.) SIG  = 2.
      IF(ZTI.GT.0.) SIG  = 0.
      SR=QR(1.,0.,ZTR,ZTI) 
      SI=QI(1.,0.,ZTR,ZTI) 
      YR=SR*SR-SI*SI  
      YI=2.*SR*SI 
      TR=YR
      TI=YI
      DZR = -2.*SIG*(ZTR*UR - ZTI*UI) + YR
      DZI = -2.*SIG*(ZTR*UI + ZTI*UR) + YI
      DO 170 N=2,30 
        XN=N-.5D00
        TTR=XN*(TR*YR-TI*YI) 
        TTI=XN*(TR*YI+TI*YR) 
C	EXIT IF TERMS START TO INCREASE
        IF (ABS(TR)+ABS(TI)-ABS(TTR)-ABS(TTI)) 175,165,165
  165   TR=TTR
        TI=TTI
        DZR=DZR+TR
        DZI=DZI+TI
C	EXIT IF TERMS ARE SUFFICIENTLY SMALL
        IF (ABS(DZR)+ABS(DZI)-1.0E+6*(ABS(TR)+ABS(TI))) 170,175,175 
  170   CONTINUE
  175 ZR = -.5*((DZR+2.)*SR - DZI*SI)
      ZI = -.5*((DZR+2.)*SI + DZI*SR)
	RETURN
C 
  180 FORMAT (' EXPONENT TOO LARGE IN Z ',6E15.7) 
      END 
      FUNCTION QR (A,B,C,D)
      QR = (A*C+B*D)/(C*C+D*D)
      RETURN
      END 
      FUNCTION QI (A,B,C,D) 
      QI=(B*C-A*D)/(C*C+D*D)
      RETURN
      END 
      FUNCTION TPR (A,B,C,D,E,F)
      TPR=E*(A*C-B*D)-F*(B*C+A*D) 
      RETURN
      END 
      FUNCTION TPI (A,B,C,D,E,F)
      TPI=F*(A*C-B*D)+E*(B*C+A*D) 
      RETURN
      END 
