	PROGRAM FORSLUND_THRESH
C
C	DERIVED FROM PLOT_DIST WHICH:
C	PLOTS DISTRIBUTION FUNCTIONS RELEVANT TO INSTABILITIES
C		A MODIFICATION DOES ONLY DETAIL NEAR
C		EXPECTED UNSTABLE DERIVATIVE
C
	REAL RATIOM(20),DENS(20),BETAZ(20),TPAR(20),TPERP(20)
	REAL VI(400),VE(400),VTOT(400),FI(400),FE(400),FTOT(400)
	REAL DFTOT(400)
	REAL BETAZSV(10),DFMINSV(10)
	DATA CKMS /2.9979E5/
	DATA EV_EMASS /.511E6/
C
	OPEN(UNIT=3,NAME='OSCARD.DAT',TYPE='OLD')
	READ (3,106) WR,WI,WCYCL,XKX,XKZ,RW,RKX,RKZ,NC,KIT,MODE
C	PRINT   106, WR,WI,WCYCL,XKX,XKZ,RW,RKX,RKZ,NC,KIT,MODE
	WRITE(6,105) WR,WI,WCYCL,XKX,XKZ,RW,RKX,RKZ,NC,KIT,MODE
 105	FORMAT(8E12.5,3I3)
 106	FORMAT(5F10.5,3F5.3,3I2)
	READ(3,101)(RATIOM(I),DENS(I),BETAZ(I),TPAR(I),TPERP(I),I=1,NC)
C	PRINT  101,(RATIOM(I),DENS(I),BETAZ(I),TPAR(I),TPERP(I),I=1,NC)
	WRITE(6,1011)(RATIOM(I),DENS(I),BETAZ(I),TPAR(I),TPERP(I),I=1,NC)
 101	FORMAT(5E10.4)
 1011	FORMAT(5E12.4)
	CLOSE(UNIT = 3)
C
	EV_IONMASS = RATIOM(3)*EV_EMASS
	VEMX = 0.
	VIMX = 0.
	VEMN = 1.E6
	VIMN = 1.E6
	DO I = 1,NC
	  IF(RATIOM(I).LT.0.) THEN
	    VEMX = AMAX1(VEMX,3.*SQRT(TPAR(I))+BETAZ(I))
	    VEMN = AMIN1(VEMN,-3.*SQRT(TPAR(I))+BETAZ(I))
	  ELSE
C	    VIMX = AMAX1(VIMX,3.*SQRT(TPAR(I))+BETAZ(I))
	    VIMN = AMIN1(VIMN,-3.*SQRT(TPAR(I))+BETAZ(I))
	    VIMX = AMIN1(VIMX,-SQRT(TPAR(I)))
	  ENDIF
	ENDDO
	PRINT*,'MAX,MIN VELOCITIES',VEMX,VEMN,VIMX,VIMN
C
C	PLOT ELECTRONS
C
	NPT = 200
C
C	THE FOLLOWING CHANGE PLOTS DETAIL NEAR THE FORSLUND POINT
C
C	VMX = AMAX1(VEMX,VIMX)
C	VMN = AMIN1(VEMN,VIMN)
	VMX = 2.*VIMX
	VMN = 2.*VIMN
C
      TEC_OV_TI = TPAR(1)/RATIOM(3)/TPAR(3)
C
      TEC_OV_TI = 2.*TEC_OV_TI
C
      DO NTEMP = 1,23
	TI_EV = NTEMP + 2.
	TPAR(3) = TI_EV/EV_IONMASS
	TPAR(1) = TEC_OV_TI*TI_EV/EV_EMASS
	TPAR(2) = 5.*TPAR(1)
	DO NCOMP = 1,3
	  TPERP(NCOMP) = TPAR(NCOMP)
	ENDDO
        BETAZSV(1) = .8*BETAZ(1)
        BETAZSV(2) = 1.2*BETAZ(1)
        DO IT = 1,4
          BETAZ(1) = BETAZSV(IT)  
  	  BETAZ(2) = -BETAZ(1)*DENS(1)/DENS(2)
	  PRINT*,'START, IT,BETAZ',IT,BETAZ(1)
	  DFMIN = 1.E8
	  DO N = 1,NPT
	    FE(N) = 0.
	    FI(N) = 0.
	    FTOT(N) = 0.
	    DFTOT(N) = 0.	
	    DO I = 1,NC
	      IF(RATIOM(I).LT.0.) THEN
	  	 VE(N) = VEMN + (VEMX-VEMN)*(N-1)/(NPT-1)		
		 FE(N) = FE(N) + DENS(I)/SQRT(TPAR(I))*
     1		 EXP(-.5*(VE(N)-BETAZ(I))**2/TPAR(I))
	      ELSE
		 VI(N) = VIMN + (VIMX-VIMN)*(N-1)/(NPT-1)		
		 FI(N) = FI(N) + DENS(I)/SQRT(TPAR(I))*
     1		 EXP(-.5*(VI(N)-BETAZ(I))**2/TPAR(I))
	      ENDIF
	      VTOT(N) = VMN + (VMX-VMN)*(N-1)/(NPT-1)		
	      FTOT(N) = FTOT(N) + DENS(I)/SQRT(TPAR(I))/ABS(RATIOM(I))*
     1		EXP(-.5*(VTOT(N)-BETAZ(I))**2/TPAR(I))
	      DFTOT(N) = DFTOT(N) - DENS(I)/SQRT(TPAR(I))/ABS(RATIOM(I))*
     1	      (VTOT(N)-BETAZ(I))*EXP(-.5*(VTOT(N)-BETAZ(I))**2/TPAR(I))
     2	       /TPAR(I)
	    ENDDO			! END OF SUMMING COMPONENTS
	    IF(DFTOT(N).LT.DFMIN) THEN
	      DFMIN = DFTOT(N)
	      VTMIN = VTOT(N)
	    ENDIF
C	    WRITE(77,201) VE(N),FE(N),VI(N),FI(N),VTOT(N),FTOT(N),DFTOT(N)
 201	    FORMAT(7E11.3)
	  ENDDO			! END OF NPT LOOP
	  DFMINSV(IT) = DFMIN
	  PRINT*,'MIN VALUE,VEL',DFMIN,VTMIN
	  PRINT*,'IT,BETAZ,DFMIN',IT,BETAZSV(IT),DFMINSV(IT)  
	  IF(IT.GE.2) THEN
	    BETAZSV(IT+1) = BETAZSV(IT) - (BETAZSV(IT)-BETAZSV(IT-1))
     1	    *DFMINSV(IT)/(DFMINSV(IT)-DFMINSV(IT-1))
	  ENDIF
        ENDDO			! END OF IT LOOP
	WRITE(69,69)  TEC_OV_TI,DENS(2),(TPAR(I),I=1,3),
     1		TI_EV,CKMS*BETAZSV(4),-BETAZSV(4)/SQRT(TPAR(3))
 69	FORMAT(F6.1,F7.3,3E12.4,F7.2,F9.2,F7.2)
	BETAZ(1) = BETAZSV(4)		! NEXT TRY
      ENDDO			! END OF TEMPERATURE LOOP
C
	STOP
	END
