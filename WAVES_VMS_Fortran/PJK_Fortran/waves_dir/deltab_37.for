	PROGRAM DELTAB
C
C	PLOT RESULTS OF OSCARS RUNS WHICH HAVE BEEN STORED IN FOR009
C	RENAMED DELTAB.DAT
C	this program contains a lot of junk left over from oscpub
C
	COMMON /PPAK/ XMIN,XMAX,DELX,YMIN,YMAX,DELY,FILFAC
	COMMON /PLTBLK/ PLT(200,10)
C
	COMMON /MONGOPAR/
     1  X1,X2,Y1,Y2,GX1,GX2,GY1,GY2,LX1,LX2,LY1,LY2,
     1  GX,GY,CX,CY,
     1  EXPAND,ANGLE,LTYPE,LWEIGHT,
     1  CHEIGHT,CWIDTH,CXDEF,CYDEF,PXDEF,PYDEFF,COFFMGO,
     1  TERMOUT,XYSWAPPED,NUMDEV,
     1  PIMGO,USERVAR(10),AUTODOT
C
	CHARACTER*70 CH(30)
	CHARACTER*120  JUNK
C	DIMENSION RATIOM(10),DENS(10),BETAZ(10),TPAR(10),TPERP(10)
	DIMENSION XX(900),YY(900),ZZ(900),SYM(900),BETAPERP(10)
	COMPLEX ROOT(3)
	REAL BETAPAR(10)
C
	DATA TPAR /.15E-4/
	DATA WRSAVE,XKSAVE /1.0014,7.13/
	DATA VGP0 /-1./
	DATA WCYCL /.0062/
C
	ITERM = 3
   	OPEN(UNIT=9,FILE='DELTAB.DAT',TYPE='OLD',READONLY)
	READ (9,105) JUNK
 105	FORMAT(A)
   	OPEN(UNIT=13,FILE='BCOMPON.DAT',TYPE='OLD',READONLY)
C
C	AT PRESENT, FOR K DECREASING:
C
C	  FIRST TRANSVERSE E AT XK = 2.19 BUT NOT RELIABLE UNTIL 1.6
C
  20	CONTINUE
	READ (9,*,END=30) WR,WI,XK,ANG,Q,TPHAS,FRILONG,ELPHS,DELNI
	READ (13,*,END=30) XKB,WRB,EBTOT,ET2,BTR
	IF(ABS(XK-XKB).GT.1.E-3) PRINT*,'ERROR IN MATCHING FILES,XK=',XK
	IF(XK.GT.1.6) THEN
C	  ENTRY FOR LARGE K, USE ALGEBRAIC FORMULAS FROM BOHM-GROSS
	  WR = SQRT(1. + 3.*TPAR*XK**2)
	  EPS = 1.5*XK**2*TPAR
	  VGP = 3.*XK*TPAR/WR
	  XKA = XK
	  WRA = WR
	ELSEIF(XK.GT..2) THEN
C	  ENTRY FOR CALCULATIONS FROM CUBIC SOLVER FOR COLD PLASMA
C		AND ADD BOHM-GROSS TERM
	  A = -XK**2
	  B = (XK**4 - WCYCL**2)/4.
	  C = ((WCYCL*XK*SIND(ANG))**2)/8.
	  CALL CUBIC(A,B,C,ROOT)
C	    FIND ROOT CLOSEST TO PREVIOUS ROOT 
	  EPSAVE = EPS
	  EPS = REAL(ROOT(1))
	  EPST = EPS
	  WR = EPS + 1.
	  TEST = ABS(EPS - EPSAVE)
	  IRS = 1
	  DO IR = 2,3
	    EPS = REAL(ROOT(IR))
	    TESTT = ABS(EPS - EPSAVE)
	    IF(TESTT.LT.TEST) THEN
	      TEST = TESTT
	      IRS = IR
	    ENDIF
	  ENDDO
	  EPS = REAL(ROOT(IRS)) + 1.5*XK**2*TPAR
	  WR = 1. + EPS
	  WRA = WR
	  XKA = XK	  
	print*,'xk,epsave,eps',xk,epsave,eps
	  VGP = (EPSAVE-EPS)/(XKSAVE-XK)
	  IF(VGP.LE.0) VGP = 3.*XKA*TPAR/WRA
	ELSE
C	  ENTRY FOR CALCULATIONS FROM OSCARS	
	  XKA = .5*(XKSAVE+XK)
	  WRA = .5*(WRSAVE+WR)
C	  VGP = 2.*(WRSAVE-WR)/XKA
	  VGP = (WRSAVE-WR)/(XKSAVE-XK)
	  IF(VGP.LE.0) VGP = 3.*XKA*TPAR/WRA
	ENDIF	
	IF(VGP0.LE.0.) VGP0 = VGP
C
C	NORMALIZE E
C
C	this first ETRANS is ratio to Etot at present position
	ETRANS = SQRT(AMAX1(1.-FRILONG,0.))
C	BCGS = XKA*ETRANS/WRA
	BCGS = BTR
C	take magnetic energy into account
	WTOT = 1. + BCGS**2
C	normalize to Langmuir field energy
	ETOT2 = (VGP0/VGP)/WTOT
	ETRANS = SQRT(AMAX1(1.-FRILONG,0.)*ETOT2)
C
C	BCGS = XKA*ETRANS/WRA
	BCGS = BCGS*SQRT(VGP0/VGP)
	WRITE (18,*) XKA,VGP,ETRANS,BCGS
	XKSAVE = XK
	WRSAVE = WR
	EPSAVE = EPS
	GO TO 20
C
 30	CONTINUE
cmar3	IF(1) STOP
	  IF(IMODE.EQ.1) THEN
	    WRXMAXSV = WRXMAX
	    WRYMAXSV = WRYMAX
	    WIXMAXSV = WIXMAX
	    WIYMAXSV = WIYMAX
	  ENDIF
	  RATIO = 160./98.5		! RATIO X TO Y WITH 2 WINDOWS
	  XMAX = AMAX1(RATIO*WRYMAXSV,WRXMAXSV,RATIO,1.)
	  XMAX = 1.1*XMAX
	  XMIN = -.1*XMAX
	  YMAX = XMAX/RATIO
	  YMIN = -.1*YMAX	
	  WRXMAX = XMAX
	  WRYMAX = YMAX
	  WRXMIN = XMIN
	  WRYMIN = YMIN
	  XMAX = AMAX1(RATIO*WIYMAXSV,WIXMAXSV)
	  XMAX = 1.1*XMAX
	  XMIN = -.1*XMAX
	  YMAX = XMAX/RATIO
	  YMIN = -.1*YMAX	
	  WIXMAX = XMAX
	  WIXMIN = XMIN
	  WIYMAX = YMAX
	  WIYMIN = YMIN
C
C	  CALL OSCAMG(5)
C	  CALL OSCAMG(6)
	  print*,'at command list, imode=',imode
	  NCH = 1
	  IF(IMODE.EQ.1) THEN
	    IF(ITERM.LT.0) THEN
	      CH(NCH) = 'PRINTER 1'
	      NCH = NCH+1
	    ELSE
	      CH(NCH) = 'TERMINAL 3'
	      NCH = NCH+1
	      CH(NCH) = 'LOCATION 323. 777. 80. 750.'
	      NCH = NCH+1
	    ENDIF
	    CH(NCH) = 'ERASE'
	    NCH = NCH+1
	  ENDIF
	  CH(NCH) = 'WINDOW 1 2 2'
	  NCH = NCH+1
	  CH(NCH) = 'XCOLUMN 5'
	  NCH = NCH+1
	  CH(NCH) = 'YCOLUMN 6'
	  NCH = NCH+1
	  WRITE(CH(NCH),109) WRXMIN,WRXMAX,WRYMIN,WRYMAX
 109	  FORMAT('LIMITS',E12.3,E11.3,E12.3,E11.3)
	  PRINT*,' WRITE LIMITS',NCH,CH(NCH)
C	    CH(NCH) = 'LIMITS'
	  NCH = NCH+1
	  CH(NCH) = 'CONNECT'
	  NCH = NCH+1
	  CH(NCH) = 'BOX'
	  NCH = NCH+1
	  CH(NCH) = 'XLABEL \Gw\dr/kV\da sin\gq'
	  NCH = NCH+1
	  CH(NCH) = 'YLABEL \Gw\dr/kV\da cos\gq'
	  NCH = NCH+1
	  CH(NCH) = 'ID'
	  NCH = NCH+1
	  CH(NCH) = 'WINDOW 1 2 1'
	  NCH = NCH+1
	  CH(NCH) = 'XCOLUMN 7'
	  NCH = NCH+1
	  CH(NCH) = 'YCOLUMN 8'
	  NCH = NCH+1
	  WRITE(CH(NCH),109) WIXMIN,WIXMAX,WIYMIN,WIYMAX
	  PRINT*,' WRITE LIMITS',NCH,CH(NCH)
	  NCH = NCH+1
	  CH(NCH) = 'CONNECT'
	  NCH = NCH+1
	  CH(NCH) = 'BOX'
	  NCH = NCH+1
	  CH(NCH) = 'XLABEL -\gw\di/\gw\dr sin\gq'
	  NCH = NCH+1
	  CH(NCH) = 'YLABEL -\gw\di/\gw\dr cos\gq'
	  IF(IMODE.EQ.LASTMODE) THEN

	    IF(ITERM.LT.0) THEN
	      NCH = NCH+1
	      CH(NCH) = 'HARDCOPY'
	    ELSE
 1023	      FORMAT(A1)
	      READ(5,1023) JUNK
	    ENDIF
	    NCH = NCH+1
	    CH(NCH) = 'END'

	  ENDIF
 	N = N+1
	PRINT*,N,WR,WI,XKX,XKZ
	XX(N) = XKX
	YY(N) = XKZ
	ZZ(N) = WI
	XK = SQRT(XKX**2 + XKZ**2)
	PLT(N,3) = XKX
	PLT(N,4) = XKZ
	PLT(N,5) = WR*XKX/XK
	PLT(N,6) = WR*XKZ/XK
C	THE FOLLOWING SET IS FOR RADIUS PROP. TO. WI, DIRECTION OF K
	PLT(N,7) = -WI*XKX/XK
	PLT(N,8) = -WI*XKZ/XK
C	YMAX = AMAX1(YMAX,YY(N))
C	XMAX = AMAX1(XX(N),XMAX)
C	GO TO 50
C 
	CALL OSCAMG(3)
C
	STOP
	END
	SUBROUTINE OSCAMG(IMRP)
C
	CHARACTER*50 COM(20)
	COMMON /PLTBLK/ PLT(200,10)
C
	COMMON /MONGOPAR/
     1  X1,X2,Y1,Y2,GX1,GX2,GY1,GY2,LX1,LX2,LY1,LY2,
     1  GX,GY,CX,CY,
     1  EXPAND,ANGLE,LTYPE,LWEIGHT,
     1  CHEIGHT,CWIDTH,CXDEF,CYDEF,PXDEF,PYDEFF,COFFMGO,
     1  TERMOUT,XYSWAPPED,NUMDEV,
     1  PIMGO,USERVAR(10),AUTODOT
C
C	ITERM = 3 FOR TERMINAL, -1 or -2 FOR PRINTER 
C	DATA ITERM /-1/
	DATA ITERM /3/
C
c	DO N = 1,10
c	PRINT*,(PLT(N,J),J=1,4)
c	ENDDO
C
	IF(ITERM.GT.0) THEN
	  COM(1) = 'TERMINAL 3'
	  NCOM = 1
	  COM(NCOM) = 'LOCATION 323. 777.  80.  750.'
	  NCOM = NCOM+1
	ELSE
	  COM(1) = 'PRINTER 1'
	  NCOM = 1
	ENDIF
	NCOM = NCOM+1
	COM(NCOM) = 'INPUT SHZMGO.MGO4'
	IF(ITERM.LT.0) THEN
	 NCOM = NCOM+1
	 COM(NCOM) = 'HARDCOPY'
	ELSE
	  READ(5,*) JUNK
	ENDIF
	NCOM = NCOM+1
	COM(NCOM) = 'END'
	CALL MONGO(NCOM,COM,200,10,PLT)
	PRINT*,'END OSCAMG',IMRP
	T1 = SECNDS(0.0)
 123	T2 = SECNDS(T1)
	IF(T2.LT.2.) GO TO 123
	IF(IMRP.EQ.5) COM(NCOM) = 'INPUT SHZMGO.MGO5'
	CALL MONGO(NCOM,COM,200,10,PLT)
C  120	STOP
	END
