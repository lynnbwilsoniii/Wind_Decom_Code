	PROGRAM MAKE_FILTER
C
C	TRIES TO MAKE A DIGITAL (FIR) BANDPASS FILTER TO MATCH GIVEN
C		TRANSMISSION FUNCTION (GIVEN IN SUBROUTINE PASSBAND)
C	THEN IT CHECKS AND PLOTS THE ACTUAL TRANSMISSION FUNCTION
C
	REAL F(2050),W(2050),FILTEMP(4100),FILTER(2050),SEC(2048)
	REAL AI(1026)
C
	FMAX = 1./6.
	F0 = .75*FMAX
	BW = .2*F0
	DT = 3.
	PRINT*,'FO,BW,FMAX',F0,BW,FMAX
	NPT = 1024
	CALL PASSBAND(F,F0,BW,FMAX,W,NPT)
C	CALL FILPLOT(LINLOG,F,W,NPT)
C
C	CONSTRUCT A FILTER ACCORDING TO 'NUMERICAL RECIPES, 2ND ED',
C		SECT 13.5
C
	NFREQ = NPT/2
	CALL REALFT(W,NFREQ,1)
C	CALL FASFOR(10,W,AI,SEC)
	TEMP = W(2)
C
C
	K = 8
	CALL REALFT(W,K,-1)
C
C	DO N = 1,NPT+1
C	  WRITE(22,*) N,W(N)
C	  WRITE(22,*) N,W(N),AI(N)
C	ENDDO
C
	DO N = 1,2*K+1
	  SEC(N) =   N*DT
	ENDDO
C
C	CALL FILPLOT(LINLOG,SEC,W,2*K+1)
C
C	IF(1) STOP
C
C	W(2) = 0.
C	DO N = 0,NFREQ-1
C	  NT = N+1
C	  FILTEMP(NT) = .5*CMPLX(W(NT) + CCONJ(W(NFREQ-NT)),
C     1		(W(NT) - CCONJ(W(NFREQ-NT))))
C	ENDDO 
	print*,'check w',temp,w(nfreq),w(nfreq+1)
C
	DO N = 1,NPT
	  FILTEMP(N) = W(N)
	ENDDO
C
	CALL FOUR1(FILTEMP,NFREQ,1)
C
C
C	LOAD FILTER ACCORDING TO SECT 13.5 BUT I AM SUSPICIOUS
C
	K = 24
	DT = 3.
	DO N = 1,K
	  SEC(N) =   N*DT
	  SEC(N+K) = (N+K)*DT
	  FILTER(K+N) = FILTEMP(N)     			! LAST ONES
	  FILTER(N)   = FILTEMP(NPT-K+N) 		! FIRST ONES
	ENDDO
	FILTER(K+1) = FILTEMP(1)     			! LAST ONES
	DO N = K+2,2*K-1
	  FILTER(n) = filter(n+1)
	ENDDO
C	DO N = 1,K
C	  SEC(N) =   N*DT
C	  SEC(N+K) = (N+K)*DT
C	  FILTER(K+N) = FILTEMP(N)     			! LAST ONES
C	  FILTER(N)   = FILTEMP(NPT-K+N) 		! FIRST ONES
C	ENDDO
	KF = 2*K-1
C	  
C	DO N = 1,2*K+1
C	  WRITE(22,*) N,FILTER(N)
C	ENDDO
C
C	DO THE FILTER OF KEITH'S BOOK
C
	NPT = 31
	CALL FIG412(F,F0,BW,FMAX,W,NPT)
	DO N = 1,NPT
	  SEC(N) = N
	  FILTEMP(N) = W(N)
	ENDDO
	LINLOG = 0
C	CALL FILPLOT(LINLOG,SEC,FILTEMP,NPT)
C	IF(1) STOP
C
C
	NFREQS = 100
	LINLOG = 1
	KF = 31
	DT = 1.
	FMAX = .5*NFREQS/DT
	F0 = 1./DT	
	CALL BWCHECK(KF,FILTER,DT,F0,BW,FMAX,NFREQS)
	LINLOG = 1
C	CALL FILPLOT(LINLOG,SEC,FILTEMP,NPT)
C
	STOP
	END
	SUBROUTINE PASSBAND(F,F0,BW,FMAX,W,NPT)
	REAL F(1),W(1)
C
	DATA PI /3.14159265/
C
C	BANDPASS FUNCTION  1 + COS(X) FOR -PI<X<PI, O OTHERWISE, FOR
C		X = PI*(F-F0)/BW.  BW IS THE FULL WIDTH AT HALF MAX.
C
	DO N = 1,NPT
	  F(N) = N*FMAX/NPT
	  X = PI*(F(N)-F0)/BW
	  W(N) = 0.
	  IF(X.GE.-PI.AND.X.LE.PI) THEN
	    W(N) = 1. + COS(X)
	  ENDIF
	ENDDO
C
	RETURN
	END
	SUBROUTINE FIG412(F,F0,BW,FMAX,W,NPT)
	REAL F(1),W(1),H(31)
C
	DATA PI /3.14159265/
	DATA H/-.012270841,.021234122,-.030222217,-.056719187,
     1	        .010123622,.042773458,.0016342754, .047894601,
     2          .081674523,-.12347055, -.24866632, .065881834,
     3          .33825492 ,.074176101, -.24832359,-.12874673,
     4          .031974335,.049055367,.0007778774, .045204236,
     5          .012740520,-.056494463,-.028209696,.020944360,
     6          .012019594,.0002678708,.0052933804,.0024858904,
     7         -.003950204,.0020514977,-.0021685219/
C
C	FILTER TAKEN FROM FIG 4.12 OF ???
C
	DO N = 1,NPT
	  F(N) = N*FMAX/NPT
	  W(N) = H(N)
	ENDDO
C
	RETURN
	END
	SUBROUTINE BWCHECK(KF,FILTER,DT,F0,BW,FMAX,NFRQS)
C
C
C	CALCULATES RESPONSE OF THE COMPUTED FILTER
C
	REAL FILTER(1),OUTPUT(1025),SAMPS(2050),FR(1025)
	DATA TWOPI /6.24318531/
C
C	PRINT*,'BWCHECK CALLED,KF,NFRQS,DT =',KF,NFRQS,DT
C	PRINT*,' '
	DO NFR = 1,NFRQS
	  FR(NFR) = NFR*FMAX/NFRQS
	  OUTPUT(NFR) = 0.
	  FRT = FR(NFR)
	  DO IK = 1,KF
	    SAMPS(IK) = COS(TWOPI*FRT*IK*DT)
	    OUTPUT(NFR) = OUTPUT(NFR) + FILTER(IK)*SAMPS(IK)
	  ENDDO
	ENDDO
C
c	DO N = 1,KF+1
c	  WRITE(22,*) N,SAMPS(N)
c	ENDDO
c	DO N = 1,KF+1
c	  WRITE(22,*) N,FR(N),OUTPUT(N)
c	ENDDO
C
	LINLOG = 1
	CALL FILPLOT(LINLOG,FR,OUTPUT,NFRQS)
	RETURN
	END
	SUBROUTINE FILPLOT(INDEX,XX,YY,NPT)
C
C	PLOTS THE RESULTS OF BWCHECK
C
	COMMON /MONGOPAR/
     1  X1,X2,Y1,Y2,GX1,GX2,GY1,GY2,LX1,LX2,LY1,LY2,
     1  GX,GY,CX,CY,
     1  EXPAND,ANGLE,LTYPE,LWEIGHT,
     1  CHEIGHT,CWIDTH,CXDEF,CYDEF,PSDEF,PYDEF,COFF,
     1  TERMOUT,XYSWAPPED,NUMDEV,
     1  PI,USERVAR(10),AUTODOT
	INTEGER*4 LX1,LX2,LY1,LY2,LTYPE,LWEIGHT,NUMDEV
C
	DIMENSION YY(1),XX(1)
C
	ITERM = 3
C
	CALL MGOINIT
	CALL MGOSETUP(ITERM)
	CALL MGOERASE
C
	IF(ITERM.LT.0) THEN
	  CALL MGOSETLOC(400.,400.,3100.,2200.)
	ENDIF
C
	XMAX = 0.
	YMAX = -1.E6
	YMIN =  1.E6
	DO N = 1,NPT
	  IF(INDEX.EQ.1) YY(N) = ALOG10(ABS(YY(N)))
	  YMAX = AMAX1(YMAX,YY(N))
	  YMIN = AMIN1(YMIN,YY(N))
	  XMAX = AMAX1(XMAX,XX(N))
	ENDDO
C
	CALL MGOSETLIM(0.,YMIN,XMAX,YMAX)
	CALL MGOCONNECT(XX,YY,NPT)
	CALL MGOSETEXPAND(.7)
	CALL MGOBOX(1,2)
	CALL MGOSETEXPAND(1.)
	CALL MGOSETEXPAND(.8)
	CALL MGOPLOTID('[.UTIL]','MAKE_FILTER')
	CALL MGOSETEXPAND(1.)
C
	IF(ITERM.LT.0) THEN
	  CALL MGOPRNTPLOT(NVEC)
	  PRINT*,' NO. VECTORS PLOTTED',NVEC
	ELSE
	  CALL MGOTIDLE
	  READ(5,*) JUNK
	  CALL MGOTCLOSE
	ENDIF
C
	RETURN
C
	END	
