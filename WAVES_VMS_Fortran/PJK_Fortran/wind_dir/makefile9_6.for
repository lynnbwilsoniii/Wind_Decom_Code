	subroutine makefile(ch)
c
C	MAKEFILE9, A PROGRAM TO SEARCH FOR COLLAPSE EVENTS.  
C
C	THE CRITERIA ARE:  (1) A NARROW SPECTRUM WITH NO OTHER PEAKS
C	WITHIN 20 DB OF THE MAIN PEAK, EXCEPT THE ADJACENT
C	FREQUENCIES. (2) THE ENDS LOWER THAN THE MIDDLE BY AN AMOUNT
C	D_MID_END.  
c
C	TWO EVENTS HAVE BEEN TAKEN AS MODELS.  19970302 1419:25
C	#650974 IS A "PURE" EVENT, VERY BEAUTIFUL, AND 19980216
C	1150:01 # 9237151 IS ONE WHICH IS RADIATING LOW FREQUENCIES
C	OUT THE ENDS.
C
	COMMON /PARTBLK/ X4DATA(2050,4),XRE,YRE,ZRE,SUNCLOCK,SPINRATE
	COMMON /XYBLOCK/ XSPECT,YSPECT,DPHASE
	REAL 	XSPECT(1025),YSPECT(1025),DPHASE(1025)
	integer*4 ch,ok,okt,OK1,OK2,SCETI4(2),NDATA(2048),SUNCLOCK
	INTEGER*4 W_CHANNEL_CLOSE,W_EVENT,RET_SIZE,W_MESSAGES_OFF
	INTEGER*4 W_ITEM_I4,W_ITEM_R4,W_ITEM_R8
	INTEGER*4 ITDSCH,ERT(2),ERTDAY
	REAL*8 SCET8,SCETMFI,SCET3DP
	REAL FREQ(1024),DATA(2048),SPECT(1025)
	character*32 ITEM
	character*4 event
	DATA TWOPI /6.2831853/
	DATA YXRATIO /11.8/
C	ABOVE BASED ON LEFFX = 41.1, LEFFY = 3.79
	data event /'TDSF'/
C	data event /'FILL'/
	DATA XLEN,YLEN,ZLEN /.0411, .00379, .00217/             ! KM, FOR mV
C	DATA D_MID_END /100./       ! this value excluded 1996/12/29 4701840
C	DATA D_MID_END /80./  	    ! used for 1996 0415 to 0419
	DATA D_MID_END /50./
	DATA IOPEN /0/
	DATA IDIAGN /0/
C
	IF(IOPEN.EQ.0) THEN
	OPEN(UNIT=89,FILE='SOLITON.EXTRA',STATUS='OLD',ACCESS='APPEND')
	OPEN(UNIT=90,FILE='SOLITON.DATA',STATUS='OLD',ACCESS='APPEND')
	IOPEN = 1
	ENDIF
C
 100	continue
C
C	GET NEXT EVENT
C
	IF(IDIAGN.NE.0) type*,'going to get next ',EVENT,' event'
c
	ok = w_event(ch,event)
C
C	CHECK FOR END OF RECORD
C
	if (ok.ne.1) then
		if(ok.eq.82) then
		   ok = w_channel_close(ch)
C		   WRITE(66,*) SCETI4(1),FFT_COUNT,RAW_COUNT,E_COUNT
C     1			, B_COUNT
		   return
	        endif
		write(6,*) 'cannot open ',event, ', ok=', ok
	endif
C
	OKT = W_MESSAGES_OFF(ch)
C

	item = 'CHANNEL'
	ok = w_item_i4(ch, item, ITDSCH, 1, return_size)
	item = 'EVENT_NUMBER'
	ok = w_item_i4(ch, item, numevt, 1, return_size)
	IF(ITDSCH.EQ.1) LASTEVT = NUMEVT 
	IF(ITDSCH.NE.1.AND.NUMEVT.NE.LASTEVT) GO TO 100
	item = 'EVENT_SCET'
	ok = w_item_i4(ch, item, SCETI4, 2, return_size)
	IF(IDIAGN.NE.0) print*,'CHANNEL,event_number,las evn,time',
     1		ITDSCH,numevt,lastevt,sceti4
	ss = mod(SCETI4(2),100)
	mm = SCETI4(2)/100
	mm = mod(mm,100)
	hh = SCETI4(2)/10000
	item = 'EVENT_SCET_R8'
	ok = w_item_R8(ch, item, scet8, 1, return_size)
	item = 'FAST_RX_SPEED_R4'
	ok = w_item_R4(ch, item, SPS, 1, return_size)
        ITEM = 'EVENT_TM_SCET_I4'
        ok = W_ITEM_I4(ch, item, ERT, 2, ret_size)
        ERTDAY = MOD(ERT(1),100)
C
c		PRINT*,'CALL TDS_PHYS'
C
	  IPROCESS = 4
	  CALL TDS_PHYS(CH,IPROCESS,NDATA,DATA,SPECT)
C
	  DO N = 1,2048
	      X4DATA(N,ITDSCH) = DATA(N)
	  ENDDO
	  IF(ITDSCH.EQ.1) THEN
	    DO N = 1,1025
	      XSPECT(N) = SPECT(N)
	    ENDDO
	  ELSE
	    DO N = 1,1025
	      YSPECT(N) = SPECT(N)
	    ENDDO
	  ENDIF
	IF(IDIAGN.NE.0)PRINT*,'GET ANOTHER IF CH NE 2, CHANN=',ITDSCH
	IF(ITDSCH.NE.2) GO TO 100
C
C	IF(ITDSCH.EQ.1)
C
C	FIND MAXIMUM IN SPECTRUM
C
	  SMAX = -1000.
	  DO N = 50,1022
	    IF(SPECT(N).GT.SMAX) THEN
	      SMAX = SPECT(N)
	      NSPMAX = N
	    ENDIF
	  ENDDO
	  IF(IDIAGN.NE.0) 
     1    PRINT*,' SPECTRUM MAX:N,F,SMAX',NSPMAX,(NSPMAX-1)*SPS/2048.,SMAX
	  FREQMAX = (NSPMAX-1)*SPS/2048.
	  IF(FREQMAX.LT.1.E4) GO TO 100 		! limit to gt 10 kHz
	  F1 = .001*FREQMAX
C	ENDIF
C
C	FIND SPECTRAL BANDWIDTH
C
	  DO N = NSPMAX,1022
	     NUPPER = N
	     IF(SPECT(N+1).GT.SPECT(N)) GO TO 201
	  ENDDO
 201	  CONTINUE
	  DO N = NSPMAX,50,-1
	     NLOWER = N
	     IF(SPECT(N-1).GT.SPECT(N)) GO TO 202
	  ENDDO
 202	  CONTINUE
C
C	  NOW THE SIGNAL IS MONOTONICALLY FALLING ON EACH SIDE OF THE
C		PEAK, OUT TO NLOWER AND NUPPER
C
C	LOOK FOR OTHER LARGE SIGNALS IN THE SPECTRUM
C
	  NOUTSIDE = 0
	  DO N = NUPPER+1,1022
	    IF(SPECT(N).GT.(SMAX-20.)) NOUTSIDE = NOUTSIDE + 1
C	    PRINT*,'OTHER LARGE SIGS:N,F,SMAX',N,(N-1)*SPS/2048.,SPECT(N)
	  ENDDO
	  DO N = NLOWER-1,50,-1
	    IF(SPECT(N).GT.(SMAX-20.)) NOUTSIDE = NOUTSIDE + 1
C	    PRINT*,'OTHER LARGE SIGS:N,F,SMAX',N,(N-1)*SPS/2048.,SPECT(N)
	  ENDDO
	  IF(NOUTSIDE.NE.0) GO TO 100
C
C	COMPARE MIDDLE AND ENDS
C
	PWRLEFT = 0.
	DO N = 1,170 
	  PWRLEFT = PWRLEFT + DATA(N)**2
	ENDDO
	PWRLEFT = PWRLEFT/170.
C
	PWRRIGHT = 0.
	DO N = 1878,2047 
	  PWRRIGHT = PWRRIGHT + DATA(N)**2
	ENDDO
	PWRRIGHT = PWRRIGHT/170.
C
	PWRMID = 0.
	DO N = 940,1109 
	  PWRMID = PWRMID + DATA(N)**2
	ENDDO
	PWRMID = PWRMID/170.
	PWREND = D_MID_END*(PWRRIGHT + PWRLEFT)
C
	IF(IDIAGN.NE.0) PRINT*,'PWRMID,END',PWRMID,PWREND
	IF(PWRMID.LT.PWREND) GO TO 100
C
	SPBW = (NUPPER-NLOWER)*SPS/2048.
C
C	GET SUPPORTING DATA
C
	item = 'WIND_3DP_ION_VX(GSE)_R4'
	ok = w_item_r4(ch, item, VX, 1, return_size)
	item = 'WIND_3DP_ION_VY(GSE)_R4'
	ok = w_item_r4(ch, item, VY, 1, return_size)
	item = 'WIND_3DP_ION_VZ(GSE)_R4'
	ok = w_item_r4(ch, item, VZ, 1, return_size)
	VSW = SQRT(VX**2 + VY**2 + VZ**2)
	VSWANG = ATAN2D(-VY,-VX)
	item = 'WIND_3DP_SCET_R8'
	ok = w_item_r8(ch, item, SCET3DP, 1, return_size)
	IF(IDIAGN.NE.0)	print*,'scet3dp,vx,vy,ang',scet3dp,vx,vy,vswang
	item = 'WIND_MFI_BPHI(GSE)_R4'
	ok = w_item_r4(ch, item, PHI_B, 1, return_size)
C
	item = 'WIND_MFI_BX(GSE)_R4'
	ok = w_item_r4(ch, item, BX, 1, return_size)
	item = 'WIND_MFI_BY(GSE)_R4'
	ok = w_item_r4(ch, item, BY, 1, return_size)
C
	ABSW = VSWANG - PHI_B
	IF(IDIAGN.NE.0)print*,'phi_b,absw',phi_b,absw
	IF(ABSW.GT.90.)  ABSW = ABSW - 90. 
	IF(ABSW.LT.-90.) ABSW = ABSW + 90. 
	ABSW = ABS(ABSW)
	item = 'WIND_MFI_BTHETA(GSE)_R4'
	ok = w_item_r4(ch, item, THETA_B, 1, return_size)
	item = 'WIND_MFI_SCET_R8'
	ok = w_item_r8(ch, item, SCETMFI, 1, return_size)
	item = 'WIND_3DP_E_TEMP_R4'
	ok = w_item_r4(ch, item, TE, 1, return_size)
	item = 'WIND_3DP_ION_TEMP_R4'
	ok = w_item_r4(ch, item, TI, 1, return_size)
	ITEM = 'SUN_ANGLE'
	ok = W_ITEM_I4(ch, item, SUNCLOCK, 1, ret_size)
	ITEM = 'WIND_SPIN_RATE_R4'
	ok = W_ITEM_R4(ch, item, SPINRATE, 1, ret_size)
	ANGLE =  -360.*SUNCLOCK/4096. - 45.       ! ANGLE SUN TO +EX AT END
	DANG = SPINRATE*360./SPS/TWOPI		  ! CHANGE PER SAMPLE
	THANT = ANGLE + 1024.*DANG + 360.	  ! ANGLE SUN TO +EX AT MIDDLE
	IF(IDIAGN.NE.0) PRINT*,'ANTENNA ANGLE',THANT
C
	write(66,*) ' '
	write(66,*) scetI4,numevt 
	CENTER = 1024.
	CALL FIT_SOL(CH,WDTH,F1,CENTER,EX1,EY1,TX,TY,FRMS)
	AMPX = SQRT(EX1**2 + TX**2)
	AMPY = SQRT(EY1**2 + TY**2)
	AMPT = SQRT(AMPX**2 + AMPY**2)
	IF(ABS(EX1).GT.ABS(TX)) THEN
	  AMPX = SIGN(AMPX,EX1)
	  AMPY = SIGN(AMPY,EY1)
	ELSE
	  AMPX = SIGN(AMPX,TX)
	  AMPY = SIGN(AMPY,TY)
	ENDIF
	  EANG = -ATAN2D(AMPY,AMPX)
	PHSX = ATAN2D(EX1,TX)
	PHSY = ATAN2D(EY1,TY)
	DPHS = PHSY-PHSX
	IF(DPHS.GT.180.) DPHS = DPHS - 180.
	IF(DPHS.GT.180.) DPHS = DPHS - 180.
	IF(DPHS.LT.-180.) DPHS = DPHS + 180.
	IF(DPHS.LT.-180.) DPHS = DPHS + 180.
	IF(IDIAGN.NE.0)PRINT*,'FIT,EX1,EY1,TX,TY',EX1,EY1,TX,TY
	IF(IDIAGN.NE.0)PRINT*,'EANG,PHSX,PHSY,PHSD',EANG,PHSX,PHSY,DPHS
C	SLOPE = YXRATIO*AXMAJOR
c	GSEANG = THANT - ATAND(SLOPE)
	ANGTOB = EANG - PHI_B
	IF(IDIAGN.NE.0) PRINT*,'EANG,PHI_B,ANGTOB',EANG,PHI_B,ANGTOB
	IF(ANGTOB.GT.90.) ANGTOB = ANGTOB - 180.
	IF(ANGTOB.LT.-90.) ANGTOB = ANGTOB + 180.
C
	ANGTOSW = EANG - VSWANG
	IF(ANGTOSW.GT.90.) ANGTOSW = ANGTOSW - 180.
	IF(ANGTOSW.LT.-90.) ANGTOSW = ANGTOSW + 180.
C
C	CALCULATE AMPLITUDE BY AVERAGING SIGNAL IN THE MIDDLE
C	AND MULTIPLYING BY 2/PI
C
	AMPX1 = 0.
	AMPY1 = 0.
	COUNT = 0.
	DO N = 924,1124		! +- 100 SAMPLES AT MIDDLE
	  COUNT = COUNT + 1.
	  AMPX1 = AMPX1 + ABS(X4DATA(N,1))
	  AMPY1 = AMPY1 + ABS(X4DATA(N,2))
	ENDDO
	AMPX1 = (TWOPI/4.)*AMPX1/COUNT/XLEN
	AMPY1 = (TWOPI/4.)*AMPY1/COUNT/YLEN
C
	IF(IDIAGN.NE.0) PRINT*,'DIRECT,AMPX1,AMPY1',AMPX1,AMPY1
	RATIO = 0.
	IF(PWREND.NE.0.) RATIO = PWRMID/PWREND
	NBW = NUPPER-NLOWER
	IF(IDIAGN.NE.0) print*,'mid,end,ratio',pwrmid,pwrend,ratio
C
	WRITE(90,1011) scetI4,NUMEVT,ERTDAY,EVENT(1:1),F1,RATIO,
     1	   AMPX,AMPY,AMPT,AMPX1,AMPY1,WDTH,VSW,ABSW,ANGTOB,THETA_B,
     1     ANGTOSW,TE,TI,FRMS
	WRITE(89,1012) SCETI4,NUMEVT,F1,NBW,SPBW,WDTH,DPHS
C	copied from tdsvis
C        READ(44,1114,END=200) SCETR,NEVTR,NTMDAY,EVTR
C       1114 IS NOW 113 CHARACTERS
C
C 1114   FORMAT(I10,I7,I10,I3,A2,3F7.0,F7.2,F6.2,F7.0,F6.1,3F7.1,2F7.1
C     1          ,F6.3) 
C
 1011	format(I10,I7,I10,I3,A2,F7.3,F5.1,5F6.1,F6.2,F6.0,
     1	   F6.0,F6.0,F5.0,F5.0,F5.1,F5.1,E9.2)  ! 
c
c 1011	format(I9,I7,I10,A2,F7.3,F6.1,5F6.1,F6.2,F6.0,
c     1	   F6.0,F5.0,F5.0,F5.0,F5.1,F5.1,E9.2)  ! 
 1012	format(I10,I7,I10,F7.3,I4,F7.1,F6.2,F6.0)
C
C	if(ok.ne.-1) stop
	IF(OK.NE.82) GO TO 100
	return
	end
