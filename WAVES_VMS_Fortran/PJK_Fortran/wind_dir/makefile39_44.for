	subroutine makefile(ch)
C
C	THIS IS MAKEFILE39, DERIVED FROM MAKEFILE12
C
C	A PROGRAM TO SEARCH FOR LARGE AMPLITUDE WHISTLERS IN MAGSPHERE IN TDSF. 
C		OR FILL
C
C	OUTPUT IN MAKEFILE39.RESULTS, SET IN MISSION_SCAN39 AS UNIT 90
C
C	INSIDE TIMES:
C		2000 APR 21 TO AUG 23 APPROX, PETAL ORBITS
C
C	CRITERIA:  LARGE AMPLITUDE, AVERAGE FREQENCY LESS THAT 5 KHZ,
C		VMATRIX HAS RATIO OF EIGENVALUES LARGER THAN SOME LIMIT
C		TO EXCLUDE ION ACOUSTIC WAVES AND OTHER LINEAR POLARIZATION
C		WIND INSIDE OF 10 RE
C
	integer*4 ch,ok,okt,OK1,OK2,SCETI4(2),N1DATA(2048),N2DATA(2048)
	INTEGER*4 W_CHANNEL_CLOSE,W_EVENT,RET_SIZE,W_MESSAGES_OFF
	INTEGER*4 W_ITEM_I4,W_ITEM_R4,W_ITEM_R8
	INTEGER*4 TDS_CHANNEL,ISRC,SUNCLOCK,ERT(2),ERTDAY
	REAL*8 SCET8,XGSE,YGSE,ZGSE,RGSE
	REAL DBSPEC1(1025),V1DATA(2048)
	REAL DBSPEC2(1025),V2DATA(2048)
	REAL ZCROSS(1024),Z1INT(1024),Z2INT(1024)
	REAL FREQ(1024),FCOUNT(2),FAVR(2),FSTD(2),F3MOM(2),FBW(2),SKEW(2)
	character*32 ITEM
	character*4 event
	DATA TWOPI /6.2831853/
	DATA YXRATIO /11.8/
C	ABOVE BASED ON LEFFX = 41.1, LEFFY = 3.79
	DATA PXTOT,PYTOT /0.,0./
	data event /'TDSF'/
C	data event /'FILL'/
C
        COMMON /VARMATX/ EVAL(2),EVECT(2,2)
        REAL DATA(2050,4)
        REAL WT(2048) 
C
	YXSQ = YXRATIO**2
	IFOUND = 0
	NEVTCNT = 0
 100	ok = w_event(ch,event)
	NEVTCNT = NEVTCNT+1
C
C	CHECK FOR END OF RECORD
C
	if (ok.ne.1) then
		if(ok.eq.82) then
		   ok = w_channel_close(ch)
		   return
	        endif
		write(6,*) 'cannot open ',event, ', ok=', ok
	endif
C
C	END OF END OF RECORD CHECK
C
	OKT = W_MESSAGES_OFF(ch)
C
	ITEM = 'CHANNEL'
	ok = W_ITEM_I4(ch, item, TDS_CHANNEL, 1, ret_size)
C
C	IPROS = 2
	IPROX = 4
	IF(TDS_CHANNEL.EQ.1) THEN
C	  ITEM = 'DATA'
C	  ok1 = W_ITEM_I4(ch, item, N1DATA, 2048, ret_size)
	  CALL TDS_PHYS(CH,IPROS,N1DATA,V1DATA,DBSPEC1)
	  ITEM = 'EVENT_NUMBER'
	  ok = W_ITEM_I4(ch, item, NO_EVT1, 1, ret_size)
		MAXCH1 = 0
	 	V1MAX = 0.
		DO N = 1,2048
		  MAXCH1 = MAX0(MAXCH1,IABS(N1DATA(N)-128)) 
		  V1MAX = AMAX1(V1MAX,ABS(V1DATA(N)))
		ENDDO
	  GO TO 100
	ELSEIF(TDS_CHANNEL.EQ.2) THEN
C	  ITEM = 'DATA'
C	  ok2 = W_ITEM_I4(ch, item, N2DATA, 2048, ret_size)
	  CALL TDS_PHYS(CH,IPROS,N2DATA,V2DATA,DBSPEC2)
	  ITEM = 'EVENT_NUMBER'
	  ok = W_ITEM_I4(ch, item, NO_EVT, 1, ret_size)
	  IF(NO_EVT.NE.NO_EVT1) GO TO 100
		MAXCH2 = 0
		V2MAX = 0.
		DO N = 1,2048
		  MAXCH2 = MAX0(MAXCH2,IABS(N2DATA(N)-128)) 
		  V2MAX =  AMAX1(V2MAX,ABS(V2DATA(N)))
		ENDDO
	ELSE
	  GO TO 100
	ENDIF
C*****
C	IF(MAXCH1.LT.107.AND.MAXCH2.LT.90) PRINT*,'MAXCH SMALL',V1MAX,V2MAX
C	IF(MAXCH1.LT.107.AND.MAXCH2.LT.90) GO TO 100
C*****
C
C	MOST OF THE EVENTS ARE BLOBS.  TO ELIMINATE THEM:
C	BLOBS START NEAR THE MIDDLE, AND MOSTLY OCCUPY THE
C	SECOND HALF OF AN EVENT.  SO REQUIRE THAT THE MAXIMUM
C	INTERVAL BETWEEN ZEROS IN THE SECOND HALF NOT BE 
C	MORE THAN ?? TIMES THE AVERAGE INTERVAL IN THE FIRST
C	HALF  
C
C	THERE ARE ALSO SPIKES.  TO ELIMINATE THEM, CALCULATE THE
C	NUMBER OF POINTS WHICH ARE LARGER THAN HALF THE PEAK.
C
	IF(TDS_CHANNEL.EQ.1) GO TO 100		! GO GET CHANNEL 2
	IF(TDS_CHANNEL.NE.2) GO TO 100
C
C	REQUIRE AT LEAST 10 MV/M IN BOTH CHANNELS.  THIS TURNED OUT TO BE 
C	TOO STRINGENT, AS EIGENVALUES ARE AVERAGED, SO I CHANGED IT TO 4 MV/M
C
	E1MAX = V1MAX/41.1
	E2MAX = V2MAX/3.79
C	PRINT*,'EVENT NO ',NO_EVT
C	IF(E1MAX.LT..004.OR.E2MAX.LT..004) print*,'E1,E2MAX,SMALL',E1MAX,E2MAX
	IF(E1MAX.LT..01.OR.E2MAX.LT..01) GO TO 100
C
	ITEM = 'WIND_ORBIT_X(GSE)_R8'
	ok = W_ITEM_R8(ch, item, XGSE, 1, ret_size)
	ITEM = 'WIND_ORBIT_Y(GSE)_R8'
	ok = W_ITEM_R8(ch, item, YGSE, 1, ret_size)
	ITEM = 'WIND_ORBIT_Z(GSE)_R8'
	ok = W_ITEM_R8(ch, item, ZGSE, 1, ret_size)
	RGSE = DSQRT(XGSE**2+YGSE**2+ZGSE**2)
C
	IF(RGSE.GT.2.5D05) THEN			! LIMIT 40 RE
C	    ADVANCE BY ONE DAY AND GET ANOTHER EVENT
C	    ITEM = 'EVENT_SCET_R8'
C	    OK = W_ITEM_R8(ch, item, SCET8, 1, ret_size)
	    ITEM = 'EVENT_SCET'
	    ok = W_ITEM_I4(ch, item, SCETI4, 2, ret_size)
	    PRINT*,RGSE/6.38E3,'OUTSIDE 40 RE',SCETI4
	    SCET8 = SCET8 + 1.D00
	    CALL W_CHANNEL_POSITION(CH,SCET8)
	    GO TO 100
	  ENDIF
C
	IF(RGSE.GT.9.6D04) THEN			! LIMIT 15 RE
C	    ADVANCE BY ONE HOUR AND GET ANOTHER EVENT
C	    ITEM = 'EVENT_SCET_R8'
C	    OK = W_ITEM_R8(ch, item, SCET8, 1, ret_size)
	    ITEM = 'EVENT_SCET'
	    ok = W_ITEM_I4(ch, item, SCETI4, 2, ret_size)
C	    PRINT*,RGSE/6.38E3,'OUTSIDE 15 RE',SCETI4
	    SCET8 = SCET8 + 1.D00/24.D00
	    CALL W_CHANNEL_POSITION(CH,SCET8)
	    GO TO 100
	  ENDIF
C
C
CDIAG	PRINT*,'******START EVENT',NO_EVT1,NO_EVT,' *****'
	PRINT*,'******START EVENT',NO_EVT1,NO_EVT,' *****'
C
	DO N = 1,2048
	  DATA(N,1) = V1DATA(N)
	  DATA(N,2) = V2DATA(N)
	ENDDO
C	print*,'calling vmatrix2,event no. ',no_evt
C	DO CENTRAL HALF
	CALL VMATRIX2(DATA,512,1536)
C	CHANGE TO AMPLITUDE OF ELECTRIC FIELD
	EEIG1 = SQRT(EVAL(1))/41.1
	EEIG2 = SQRT(EVAL(2))/3.79
	IF(EEIG2.LT..2*EEIG1) THEN
	   PRINT*,'EVENT ',NO_EVT,' TOO LINEAR, GO TO 100'
	   GO TO 100
	ENDIF
C
	XMAX = 0.
	YMAX = 0.
	XMIN = 0.
	YMIN = 0.
	DO N = 1,2048
	  XMAX = AMAX1(XMAX,V1DATA(N))
	  YMAX = AMAX1(YMAX,V2DATA(N))
	  XMIN = AMIN1(XMIN,V1DATA(N))
	  YMIN = AMIN1(YMIN,V2DATA(N))
	ENDDO
	CRIT = .5
C****
	XMAX = AMAX1(XMAX,-XMIN)
	YMAX = AMAX1(YMAX,-YMIN)
C****
	XMAX = CRIT*XMAX
	YMAX = CRIT*YMAX
	XCOUNT = 0.
	YCOUNT = 0.
	DO N = 1,2048
	  IF(ABS(V1DATA(N)).GT.XMAX) XCOUNT = XCOUNT + 1.
	  IF(ABS(V2DATA(N)).GT.YMAX) YCOUNT = YCOUNT + 1.
	ENDDO
C
	DO N = 1,2048
	  N1DATA(N) = N1DATA(N) - 128
	  N2DATA(N) = N2DATA(N) - 128
	ENDDO
C
C	FIND ZERO CROSSINGS
C
	IZCNT = 1
	ZCROSS(IZCNT) = 0.
	IL = 1
	IZ = IL
C	  IF(N1DATA(IL).EQ.0) PRINT*,'ZERO DATA',IL,N1DATA(IL),N1DATA(IL+1)
C
C	FIRST HALF OF CHANNEL 1
C
	DO IL = 1,1023
C
C	    IF(N1DATA(IL).EQ.0) PRINT*,'ZERO DATA',IL,N1DATA(IL-1),
C     1     N1DATA(IL),N1DATA(IL+1)
C
C		COUNT ONLY POS TO NEG
C
	    IF(N1DATA(IL).GT.0.AND.N1DATA(IL+1).LE.0) THEN
	        IZCNT = IZCNT+1
		S1 = N1DATA(IL)
		S2 = N1DATA(IL+1)
		IF(S1-S2.NE.0.) THEN
	  	   ZCROSS(IZCNT) = IL + S1/(S1-S2)
	  	ELSE
		   ZCROSS(IZCNT) = IL 
		ENDIF	
	    ENDIF
	ENDDO
C
	ZCNT1 = IZCNT
C
	AVR1_1ST_HALF = 1023./ZCNT1
	NZCNT1 = IZCNT
C
	Z1MAX = 0.
	DO N = 1,IZCNT-1
	  Z1INT(N) = ZCROSS(N+1) - ZCROSS(N)
	  Z1MAX = AMAX1(Z1INT(N),Z1MAX)
C	  IF(Z1INT(N).EQ.0.) PRINT*,'ZINT=0 AT ',N
	  IF(Z1INT(N).EQ.0.) Z1INT(N) = 1.E-6
	ENDDO
C
C	SECOND HALF OF CHANNEL 1
C
	DO IL = 1024,2047
C
C		COUNT ONLY POS TO NEG
C
	    IF(N1DATA(IL).GT.0.AND.N1DATA(IL+1).LE.0) THEN
	        IZCNT = IZCNT+1
		S1 = N1DATA(IL)
		S2 = N1DATA(IL+1)
		IF(S1-S2.NE.0.) THEN
	  	   ZCROSS(IZCNT) = IL + S1/(S1-S2)
	  	ELSE
		   ZCROSS(IZCNT) = IL 
		ENDIF	
	    ENDIF
	ENDDO
	IZCNT = IZCNT + 1
	ZCROSS(IZCNT) = 2048.
C
	AVR1_2ND_HALF = 1023./(IZCNT-NZCNT1)
C
	Z1MAX = 0.
	DO N = NZCNT1,IZCNT-1
	  Z1INT(N) = ZCROSS(N+1) - ZCROSS(N)
	  if(z1int(n).gt.z1max) then
	     z1max = z1int(n)
	     nnmax = n
	  endif
C	  IF(Z1INT(N).EQ.0.) PRINT*,'ZINT=0 AT ',N
	  IF(Z1INT(N).EQ.0.) Z1INT(N) = 1.E-6
	ENDDO
CDIAG	print*,'max int ch 1',z1max,' at',zcross(nnmax),zcross(nnmax+1)
C
C	NOW AVR1_1ST_HALF IS THE AVERAGE INTERVAL, IN NUMBER OF SAMPLES
C	IN THE FIRST HALF OF THE EVENT, AND Z1MAX IS THE MAXIMUM
C	INTERVAL IN THE SECOND HALF.  Z1MAX IS EXPECTED TO BE LARGE
C	FOR BLOBS
C
CDAIG	print*,'zero crossings, ch 1,AVR1_1ST_HALF,Z1MAX',NO_EVT,izcnt,
CDIAG     1		AVR1_1ST_HALF,Z1MAX
	IF(Z1MAX.GT.5.*AVR1_1ST_HALF.AND.Z1MAX.GT.220.) THEN
C	  PRINT*,NO_EVT,'  CH 1 BLOB',AVR1_1ST_HALF,Z1MAX
C	  ITEM = 'SUN_ANGLE'
C	  ok = W_ITEM_I4(ch, item, SUNCLOCK, 1, ret_size)
C	  write(51,*) no_evt,avr1_1st_half,z1max,sunclock
	  IFOUND = 0
	  GO TO 100
	ENDIF
C
	ZCNT1 = IZCNT

C
C	FIRST HALF OF CHANNEL 2
C
	IZCNT = 1
	ZCROSS(IZCNT) = 1.
C
	DO IL = 1,1023
C
C		COUNT ONLY POS TO NEG
C
	  IF(N2DATA(IL).GT.0.AND.N2DATA(IL+1).LE.0) THEN
	        IZCNT = IZCNT+1
		S1 = N2DATA(IL)
		S2 = N2DATA(IL+1)
		IF(S1-S2.NE.0.) THEN
	  	   ZCROSS(IZCNT) = IL + S1/(S1-S2)
	  	ELSE
		   ZCROSS(IZCNT) = IL 
		ENDIF	
	  ENDIF
	ENDDO
C
	AVR2_1ST_HALF = 1023./IZCNT
	NZCNT2 = IZCNT
C
C	SECOND HALF OF CHANNEL 2
C
	DO IL = 1025,2047
C
C		COUNT ONLY POS TO NEG
C
	  IF(N2DATA(IL).GT.0.AND.N2DATA(IL+1).LE.0) THEN
	        IZCNT = IZCNT+1
		S1 = N2DATA(IL)
		S2 = N2DATA(IL+1)
		IF(S1-S2.NE.0.) THEN
	  	   ZCROSS(IZCNT) = IL + S1/(S1-S2)
	  	ELSE
		   ZCROSS(IZCNT) = IL 
		ENDIF	
	  ENDIF
	ENDDO
	IZCNT = IZCNT + 1
	ZCROSS(IZCNT) = 2048.
C
	Z2MAX = 0.
	DO N = NZCNT2,IZCNT-1
	  Z2INT(N) = ZCROSS(N+1) - ZCROSS(N)
c	  Z2MAX = AMAX1(Z2INT(N),Z2MAX)
	  if(z2int(n).gt.z2max) then
	     z2max = z2int(n)
	     nnmax = n
	  endif
C	  IF(Z2INT(N).EQ.0.) PRINT*,'ZINT=0 AT ',N
	  IF(Z2INT(N).EQ.0.) Z2INT(N) = 1.E-6
	ENDDO
C	print*,'max int ch 2',z2max,' at',zcross(nnmax),zcross(nnmax+1)
CDIAG	print*,'zero crossings, ch 2,AVR2_1ST_HALF,Z2MAX',NO_EVT,izcnt,
CDIAG     1		AVR2_1ST_HALF,Z2MAX
	IF(Z2MAX.GT.5.*AVR2_1ST_HALF.AND.Z2MAX.GT.220.) THEN
C	  PRINT*,NO_EVT,' CH 2 BLOB',AVR2_1ST_HALF,Z2MAX
C	  ITEM = 'SUN_ANGLE'
C	  ok = W_ITEM_I4(ch, item, SUNCLOCK, 1, ret_size)
C	  write(52,*) no_evt,avr2_1st_half,z2max,sunclock
	  IFOUND = 0
	  GO TO 100
	ENDIF
C
	ZCNT2 = IZCNT
C
C	I FOUND THAT THERE ARE BLOBS AT RANDOM IN CHANNEL 2, PRESUMABLE
C	BECAUSE THE TRIGGER, FROM CHANNEL 1, SOMETIMES CATCHES
C	ONE AT RANDOM.  SO TEST FOR THESE
C
	AVR2_ALL = 2047./IZCNT
	Z3MAX = 0.
	DO N = 1,IZCNT-1
	  Z2INT(N) = ZCROSS(N+1) - ZCROSS(N)
	  if(z2int(n).gt.z3max) then
	     z3max = z2int(n)
	     nnmax = n
	  endif
	ENDDO
c	PRINT*,'TEST 3',NO_EVT,AVR2_ALL,Z3MAX,NNMAX
C
	IF(Z3MAX.GT.5.*AVR2_ALL.OR.Z3MAX.GT.220.) THEN
C	  PRINT*,NO_EVT,' CH 2 RANDOM BLOB',AVR2_1ST_HALF,Z3MAX
C	  ITEM = 'SUN_ANGLE'
C	  ok = W_ITEM_I4(ch, item, SUNCLOCK, 1, ret_size)
C	  write(53,*) no_evt,avr2_all,z3max,sunclock,nnmax
	  IFOUND = 0
	  GO TO 100
	ENDIF
C
	ITEM = 'SOURCE'
	ok = W_ITEM_I4(ch, item, ISRC, 1, ret_size)
	ITEM = 'EVENT_NUMBER'
	ok = W_ITEM_I4(ch, item, NO_EVT, 1, ret_size)
	ITEM = 'EVENT_SCET'
	ok = W_ITEM_I4(ch, item, SCETI4, 2, ret_size)
	ITEM = 'FAST_RX_SPEED_R4'
	ok = W_ITEM_R4(ch, item, SPS, 1, ret_size)
        ITEM = 'EVENT_TM_SCET_I4'
        ok = W_ITEM_I4(ch, item, ERT, 2, ret_size)
        ERTDAY = MOD(ERT(1),100) 
C	ITEM = 'WIND_MFI_BPHI(GSE)_R4'
C	ok = W_ITEM_R4(ch, item, AZMAG, 1, ret_size)
C	ITEM = 'MAG_ELEVATION'
C	ok = W_ITEM_I4(ch, item, MAGEL, 1, ret_size)
C	ITEM = 'SUN_ANGLE'
C	ok = W_ITEM_I4(ch, item, SUNCLOCK, 1, ret_size)
C	ITEM = 'WIND_3DP_E_TEMP_R4'
C	ok = W_ITEM_R4(ch, item, TEMPE, 1, ret_size)
C	ITEM = 'WIND_3DP_ION_TEMP_R4'
C	ok = W_ITEM_R4(ch, item, TEMPI, 1, ret_size)
	ITEM = 'WIND_3DP_ION_DENSITY_R4'
	ok = W_ITEM_R4(ch, item, DENS, 1, ret_size)
C	ITEM = 'WIND_3DP_ION_VX(GSE)_R4'
C	ok = W_ITEM_R4(ch, item, VX, 1, ret_size)
C	ITEM = 'WIND_3DP_ION_VY(GSE)_R4'
C	ok = W_ITEM_R4(ch, item, VY, 1, ret_size)
	ITEM = 'WIND_MFI_BMAG_R4'
	ok = W_ITEM_R4(ch, item, BMAG, 1, ret_size)
C	ITEM = 'WIND_SPIN_RATE_R4'
C	ok = W_ITEM_R4(ch, item, SPINRATE, 1, ret_size)
C	if(ok.ne.1) then
	  spinrate = 2.
C	endif
C
C	CALCULATE FREQUENCIES FOR SPECTRUM
C
	DO N = 1,1024
	  FREQ(N) = (N-1)*SPS/2048.    ! FREQ(N) GOES WITH DBSPECT(N)
	ENDDO
C
C	CALCULATE BANDWIDTH, ETC.
C
	FLLIM = 4
	FUPLIM = 205			! 12 KHZ AT 120 KSPS
C	PRINT*,'DO FREQS',FREQ(FLLIM),FREQ(FUPLIM)
	DO NC = 1,2
	  FCOUNT(NC) = 1.E-20
	  FAVR(NC) = 0.
	  FSTD(NC) = 0.
	  F3MOM(NC) = 0.
	  DO N = FLLIM,FUPLIM
	    IF(NC.EQ.1) THEN
		VLT = 10.**(.1*DBSPEC1(N))
	    ELSE
		VLT = 10.**(.1*DBSPEC2(N))
	    ENDIF
	    FCOUNT(NC) = FCOUNT(NC) + VLT
	    FAVR(NC) = FAVR(NC) + VLT*FREQ(N)
	    FSTD(NC) = FSTD(NC) + VLT*FREQ(N)**2
	    F3MOM(NC) = F3MOM(NC) + VLT*FREQ(N)**3
	  ENDDO
	  FAVR(NC) = FAVR(NC)/FCOUNT(NC)
	  FSTD(NC) = FSTD(NC)/FCOUNT(NC) - FAVR(NC)**2
	  FBW(NC) = SQRT(AMAX1(FSTD(NC),0.))
	  SKEW(NC) = F3MOM(NC)/FCOUNT(NC) - 3.*FAVR(NC)*FSTD(NC)
     1		 - FAVR(NC)**3
	ENDDO
C
	AVRPER = 1.E-6
	IF(ZCNT2.NE.0.) AVRPER = 2048./SPS/ZCNT2
	FREQKHZ = .001/AVRPER
C
C	WRITE(56,1111) SCETI4(1),NO_EVT,FREQKHZ,FAVR(1),FAVR(2),FBW(1)
C     1	  ,FBW(2),SKEW(1),SKEW(2)
 1111	FORMAT(I10,I10,F7.3,2F8.0,2E11.3,2E11.3)
C****
C	WRITE(37,*), NO_EVT,XMAX,YMAX,XCOUNT,YCOUNT
C**** 
C	ANGLE =  -360.*SUNCLOCK/4096. - 45.       ! ANGLE SUN TO +EX AT END
C	DANG = SPINRATE*360./SPS/TWOPI		  ! CHANGE PER SAMPLE
C	THANT = ANGLE + 1024.*DANG + 360.	  ! ANGLE SUN TO +EX AT MIDDLE
C
	FP = -1.
	IF(DENS.GT.0.) FP = 9.*SQRT(DENS)			  ! PLASMA FREQ IN KHZ
	FCE = .028*BMAG
C	BETA = .402*(TEMPE+TEMPI)/BMAG**2
C
	  IFOUND = 0
c		to exclude cals
	  if(sceti4(2).lt.010000.or.sceti4(2).gt.011000) then
	      write(90,1054) SCETI4,ERTDAY,EVENT(1:1),NO_EVT,MAXCH1,MAXCH2,
     1		E1MAX,E2MAX,EEIG1,EEIG2,FREQKHZ,FP,FCE
 1054	  FORMAT(I10,I7,I3,A2,I10,2I4,4E11.3,3F8.2)
	  endif
	  GO TO 100
C	IF(Z1MAX.GT.2.*Z2MAX) THEN
c	  PRINT*,'EVENT NO.',NO_EVT,' A BIG GAP',Z1MAX,Z2MAX
c	  ITEM = 'SUN_ANGLE'
c	  ok = W_ITEM_I4(ch, item, SUNCLOCK, 1, ret_size)
c	  write(55,*) no_evt,sunclock,z1max,z2max
C	  IFOUND = 0
C	  GO TO 100
C	ENDIF
c	the following test eliminated a good event, 14583199 19960527
c	IF(ZCNT1.LT..7*ZCNT2) THEN
c	  PRINT*,'EVENT NO.',NO_EVT,' NOT ENOUGH ZERO CROSSING IN CH 1'
c	  IFOUND = 0
c	  GO TO 100
c	ENDIF
C
C*****	CHECKING
c	PRINT*,'VMATRIX',VMATRIX(1,1),VMATRIX(1,2),VMATRIX(2,2)
c	PRINT*,'EVALS,AXS,PX,PY',EVAL(1),EVAL(2),AXMAJOR,AXMINOR,
c     1		PX,PY
C*****
C
C	PLASMA PARAMETERS, ETC.

C	   write(s,'(i8.8,i6.6)',iostat=ios) s_scet(1), s_scet(2)
C	   s_scet = s(1:4)//'/'//s(5:6)//'/'//s(7:8)//' '//
C	1	s(9:10)//':'//s(11:12)//':'//s(13:14)
C
c	print date, time, event no., freq, Px, Py, Vy/Vx, angles of
c		antenna,B, phiB, mag B or fce, fp
c
c	PRINT*, 'PXTOT,PYTOT,RATIO',PXTOT,PYTOT,XYRATIO
C
C	  WRITE(90,1011) NO_EVT,sceti4,FREQKHZ,PX,PY,SLOPE,ANGTOB,
C     1	     AZMAG,MAGEL,FP,FCE,BETA,XCOUNT,YCOUNT
C 1011	format(I10,I7,I10,I3,F7.2,2E10.3,F8.3,2F7.1,I5,F7.3,F7.4,F8.4,2F7.0)
C	THE FOLLOWING IS A STANDARD FORMAT FOR READING IN TDSVIS
 1114   FORMAT(I10,I7,I10,I3,A2,3F7.0,F7.2,F6.2,F7.0,F6.1,3F7.1,2F7.1)
	IF(OK.NE.82) GO TO 100
	return
	end
