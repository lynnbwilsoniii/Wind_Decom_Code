	SUBROUTINE FFTLOANGLE(CH,DATA,SUNCLOCK,ANTANGLE)
C
C	USES CORRELATION WITH EX TO CALCULATE ANGLE
C
C	in this subroutine, model is a set of FFTL samples from
C	EXDC, augmented to make a complete revolution,  

C	EXDC, augmented to make a complete revolution.  
C	First, these are interpolated to make a set for the
C	present spin rate, and put into MODELI,  Then this is
C	copied to MODELT, and MODELT is rotated to match the
C	data set in DATA.  The outputs are SUNCLOCK, which is
C	supposed to be the same as the item SUN_ANGLE, and
C	ANTANGLE, the angle from the sun to the +EX antenna
C	in the GSE system
C
	REAL DATA(1024),MODEL(1100),MODELT(1300),MODELI(1300)
	REAL MASK(1100),MASKI(1300),MASKT(1399),CORR(1024)
	REAL ANG(1100),ANGI(1300)
	INTEGER*4 CH,OK
	CHARACTER*32 ITEM
	DATA CALANGLE /1104./
	DATA FUNDFR /.33356/
	DATA SPINRSV /0./
	DATA IREADIN /0/
	DATA LENGTH /1098/
	DATA MASK /1100*1./
	DATA TWOPI /6.28318531/
C
C	READ IN MODEL DATA, ONCE ONLY
C
	IF(IREADIN.EQ.0) THEN
	  OPEN(UNIT=88,NAME='FFTLOMODEL.DATA',TYPE='OLD',READONLY)
	  READ(88,*) (MODEL(I),I=1,1098)
C	  PRINT*,'1020 TO 1030',(MODEL(I),I=1020,1030)
	  PRINT*,' READIN, LOANGLE MODEL(1098)',MODEL(1098)
	  IREADIN = 1
	  CLOSE(UNIT=88)
	  DO I = 53,97
	    MASK(I) = 0.
	  ENDDO
	  DO I = 601,645
	    MASK(I) = 0.
	  ENDDO
	  DO N = 1,1098
	    ANG(N) = (N-1)*TWOPI/LENGTH
	  ENDDO
C
C	  do i = 1,1024
C	    write(97,*) i, DATA(i)
C	  enddo
C
C	  do i = 1,1098
C	    write(99,*) i, model(i)
C	  enddo
C
	ENDIF
C
C	GET RELEVANT INFORMATION, SPIN RATE, ETC.
C
	ITEM = 'WIND_SPIN_RATE_R4'
	OK = W_ITEM_R4(CH,ITEM,SPINRATE,1,ISIZE)
	SAMP_PER_SEC = 1024.*FUNDFR
	DANG = SPINRATE/SAMP_PER_SEC			! IN RADIANS
	SAMP_PER_SPIN = TWOPI/DANG
	NSPPS = SAMP_PER_SPIN + .5			! ROUNDOFF
C	PRINT*,'SPINRATE,NSPPS',SPINRATE,NSPPS
C
	IF(ABS(SPINRATE-SPINRSV).GT..002) THEN
C
C	  MAKE A MODEL WITH SAMPLES SEPARATED BY  SAME ANGLE AS
C		PRESENT DATA
C
	  DO N = 1,NSPPS
	    ANGI(N) = (N-1)*DANG			! IN RADIANS
	    CALL INTERP(ANG,MODEL,1098,ANGI(N),MODELI(N),ERR1)
	    CALL INTERP(ANG,MASK ,1098,ANGI(N),MASKI(N),ERR2 )
	  ENDDO
	  SPINRSV = SPINRATE
	ENDIF
C
C	NORMALIZE DATA
C
	SQRN = 0.
	DO N = 1,1024
		SQRN = SQRN + MASKI(N)*DATA(N)**2
	ENDDO
	SQRN = SQRT(SQRN)
C	PRINT*,'SQRN,DAT',SQRN,DATA(1),DATA(2),DATA(3)
C
	COUNT = 0.
	SQRM = 0.
	DO N = 1,NSPPS
		MODELT(N) = MODELI(N)
		MASKT(N)  = MASKI(N)
		COUNT = COUNT + MASKI(N)
		SQRM = SQRM + MODELI(N)**2
	ENDDO
	SQRM = SQRT(SQRM)
C	PRINT*,'SQRM,MOD',SQRM,MODELI(1),MODELI(2),MODELI(3)
C
	ICORR = 0
C
C	DO CROSS CORRELATION
C
	CORRMAX = 0.
	MAX = 0
 100	CORRT = 0.
	DO N = 1,1024
		CORRT = CORRT + MODELT(N)*MASKT(N)*DATA(N)
	ENDDO
	ICORR = ICORR+1
	CORR(ICORR) = CORRT/SQRN/SQRM
C	write(63,*) icorr,corr(icorr)
	IF(CORRT.GT.CORRMAX) THEN
		CORRMAX = CORRT
		MAX = ICORR
	ENDIF
C
C	ROTATE MODEL ONE STEP
C
	MODELT(NSPPS+1) = MODELT(1)
	MASKT(NSPPS+1) = MASKT(1)
	DO N = 1,NSPPS
		MODELT(N) = MODELT(N+1)
		MASKT(N) = MASKT(N+1)
	ENDDO
	IF(ICORR.LT.NSPPS) GO TO 100
C
	CORRMAX = CORRMAX/SQRN/SQRM 
	SPPS = SAMP_PER_SPIN
	SUNCLOCK = -4096.*(SPPS-MAX)/SPPS + CALANGLE
	IF(SUNCLOCK.LT.0) SUNCLOCK = SUNCLOCK + 4096.
	ANTANGLE = 315. - 360.*SUNCLOCK/4096.
	IF(ANTANGLE.GT.180.)  ANTANGLE = ANTANGLE - 360.
	IF(ANTANGLE.LT.-180.) ANTANGLE = ANTANGLE + 360.
C	write(63,*) 'RESULT',SPINRATE,MAX,CORRMAX,SUNCLOCK
	RETURN
	END
