	FUNCTION TDSCAL(CHANNEL,SPEED,TM)
C
C	this function converts the telemetry number TM from the TDS of
C	Wind-Waves to volts--voltage output from the preamplifiers.
C	If voltage input, i.e. voltage on the antenna, is desired, some
C	further calculation to correct for preamp gain as a function of
C	frequency is required.  
C		As there are 5 different A/D converters,
C	it is necessary to specify the channel  (1 to 6, ITEM = 'CHANNEL')  
C	For channels 1 and 2, the fast channels, it is also necessary to 
C	specify the speed, i.e. the sample rate (ITEM = "RX_SPEED")
C
	INCLUDE 	'TDS_CALDATA.FOR'
C
C	the following are in tds_caldata.for, included
C
C	COMMON /TCALDATA/ A(6),B(6),POFFS(6),NOFFS(6)
C	INTEGER*4 CHANNEL,SPEED,TM,INDEX
C	REAL TDSCAL,A,B,POFFS,NOFFS
C	DATA B /.08316,.08151,.08099,.08212,.08293,.08293/
C	DATA A /3.19E-4,2.14E-4,3.89E-4,2.40E-4,1.75E-4,1.94E-4/
C	DATA POFFS /4.01,6.31,4*0./
C	DATA NOFFS /1.59,1.79,4*0./
C
	INDEX = MIN0(2*CHANNEL + MIN0(SPEED,1) - 1, 5)
	TMNB = TM - 128
	IF(INDEX.EQ.5.AND.ABS(TMNB).LT.78.) INDEX = 6
C
C	INDEX = 1 IS CHANNEL 1, FASTEST, 2 IS CHANNEL 1, SLOWER, 3 IS
C	CHANNEL 2 FASTEST, 4 IS CHANNEL 2 SLOWER, 5,6 ARE CHANNELS 3-6,
C	5 FOR TM GT. 78, 6 FOR TM LT 78
C
	IF(TMNB.GT.0.) THEN
	  TDSCAL = A(INDEX)*(EXP(B(INDEX)*TMNB) - POFFS(INDEX))
	ELSE
	  TDSCAL = -A(INDEX)*(EXP(-B(INDEX)*TMNB) - NOFFS(INDEX))
	ENDIF
	RETURN
	END
	FUNCTION EXDCPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE DC CHANNEL OF THE WIND X PREAMP
C	(COMPLEX)
C
	COMPLEX EXDCPA
	DATA F0 /51.E03/
C
	EXDCPA = .542/CMPLX(1.,F/F0)
C
	RETURN
	END
	FUNCTION EYDCPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE DC CHANNEL OF THE WIND X PREAMP
C	(COMPLEX)
C
	COMPLEX EYDCPA
	DATA F0 /41.E03/
C
	EYDCPA = .35/CMPLX(1.,F/F0)
C
	RETURN
	END
	FUNCTION EZDCPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE DC CHANNEL OF THE WIND X PREAMP
C	(COMPLEX)
C
	COMPLEX EZDCPA
	DATA F0 /46.E03/
C
	EZDCPA = .867/CMPLX(1.,F/F0)
C
	RETURN
	END
	FUNCTION EXACPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE AC CHANNEL OF THE WIND X PREAMP
C	(COMPLEX)
C
C	COMPONENT DESIGNATIONS ARE SAME AS SCHEMATIC
C
C
	COMPLEX EXACPA
	COMPLEX CGAIN,Y1,Z1,Y2,Z2,Y3,Z3,OPAMPIN,ZMEU
	DATA R9,C9,R10,CINP /5.E8,23.6E-12,5.E8,4.37E-12/
	DATA C29,R43,C12,R28/ 114.4E-9,47.E+3,12.31E-9,100.E+3/
	DATA R29,C13,R12,C26/ 470.,4.289E-9,10.E3,125.4E-9/
	DATA C15,R32,C27,R11/ 0.,10.E3,470.E-12,1.5E3/
	DATA C25,R39,C30/435.7E-9,330.,39.03E-9/ 
	DATA CMEU,RMEU /20.E-9,300./
	DATA TWOPI /6.2831853/
C
C	TO BE CHANGED FOR Y,Z:  R11,R32,C27,R9,C9,R10
C
C	C30 = CVAR(1) = 39.03 nF
C	C26 = CVAR(2) = 125.4
C	C25 = CVAR(3) = 435.7
C	C13 = CVAR(4) = 4.289
C	C29 = CVAR(5) = 114.4
C	C12 = CVAR(6) = 12.31
C	SUMSQ = .0109, RUN OF 22 JAN 1997
C
	EXACPA=0.
	IF(F.EQ.0.) RETURN
	W = TWOPI*F
	CGAIN = 1.
C
C	DIVISION OF SIGNAL BEFORE FOLLOWER
C
	Y1 = CMPLX(1./R9,W*C9)
	Y2 = CMPLX(1./R10,W*CINP)
	Z1 = 1./Y1
	Z2 = 1./Y2
	CGAIN = CGAIN*Z2/(Z1+Z2)
C
C	EFFECT OF OUTPUT OP AMP
C	
C	FILTERING BEFORE INPUT
	Z1 = R28                 	! LAST LOAD BEFORE OP AMP
	WC12 = W*C12
	Z2 = CMPLX(R28,-1./WC12)        !  LAST RC
	Y1 = 1./CMPLX(R43,0.) + 1./Z2   !  LAST RC IN PARALLEL WITH R43
	WC29 = W*C29                    
	Z3 = 1./Y1 + CMPLX(0.,-1./WC29) !  LOAD ON FOLLOWER
	OPAMPIN = CGAIN*(Z1/Z2)*(1./Y1/Z3)
C
C	OP AMP GAIN
C
C	Z3 FROM NEG. INPUT TO GROUND
	WC13 = W*C13
	Z1 = CMPLX(R29,-1./WC13)
	WC26 = W*C26
	Z2 = CMPLX(R12,-1./WC26)
	Y1 = 1./Z1 + 1./Z2                  ! Y FROM NEG INPUT TO GROUND
	Z3 = 1./Y1                          ! Z FROM NEG INPUT TO GROUND
C	Z2 FROM OUTPUT TO NEG INPUT
	WC27 = W*C27
	Z1 = CMPLX(R11,-1./WC27)
	WC15 = W*C15
	Y1 = CMPLX(1./R32,WC15)
	Y2 = Y1 + 1./Z1 
	Z2 = 1./Y2
	CGAIN = OPAMPIN*(Z3 + Z2)/Z3
C
C	FILTERING AFTER OP AMP OUTPUT
C
	WC30 = W*C30
	RMINN = 22.1E3                ! input resistance on 210 board
	Y1 = CMPLX(1./RMINN,WC30)
	Z1 = R39 + 1./Y1
	WC25 = W*C25
C	RTNR = .42e5		      ! total TNR load
	ZMEU = 47. + CMPLX(RMEU,-1./W/CMEU)
	Y3 = 1./ZMEU + 1./Z1
	Z2 = CMPLX(0.,-1./WC25)
	CGAIN = CGAIN/(1.+Y3*Z2)/Y1/Z1	
C
C	GNIP = AIMAG(CGAIN)
C	GNRP = CGAIN
C	PHASE = ATAN2(GNIP,GNRP)
	EXACPA = CGAIN
	RETURN
	END
	FUNCTION EYACPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE AC CHANNEL OF THE WIND Y PREAMP
C	(COMPLEX )
C
C	COMPONENT DESIGNATIONS ARE SAME AS SCHEMATIC
C
	COMPLEX EYACPA
	COMPLEX CGAIN,Y1,Z1,Y2,Z2,Y3,Z3,OPAMPIN,ZMEU
	DATA R9,C9,R10,CINP /5.E9,24.5E-12,5.E9,4.757E-12/
	DATA C29,R43,C12,R28/ 76.2E-9,47.E+3,16.26E-9,100.E+3/
	DATA R29,C13,R12,C26/ 470.,4.511E-9,10.E3,106.0E-9/
	DATA C15,R32,C27,R11/ 0.,33.E3,150.E-12,4.7E3/
	DATA C25,R39,C30/387.3E-9,330.,44.8E-9/
 	DATA CMEU,RMEU /20.E-9,300./
	DATA TWOPI /6.2831853/
C
C	TO BE CHANGED FOR Y,Z:  R11,R32,C27,R9,C9,R10
C
C	DONE AND CHECKED
C
C	C30 = CVAR(1) = 44.80 E-9
C	C26 = CVAR(2) = 106.0 E-9
C	C25 = CVAR(3) = 387.3 E-9
C	C13 = CVAR(4) = 4.511 E-9
C	C29 = CVAR(5) = 76.2 E-9
C	C12 = CVAR(6) = 16.26 E-9
C	SUMSQ = .265,  RUN OF 22 JAN 1997
C
	EYACPA=0.
	IF(F.EQ.0.) RETURN
	W = TWOPI*F
	CGAIN = 1.
C
C	DIVISION OF SIGNAL BEFORE FOLLOWER
C
	Y1 = CMPLX(1./R9,W*C9)
	Y2 = CMPLX(1./R10,W*CINP)
	Z1 = 1./Y1
	Z2 = 1./Y2
	CGAIN = CGAIN*Z2/(Z1+Z2)
C
C	EFFECT OF OUTPUT OP AMP
C	
C	FILTERING BEFORE INPUT
	Z1 = R28                 	! LAST LOAD BEFORE OP AMP
	WC12 = W*C12
	Z2 = CMPLX(R28,-1./WC12)        !  LAST RC
	Y1 = 1./CMPLX(R43,0.) + 1./Z2   !  LAST RC IN PARALLEL WITH R43
	WC29 = W*C29                    
	Z3 = 1./Y1 + CMPLX(0.,-1./WC29) !  LOAD ON FOLLOWER
	OPAMPIN = CGAIN*(Z1/Z2)*(1./Y1/Z3)
C
C	OP AMP GAIN
C
C	Z3 FROM NEG. INPUT TO GROUND
	WC13 = W*C13
	Z1 = CMPLX(R29,-1./WC13)
	WC26 = W*C26
	Z2 = CMPLX(R12,-1./WC26)
	Y1 = 1./Z1 + 1./Z2                  ! Y FROM NEG INPUT TO GROUND
	Z3 = 1./Y1                          ! Z FROM NEG INPUT TO GROUND
C	Z2 FROM OUTPUT TO NEG INPUT
	WC27 = W*C27
	Z1 = CMPLX(R11,-1./WC27)
	WC15 = W*C15
	Y1 = CMPLX(1./R32,WC15)
	Y2 = Y1 + 1./Z1 
	Z2 = 1./Y2
	CGAIN = OPAMPIN*(Z3 + Z2)/Z3
C
C	FILTERING AFTER OP AMP OUTPUT
C
	WC30 = W*C30
	RMINN = 22.1E3                ! input resistance on 210 board
	Y1 = CMPLX(1./RMINN,WC30)
	Z1 = R39 + 1./Y1
	WC25 = W*C25
C	RTNR = .42e5		      ! total TNR load
	ZMEU = 47. + CMPLX(RMEU,-1./W/CMEU)
	Y3 = 1./ZMEU + 1./Z1
	Z2 = CMPLX(0.,-1./WC25)
	CGAIN = CGAIN/(1.+Y3*Z2)/Y1/Z1	
C
	EYACPA = CGAIN
	RETURN
	END
	FUNCTION EZACPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE AC CHANNEL OF THE WIND Z PREAMP
C	(COMPLEX)
C
C	COMPONENT DESIGNATIONS ARE SAME AS SCHEMATIC
C
	COMPLEX EZACPA
	COMPLEX CGAIN,Y1,Z1,Y2,Z2,Y3,Z3,OPAMPIN,ZMEU
	DATA R9,C9,R10,CINP /18.E6,84.E-12,2.E8,4.99E-12/
	DATA C29,R43,C12,R28/ 76.24E-9,47.E+3,24.6E-9,100.E+3/
	DATA R29,C13,R12,C26/ 470.,4.587E-9,10.E3,75.07E-9/
	DATA C15,R32,C27,R11/ 0.,33.E3,150.E-12,4.7E3/
	DATA C25,R39,C30/352.2E-9,330.,48.32E-9/ 
	DATA CMEU,RMEU /20.E-9,300./
	DATA TWOPI /6.2831853/
C
C	DONE AND CHECKED
C
C 	C30 = CVAR(1) = 48.32 nF
C	C26 = CVAR(2) = 75.07
C	C25 = CVAR(3) = 352.2
C	C13 = CVAR(4) = 4.587
C	C29 = CVAR(5) = 76.24
C	C12 = CVAR(6) = 24.60
C	SUMSQ = .3775
C
	EZACPA=0.
	IF(F.EQ.0.) RETURN
	W = TWOPI*F
	CGAIN = 1.
C
C	DIVISION OF SIGNAL BEFORE FOLLOWER
C
	Y1 = CMPLX(1./R9,W*C9)
	Y2 = CMPLX(1./R10,W*CINP)
	Z1 = 1./Y1
	Z2 = 1./Y2
	CGAIN = CGAIN*Z2/(Z1+Z2)
C
C	CGAIN = 3.2
C
C	EFFECT OF OUTPUT OP AMP
C	
C	FILTERING BEFORE INPUT
	Z1 = R28                 	! LAST LOAD BEFORE OP AMP
	WC12 = W*C12
	Z2 = CMPLX(R28,-1./WC12)        !  LAST RC
	Y1 = 1./CMPLX(R43,0.) + 1./Z2   !  LAST RC IN PARALLEL WITH R43
	WC29 = W*C29                    
	Z3 = 1./Y1 + CMPLX(0.,-1./WC29) !  LOAD ON FOLLOWER
	OPAMPIN = CGAIN*(Z1/Z2)*(1./Y1/Z3)
C
C	OP AMP GAIN
C
C	Z3 FROM NEG. INPUT TO GROUND
	WC13 = W*C13
	Z1 = CMPLX(R29,-1./WC13)
	WC26 = W*C26
	Z2 = CMPLX(R12,-1./WC26)
	Y1 = 1./Z1 + 1./Z2                  ! Y FROM NEG INPUT TO GROUND
	Z3 = 1./Y1                          ! Z FROM NEG INPUT TO GROUND
C	Z2 FROM OUTPUT TO NEG INPUT
	WC27 = W*C27
	Z1 = CMPLX(R11,-1./WC27)
	WC15 = W*C15
	Y1 = CMPLX(1./R32,WC15)
	Y2 = Y1 + 1./Z1 
	Z2 = 1./Y2
	CGAIN = OPAMPIN*(Z3 + Z2)/Z3
C
C	FILTERING AFTER OP AMP OUTPUT
C
	WC30 = W*C30
	RMINN = 22.1E3                ! input resistance on 210 board
	Y1 = CMPLX(1./RMINN,WC30)
	Z1 = R39 + 1./Y1
	WC25 = W*C25
C	RTNR = .42e5		      ! total TNR load
	ZMEU = 47. + CMPLX(RMEU,-1./W/CMEU)
	Y3 = 1./ZMEU + 1./Z1
	Z2 = CMPLX(0.,-1./WC25)
	CGAIN = CGAIN/(1.+Y3*Z2)/Y1/Z1	
C
	EZACPA = CGAIN
	RETURN
	END
	FUNCTION BXPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE WIND X SEARCH COIL,PREAMP AND
C	INPUT STAGE ON THE 212 BOARD. (COMPLEX)
C
C
	COMPLEX BXPA
	COMPLEX CGAIN,Y1,Z1,Y2,Z2
	DATA Q,T0,F0 / 1.47,.749,1650./     		! T0 is in Volts/nT
	DATA C10,R1,R2,C1/ .952E-6, 49.9E3, 1.E6, 1.E-9/
	DATA TWOPI /6.2831853/
C
C
	BXPA=0.
	IF(F.EQ.0.) RETURN
	W = TWOPI*F
C	OUTPUT OF SEARCH COIL PLUS PREAMP, VOLTS/nT
	CGAIN = T0/CMPLX(1.,Q*(F/F0 - F0/F))
C
C	EFFECT OF INPUT ON 212 BOARD
C
	Y2 = CMPLX(1./R2,W*C1)
	Z1 = CMPLX(R1, -1./W/C10)
	CGAIN = CGAIN/(Z1*Y2)
C
C	NORMALIZE TO E PREAMPS
C
c	CGAIN = .852*CGAIN
C
	BXPA = CGAIN
	RETURN
	END
	FUNCTION BYPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE WIND Y SEARCH COIL,PREAMP AND
C	INPUT STAGE ON THE 212 BOARD. (COMPLEX)
C
	COMPLEX BYPA
	COMPLEX CGAIN,Y1,Z1,Y2,Z2
	DATA Q,T0,F0 / 1.49,.759,1560./     		! T0 is in Volts/nT
	DATA C10,R1,R2,C1/ .992E-6, 49.9E3, 1.E6, 1.002E-9/
	DATA TWOPI /6.2831853/
C
C
	BYPA=0.
	IF(F.EQ.0.) RETURN
	W = TWOPI*F
C	OUTPUT OF SEARCH COIL PLUS PREAMP, VOLTS/nT
	CGAIN = T0/CMPLX(1.,Q*(F/F0 - F0/F))         ! Volts/nT
C
C	EFFECT OF INPUT ON 212 BOARD
C
	Y2 = CMPLX(1./R2,W*C1)
	Z1 = CMPLX(R1, -1./W/C10)
	CGAIN = CGAIN/(Z1*Y2)
C
C	NORMALIZE TO E PREAMPS
C
c	CGAIN = .852*CGAIN
C
	BYPA = CGAIN
	RETURN
	END
	FUNCTION BZPA(F)
C
C	THIS FUNCTION RETURNS THE GAIN OF THE WIND Z SEARCH COIL,PREAMP AND
C	INPUT STAGE ON THE 212 BOARD.(COMPLEX)
C
C
	COMPLEX BZPA
	COMPLEX CGAIN,Y1,Z1,Y2,Z2
	DATA Q,T0,F0 / 1.43,.763,1700./     		! T0 is in Volts/nT
	DATA C10,R1,R2,C1/ .959E-6, 49.9E3, 1.E6, 1.005E-9/
	DATA TWOPI /6.2831853/
C
	BZPA=0.
	IF(F.EQ.0.) RETURN
	W = TWOPI*F
C	OUTPUT OF SEARCH COIL PLUS PREAMP, VOLTS/nT
	CGAIN = T0/CMPLX(1.,Q*(F/F0 - F0/F))
C
C	EFFECT OF INPUT ON 212 BOARD
C
	Y2 = CMPLX(1./R2,W*C1)
	Z1 = CMPLX(R1, -1./W/C10)
	CGAIN = CGAIN/(Z1*Y2)
C
C	NORMALIZE TO E PREAMPS
C
c	CGAIN = .852*CGAIN
C
	BZPA = CGAIN
	RETURN
	END
	FUNCTION TDSDET(CHANNEL,F)
C
C	THIS IS THE GAIN OF A CIRCUIT JUST BEFORE THE TDS DETECTOR
C
	INTEGER*4 CHANNEL
	COMPLEX TDSDET
	COMPLEX Z1,Y2,CGAIN
	DATA R1,C1,R2,C2 /1.505E3,.33E-6,1.E5,.33E-6/
	DATA TWOPI /6.2831853/
C
	TDSDET = CMPLX(0.,0.)
	IF(F.EQ.0.) RETURN
	W = TWOPI*F
	IF(CHANNEL.GT.2) THEN
	  Z1 = CMPLX(R2,-1./W/C2)               ! 4.82 HZ
	  CGAIN = R2/Z1
	ELSE
	  Z1 = CMPLX(R1,-1./W/C1)		! 320 HZ
	  CGAIN = R1/Z1
	ENDIF
C
	TDSDET = CGAIN
	RETURN
	END
	FUNCTION FFTAMP(CHANNEL,F)
C
C	THIS IS THE GAIN OF A CIRCUIT JUST BEFORE THE FFT D/A CONVERTER
C
	INTEGER*4 CHANNEL
	COMPLEX FFTAMP
	COMPLEX Z1,Y2,CGAIN
	REAL RSW(6),C2MUF(6),F
	DATA RSW /50.,400.,400.,0.,0.,0./
	DATA C2MUF /1.961,1.896,1.949,1.981,2.011,1.943/
	DATA C1,R2,C2 /2.E-6,1.E4,1.E-9/
	DATA TWOPI /6.2831853/
C
	FFTAMP = CMPLX(1.,0.)
	IF(CHANNEL.GT.6) RETURN
	CGAIN = CMPLX(1.,0.)
	W = TWOPI*F
	C1 = C2MUF(CHANNEL)*1.E-6
	RSWT = RSW(CHANNEL)
	Z1 = CMPLX(RSWT,-1./W/C1)
	Y2 = CMPLX(1./R2,W*C2)
	CGAIN = 1./(1. + Y2*Z1)
C
	FFTAMP = CGAIN
	RETURN
	END
	FUNCTION TDS_FILTER(CHANNEL,FILTER_NO,F)
C
C	CHANNEL IS THE TDS CHANNEL, ITEM - 'CHANNEL', FILTER_NO IS THE NUMBER 
C	RETURNED BY ITEM, IS = 0 FOR HIGHEST CUTOFF FREQUENCY, 3 FOR LOWEST
C
	COMPLEX CGAIN,TDS_FILTER
	INTEGER*4 CHANNEL,FILTER_NO
	REAL F, F0(6),FQ(6)
	DATA F0 /9600.,9600.,4*2400./
C
	CGAIN = CMPLX(1.,0.)
	PHASE = 0.
	TDS_FILTER = CGAIN
	RETURN
	END
	FUNCTION FFT_FILTER(CHANNEL,F)
C
C	CHANNEL IS THE FFT CHANNEL, ITEM - 'CHANNEL_NUMBER'
C
	COMPLEX CGAIN,FFT_FILTER
	INTEGER*4 CHANNEL
	REAL F, F0(10),FQ(10)
	DATA F0 /9600.,9600.,8*2400./
C
	CGAIN = CMPLX(1.,0.)
	PHASE = 0.
	FFT_FILTER = CGAIN
	RETURN
	END
	FUNCTION PREAMP(IRX,F)
C
C	THIS FUNCTION CALLS THE APPROPRIATE PREAMP, AND RETURNS
C	THE COMPLEX PREAMP GAIN
C
C
	COMPLEX PREAMP,EXACPA,EYACPA,EZACPA,EXDCPA,EYDCPA,EZDCPA
	COMPLEX BXPA,BYPA,BZPA
C
	IF(IRX.EQ.1) PREAMP = EXACPA(F)
	IF(IRX.EQ.2) PREAMP = EYACPA(F)
	IF(IRX.EQ.3) PREAMP = EZACPA(F)
	IF(IRX.EQ.4) PREAMP = EXDCPA(F)
	IF(IRX.EQ.5) PREAMP = EYDCPA(F)
	IF(IRX.EQ.6) PREAMP = EZDCPA(F)
	IF(IRX.EQ.7) PREAMP = BXPA(F)
	IF(IRX.EQ.8) PREAMP = BYPA(F)
	IF(IRX.EQ.9) PREAMP = BZPA(F)
	RETURN
	END
      SUBROUTINE REALFT(DATA,N,ISIGN)
C	Calculates the Fourier Transform of a set of 2*N real-valued data
C	points.  Replaces this data (which is stored in array DATA) by the
C	positive frequency half of its complex Fourier Transform.  The real-
C	valued first and last components of the complex transform are 
C	returned as DATA(1) and DATA(2) respectively.  
C
C	Although the book, Recipes, does not say so, the Fourier 
C	coefficients must be divided by N to calculate the power
C	spectrum
C
      REAL*8 WR,WI,WPR,WPI,WTEMP,THETA
      DIMENSION DATA(*)
      THETA=6.28318530717959D0/2.0D0/DBLE(N)
      WR=1.0D0
      WI=0.0D0
      C1=0.5
      IF (ISIGN.EQ.1) THEN
        C2=-0.5
        CALL FOUR1(DATA,N,+1)
        DATA(2*N+1)=DATA(1)
        DATA(2*N+2)=DATA(2)
      ELSE
        C2=0.5
        THETA=-THETA
        DATA(2*N+1)=DATA(2)
        DATA(2*N+2)=0.0
        DATA(2)=0.0
      ENDIF
      WPR=-2.0D0*DSIN(0.5D0*THETA)**2
      WPI=DSIN(THETA)
      N2P3=2*N+3
      DO 11 I=1,N/2+1
        I1=2*I-1
        I2=I1+1
        I3=N2P3-I2
        I4=I3+1
        WRS=SNGL(WR)
        WIS=SNGL(WI)
        H1R=C1*(DATA(I1)+DATA(I3))
        H1I=C1*(DATA(I2)-DATA(I4))
        H2R=-C2*(DATA(I2)+DATA(I4))
        H2I=C2*(DATA(I1)-DATA(I3))
        DATA(I1)=H1R+WRS*H2R-WIS*H2I
        DATA(I2)=H1I+WRS*H2I+WIS*H2R
        DATA(I3)=H1R-WRS*H2R+WIS*H2I
        DATA(I4)=-H1I+WRS*H2I+WIS*H2R
        WTEMP=WR
        WR=WR*WPR-WI*WPI+WR
        WI=WI*WPR+WTEMP*WPI+WI
11    CONTINUE
      IF (ISIGN.EQ.1) THEN
        DATA(2)=DATA(2*N+1)
      ELSE
        CALL FOUR1(DATA,N,-1)
      ENDIF
      RETURN
      END
      SUBROUTINE FOUR1(DATA,NN,ISIGN)
      REAL*8 WR,WI,WPR,WPI,WTEMP,THETA
      DIMENSION DATA(*)
      N=2*NN
      J=1
      DO 11 I=1,N,2
        IF(J.GT.I)THEN
          TEMPR=DATA(J)
          TEMPI=DATA(J+1)
          DATA(J)=DATA(I)
          DATA(J+1)=DATA(I+1)
          DATA(I)=TEMPR
          DATA(I+1)=TEMPI
        ENDIF
        M=N/2
1       IF ((M.GE.2).AND.(J.GT.M)) THEN
          J=J-M
          M=M/2
        GO TO 1
        ENDIF
        J=J+M
11    CONTINUE
      MMAX=2
2     IF (N.GT.MMAX) THEN
        ISTEP=2*MMAX
        THETA=6.28318530717959D0/(ISIGN*MMAX)
        WPR=-2.D0*DSIN(0.5D0*THETA)**2
        WPI=DSIN(THETA)
        WR=1.D0
        WI=0.D0
        DO 13 M=1,MMAX,2
          DO 12 I=M,N,ISTEP
            J=I+MMAX
            TEMPR=SNGL(WR)*DATA(J)-SNGL(WI)*DATA(J+1)
            TEMPI=SNGL(WR)*DATA(J+1)+SNGL(WI)*DATA(J)
            DATA(J)=DATA(I)-TEMPR
            DATA(J+1)=DATA(I+1)-TEMPI
            DATA(I)=DATA(I)+TEMPR
            DATA(I+1)=DATA(I+1)+TEMPI
12        CONTINUE
          WTEMP=WR
          WR=WR*WPR-WI*WPI+WR
          WI=WI*WPR+WTEMP*WPI+WI
13      CONTINUE
        MMAX=ISTEP
      GO TO 2
      ENDIF
      RETURN
      END
	FUNCTION FILTER_3DP(F)
C
C
	COMPLEX FILTER_3DP,CGAIN,ZIN,YOUT
	DATA R43,C27,R45,C25 /47.5E3,3.3E-9,47.5E3,22.E-12/
	DATA TWOPI /6.2831853/
C
	CGAIN = CMPLX(1.,0.)
	PHASE = 0.
	W27 = TWOPI*F*C27
	ZIN = CMPLX(R43,-1./W27)
	W25 = TWOPI*F*C25
	YOUT = CMPLX(1./R45,W25)
	CGAIN = 1./YOUT/ZIN
C
	FILTER_3DP = CGAIN
	RETURN
	END
