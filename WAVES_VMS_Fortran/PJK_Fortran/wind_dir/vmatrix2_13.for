	SUBROUTINE VMATRIX2(DATA,N1,N2)
C
C	CALCULATES VARIANCE MATRIX AND EIGENVALUES, USING DATA VALUES
C	FROM 1 TO N1, AND N2 TO 2048, WORKS ON 2 VALUES, I.E. TDSF
C
C	COMMON /PARTBLK/ XDATA(2050,4),XFDATA(2050,4),XGSE(2050,4),
C     1		XRE,YRE,ZRE,SUNCLOCK,SPINRATE,SPSS
	common /headblk/ major,minor,s_scet,nsys
	COMMON /VARMATX/ EVAL(2),EVECT(2,2)
	REAL DATA(2050,4),DATAS(2050,3),VMAT(2,2),AV(2)
	REAL WT(2048)
	integer*4	s_scet(2)
	INTEGER*4 SUNCLOCK
C
C	CALCULATE WEIGHTS, TO ELIMINATE BZGLITCH
C
C	WRITE(79,*) ' '	
C	WRITE(79,*) 'IN VMATRIX, N1,N2',N1,N2	
C
	DO N = 1,2048
	  WT(N) = 1.
	ENDDO
C	IF(N2-N1.LT.90) THEN
C	  WRITE(79,*) 'VARIANCE MATRIX FOR SAMPLES EXCEPT',N1,' TO',N2	
C	  DO N = N1,N2
C	    WT(N) = 0.
C	  ENDDO
C	ELSE
C	  WRITE(79,*) 'VARIANCE MATRIX FOR ALL SAMPLES '
C	ENDIF
C
C	subtract averages
C
	DO M = 1,2
	  AV(M) = 0.
	  DO N = 1,2048
		AV(M) = AV(M) + WT(N)*DATA(N,M)
	  ENDDO
	  AV(M) = AV(M)/(N2-N1+1)
	ENDDO
	DO M = 1,2	
	  DO N = 1,2048
		DATAS(N,M) = DATA(N,M) - AV(M)
	  ENDDO
	ENDDO
C
C	PRINT*,' WITH AVERAGES REMOVED'
C
C	FORM VARIANCE MATRIX
C	
	DO K = 1,3
	  DO M = 1,3
		VMAT(K,M) = 0.
	  ENDDO
	ENDDO
C	
	DO N = N1,N2
	  DO K = 1,2
	    DO M = 1,2
		VMAT(K,M) = VMAT(K,M) + WT(N)*DATAS(N,K)*DATAS(N,M)
	    ENDDO
	  ENDDO
	ENDDO	
C
	DO K = 1,2
	  DO M = 1,2
		VMAT(K,M) = VMAT(K,M)/(N2-N1+1)
	  ENDDO
	ENDDO
	print*,'diag elems',vmat(1,1),vmat(2,2),vmat(3,3),
     1	' trace',vmat(1,1)+vmat(2,2)+vmat(3,3)
C
C	CALCULATE EIGENVALUES AND MATRIX OF EIGENVECTORS
C
	CALL JACOBI(VMAT,2,2,EVAL,EVECT,NROT)
C	PRINT*,'EIGENVALUES',EVAL
C	PRINT*,'EIGENVECTOR'
C	PRINT*,(EVECT(1,I),I=1,3)
C	PRINT*,(EVECT(2,I),I=1,3)
C	PRINT*,(EVECT(3,I),I=1,3)
C
C	SORT IN DESCENDING ORDER OF EIGENVALUES
C
	CALL EIGSRT(EVAL,EVECT,2,2)
C
C
C 	ENFORCE A RIGHT HANDED SYSTEM BY REVERSING THE SMALLEST
C	EIGENVECTOR IF NECESSARY
C
C	ADOTBXC = EVECT(1,1)*EVECT(2,2)*EVECT(3,3)
C     1	 - EVECT(1,1)*EVECT(3,2)*EVECT(2,3)
C     1	 + EVECT(2,1)*EVECT(1,3)*EVECT(3,2)
C     1	 - EVECT(2,1)*EVECT(1,2)*EVECT(3,3)
C     1	 + EVECT(3,1)*EVECT(1,2)*EVECT(2,3)
C     1	 - EVECT(3,1)*EVECT(2,2)*EVECT(1,3)
C	PRINT*,'DETERMINANT OF EIGENVECTORS',ADOTBXC
C	IF(ADOTBXC.LT.0.) THEN        ! REVERSE SMALLEST EVECT FOR RH SYSTEM
C	  EVECT(1,3) = -EVECT(1,3)
C	  EVECT(2,3) = -EVECT(2,3)
C	  EVECT(3,3) = -EVECT(3,3)
C	ENDIF
C
C	PRINT*,'IN SYSTEM',NSYS,'  EIGENVALUES:'
C	PRINT*,EVAL,' sum',eval(1)+eval(2)+eval(3)
C	PRINT*,'EIGENVECTORS'
C	PRINT*,(EVECT(1,I),I=1,2)
C	PRINT*,(EVECT(2,I),I=1,2)
C	PRINT*,(EVECT(3,I),I=1,3)
C	WRITE(79,*) 'IN SYSTEM',NSYS,'  EIGENVALUES:'
C	WRITE(79,*)  EVAL
C	WRITE(79,*) 'EIGENVECTORS IN COLUMNS BELOW EIGENVALUES'
C	WRITE(79,*)(EVECT(1,I),I=1,2)
C	WRITE(79,*)(EVECT(2,I),I=1,2)
C	WRITE(79,*)(EVECT(3,I),I=1,3)
	NSYS = 2
	RETURN
	END	
