	PROGRAM NOISE
C
C	THIS IS [KELLOGG.WIND]NOISE.FOR
C	MODIFIED FROM [KELLOGG.STEREO]NOISE.FOR
C
C	CALCULATES A FILE OF NOISE VALUES
C	modified for Stereo electric preamp, for circuit as changed in 
C		Jan 2002. (drawing dated 4 Feb.)  Now two files are produced:
C		the low rate science output and the mid freq output.
C		Gains for the two outputs, also.
C
C	IN THE FOLLOWING:
C		RANT AND RBASE ARE THE ANTENNA AND BASE RESISTANCES, 
C		CALCULATED FROM KELLOGG AND BALE, JGR 106, 18721, 2001
C		CA AND CB ARE THE CORRESPONDING CAPACITANCES
C		R2, CIN ARE THE RESISTANCE FROM DEVICE + INPUT TO
C			CHASSIS AND CIN IS COUPLING CAPACITOR
C		R1 IS RESISTANCE FROM ANTENNA TO S/C GROUND
C
	REAL FLIST(30),CASFREQ(1025),CASSIG(1025)
	REAL EN(5),IN(5),FTABLE(5)
	REAL VJX2(50),VTOT2OUT(50),VSX2(50),V2ENOUT(50),V2INOUT(50)
	REAL VJY2(50),VSY2(50),VJZ2(50),VSZ2(50)
	REAL VN2SV(50),VSSX2(50),VSSY2(50),VSSZ2(50)
	COMPLEX Y1,Z1,V1,ZINEQ,I1,ZANT,EFFLENC
C
	COMMON /CPARAMS/R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,CIN,C2,C3,CC,C5,C6,C9
	COMMON /ANTENNZ/ RANTPL,RBASE,CANT,CBASE
	COMMON /LOWOUT/ VJX2,VSX2,V2ENOUT,V2INOUT,VSSX2
	COMMON /MIDOUT/ VJY2,VSY2,VSSY2
	COMMON /ZAOUT/ VJZ2,VSZ2,VSSZ2
	COMMON /BOTH/ NF,FLIST
C
	DATA R1,R2,R3,R4,CIN /1.5E8,35.E6,35.E6,100.E6,1.E-10/
	DATA CB /70.E-12/
	DATA CC /180.E-12/
	DATA C3 /100.E-12/
	DATA R5,C5 /15.E3,1.E-6/
	DATA TWOPI /6.28318531/
	DATA BOLTZK /1.3807E-23/			! SI
	DATA CLIGHT /2.9979E10/
	DATA EVME /.511E6/
	DATA QESI /1.603E-19/
	DATA FLIST /.033,.18, 1., 5.5, 30., 25*1./
	DATA T_PREAMP /273./		! 0. C
	DATA DENSE /7./
	DATA TEMPE /10./		! ELECTRON TEMP IN EV
	DATA ANTLEN,ANTDIA/ 5000.,.038/  ! IN CM.
	DATA SATAREA /17.8E4/			   ! IN CM^2      	!WIND
	DATA SATCAP /130.E-12/						!WIND
C
C	DEVICE DATA FOR 2N3821 (WIND)
C
	DATA EN /13.E-9,4.5E-9,2.5E-9,1.8E-9,1.6E-9/
	DATA IN /2*.4E-16,4.5E-16,6.E-16,1.5E-15/
C
	REAL WINDLEN(3),WINDDIA(3),WINDEFF(3)
C	DATA PHYSLEN,DIA,TPHI /5000.,.038,.9/
C	DATA PHYSLEN,DIA,TPHI /600., 2., .9/
C	DATA PHYSLEN,DIA,TPHI /1000.,1.,.9/
C	DATA PHYSLEN,DIA,TPHI /1000.,2.8,.9/
C	DATA WT /1000*1./
	DATA WINDEFF /4110.,379.,217./   	! NOT WINDLIB VALUES
	DATA WINDLEN /5000.,750.,750./
	DATA WINDDIA /.038,.038,2.8/		! Z NOT CERTAIN
C
C	CALCULATE ANTENNA RESISTANCE FROM KELLOGG AND BALE,JGR 106,18721,(2001)
C
	PHOTAREA = ANTDIA*ANTLEN			 ! in cm^2
	PUPAREA = .5*TWOPI*ANTDIA*ANTLEN			 ! in cm^2
	TPHI = 1.3*11600.
	VTHERM = SQRT(16.*TEMPE/EVME/TWOPI)*CLIGHT		!CGS
	FLUX = DENSE*SQRT(TEMPE/TWOPI/EVME)*CLIGHT       ! per cm^2
	RANT = BOLTZK*TPHI/(QESI**2)/FLUX/PUPAREA   	 ! in SI
	RA = RANT
	RANTPL = RANT
c	print*,'photarea',photarea
c	print*,'flux,dense,tempe',flux,dense,tempe
c	print*,'boltzk*tphi/qesi',boltzk*tphi/qesi
	PRINT*,'PICKUP AREA,FLUX,RANT',PUPAREA,FLUX,RANTPL
C
C	CALCULATE BASE RESISTANCE FROM KELLOGG AND BALE
C
	BFLUX = DENSE*SQRT(TEMPE)
	RBASE = (.038/ANTDIA)*(110.E6 + 654.E6/BFLUX)  ! corr 13 may 2003
C	RBASE = 2.*RBASE			! FUDGE FOR BIG ANTS
	RB = RBASE
	GANT = 1./RANT + 1./RBASE
	RAPAR = 1./GANT
	PRINT*,'PL,BASE,PAR',RANT,RBASE,RAPAR	 
C
	CANT = (.241E-12)*ANTLEN/(ALOG10(2.*ANTLEN/ANTDIA) - .4)
	PRINT*,'ANTENNA LENGTH, CAPACITANCE ',ANTLEN,CANT
C
	NF = 23
	FLIST(1) = .0003
	RATIO = 1.874
	DO IF = 2,NF
	  FLIST(IF) = FLIST(IF-1)*RATIO
	ENDDO
	PRINT*,'F',FLIST(1),FLIST(NF)
C
	ANTAREA = .5*TWOPI*ANTDIA*ANTLEN
C	PRINT*,'ELECTRON PICKUP AREA',ANTAREA
	DO IF = 1,NF
	  F = FLIST(IF)
	  W = TWOPI*F	
C
C	  CALCULATE RINEQ AND CEQ, I.E. PARALLEL EQUIVALENT OF RIN,CIN
C		IN SERIES
C
	  TEMP = W*CIN*R1
	  RINEQ = R1*(1.+1./TEMP**2)
	  CEQ = CIN/(1. + TEMP**2)
C
C	  CALL PREAMP(F,VM,VAPM,GM,GAPM,GMPI,GAPMPI)
	  IRX = 1
	  CALL PREAMP(IRX,F)
C	  CALL CHECK
C	  IF(1) STOP
C	WRITE(60,*) F,VM,VAPM,GM,GAPM
C
C	  CALCULATE JOHNSON NOISE
C
	  R7 = 1.E7
	  R6 = 6.8E6
	  C6 = 100.E-12
	  ANTLEN = 5000.
	  ANTDIA = .038 
	  CANT = (.241E-12)*ANTLEN/(ALOG10(2.*ANTLEN/ANTDIA) - .4)
	  TFLUX = .5*TWOPI*FLUX*ANTLEN*ANTDIA
	  RANT = BOLTZK*TPHI/(QESI**2)/TFLUX  		! in SI
	  CALL PANOISE(IRX,F,VN2)
	  VJX2(IF) = VN2
C
C	  CALCULATE SHOT NOISE
C
	  FLUX = .25*DENSE*VTHERM			! e's /cm^2-sec
	  TFLUX = FLUX*ANTAREA
	  GEQ = 1./RANT + 1./RBASE + 1./RINEQ
	  XEQ = CEQ + CANT + CBASE
	  REQ = 1./GEQ
	  VS2 = 2.*QESI**2*TFLUX*REQ**2/(1. + (W*REQ*XEQ)**2)
C	  THAT IS THE SHOT NOISE ON THE ANTENNA
C
C	  PRINT*,'VTHERM,FLUX,TFLUX',VTHERM,FLUX,TFLUX
C	  PRINT*,F,VJ2,VS2,VTOT2
	  VSX2(IF) = VS2
C
C	  CALL PANOISE(2,F,VN2)
C	  VJY2(IF) = VN2
C	  VSY2(IF) = VS2
C
C	  CALCULATE DEVICE NOISE
C
	  ZANT = 1./CMPLX(1./RANT,W*CANT)
	  Y1 = 1./ZANT + 1./RBASE            ! ANTENNA, BASE IN PARALLEL
	  Z1 = 1./Y1 + CMPLX(0.,-1./W/CIN)	 ! ADD CIN IN SERIES
	  Y1 = 1./Z1 + 1./R1			 ! PUT RIN IN PARALLEL
	  ZINEQ = 1./Y1
	  ZINEQ2 = CABS(ZINEQ)**2
C
	  IF(F.LT.10) THEN
C		ASSUME En**2 ~ 1/F BELOW 10 HZ, In CONSTANT
	    V2EN = (EN(1)**2)*(10./F)
	    V2IN = (IN(1)**2)*ZINEQ2
	  ELSEIF(F.LT.100000.) THEN
C		INTERPOLATE
	    CALL INTERP(FTABLE,EN,5,F,VEN,ERR)
	    V2EN = VEN**2
	    CALL INTERP(FTABLE,IN,5,F,VINT,ERR)
	    V2IN = VINT**2*ZINEQ2
	  ELSE
C		EXTRAPOLATE, En CONSTANT, In ~ F
	    V2EN = (EN(5)**2)
	    V2IN = (IN(5)**2)*ZINEQ2*(F/1.E5)**2
	  ENDIF
	  V2ENOUT(IF) = V2EN
	  V2INOUT(IF) = V2IN
C	  VTOT2OUT(IF) = VSX2(IF) + VAPM
C	  VN2SV(IF) = VN2
C
C	  CALCULATE SHOT NOISE ON THE SATELLITE BODY
C
	  TFLUX = FLUX*SATAREA
	  SATPAREA = 3.5E4					! WIND
	  RSAT = BOLTZK*TPHI/(QESI**2)/FLUX/SATAREA   		! in SI
	  VSSAT2 = 2.*QESI**2*TFLUX*RSAT**2/(1. + (W*RSAT*SATCAP)**2)
	  VSSX2(IF) = VSSAT2
	  VSSY2(IF) = VSSAT2
	  VSSZ2(IF) = VSSAT2
	ENDDO
c	WRITE(99,199) (FLIST(IF),IF=1,NF)
c	WRITE(99,199) (VJ2OUT(IF),IF=1,NF)
c	WRITE(99,199) (VS2OUT(IF),IF=1,NF)
c	WRITE(99,199) (VTOT2OUT(IF),IF=1,NF)
 199	FORMAT(5X,'1',5(E12.3,','))
C	DO IF = 1,NF
C	  WRITE(98,198) FLIST(IF),VJX2(IF),VSX2(IF),V2ENOUT(IF),
C     1	   V2INOUT(IF),VTOT2OUT(IF)
C	ENDDO
C	DO IF = 1,NF
C	  WRITE(99,198) FLIST(IF),VJY2(IF),VSY2(IF),V2ENOUT(IF),
C     1	   V2INOUT(IF),VTOT2OUT(IF)
C	ENDDO
 198	FORMAT( F10.5,6E11.3)
C
C	ITERM = 3
	ITERM = -1
	CALL NOISEX(ITERM)
c	ITERM = 3
C	CALL NOISEY(ITERM)
	STOP
	END
	SUBROUTINE NOISEX(ITERM)
C
C	PLOT SHOT NOISE, RESISTOR NOISE,DEVICE NOISE,AND A CASSINI SPECT.
C
	COMMON /LOWOUT/ VJX2(50),VSX2(50),V2EN(50),V2IN(50),VSSX2(50)
	COMMON /BOTH/ NF,FLIST(50)
	REAL CASFREQ(1025),CASSIG(1025)
C
	CHARACTER*12 TITLE(30)
	CHARACTER*120 STR
	CHARACTER*1 DISPOSE
C
	COMMON /MONGOPAR/
     1  X1,X2,Y1,Y2,GX1,GX2,GY1,GY2,LX1,LX2,LY1,LY2,
     1  GX,GY,CX,CY,
     1  EXPAND,ANGLE,LTYPE,LWEIGHT,
     1  CHEIGHT,CWIDTH,CXDEF,CYDEF,PSDEF,PYDEF,COFF,
     1  TERMOUT,XYSWAPPED,NUMDEV,
     1  PI,USERVAR(10),AUTODOT
	INTEGER*4 LX1,LX2,LY1,LY2,LTYPE,LWEIGHT,NUMDEV,DDS
C
	DIMENSION YY(2048),YYT(2048),XX(2048)
	DATA TWOPI /6.2831853/
	DATA EFFLEN /41.1/
	DATA WINDLEN /5000./
C
	CALL MGOINIT
	CALL MGOSETUP(ITERM)
	CALL MGOERASE
C
	IF(ITERM.LT.0) THEN
	  CALL MGOSETLOC(500.,1000.,2100.,2600.)
	ENDIF
	CALL MGOSETEXPAND(.8)
C
	CALL MGOSETLIM( -2.,  -15., 1.7 , -4.)
	CALL MGOTICKSIZE(-1.,-1.,-1.,-1)
C
C	PLOT ANTENNA SHOT NOISE
C
	DO N = 1,NF
	  XX(N) = ALOG10(FLIST(N))
	  YY(N) = ALOG10(VSX2(N))
	ENDDO
	CALL MGOCONNECT(XX,YY,NF)
	LABL = NF/2 - 1
	CALL MGORELOCATE(XX(LABL),YY(LABL))
	CALL MGOLABEL(14,'ANT SHOT NOISE')
C
C	PLOT SATELLITE SHOT NOISE
C
	DO N = 1,NF
	  XX(N) = ALOG10(FLIST(N))
	  YY(N) = ALOG10(VSSX2(N))
	ENDDO
	CALL MGOCONNECT(XX,YY,NF)
	LABL = NF/2 +2
	CALL MGORELOCATE(XX(LABL),YY(LABL))
	CALL MGOLABEL(14,'SAT SHOT NOISE')
C
C	PLOT RESISTOR NOISE
C
	DO N = 1,NF
	  XX(N) = ALOG10(FLIST(N))
	  YY(N) = ALOG10(VJX2(N))
	ENDDO
	CALL MGOCONNECT(XX,YY,NF)
	CALL MGORELOCATE(XX(LABL),YY(LABL))
	CALL MGOLABEL(13,'JOHNSON NOISE')
C	
C	  CALL MGOSETEXPAND(.85)
C	  IF(ITERM.GT.0) THEN
C	    CALL MGOGRELOCATE(10.,0.)                      ! maxch, crt
C	  ELSE
C	    CALL MGOGRELOCATE(400.,50.)                      ! hardcopy
C	  ENDIF
C	  CALL MGOPUTLABEL(53,STR,9)
	  CALL MGOSETEXPAND(1.)
C
C	PUT ON A SPECTRUM FROM WIND FFT
C
	CALL MGORELOCATE(ALOG10(40.), -10.6)
	CALL MGODRAW(ALOG10(90.), -11.6)
C
C	PUT ON A SPECTRUM FROM CASSINI
C
	OPEN(UNIT=59,FILE='[KELLOGG.CASSINI.PAPERS]TSPECTAV.DAT;329'
     1		,STATUS='OLD',READONLY)
C
	READ(59,*) NUMBER
	PRINT*,'NUMBER OF SPECTRA AVERAGED',NUMBER
	NC = 0
  200   READ(59,*,END=210) T1,T2,T3,T4,T5,T6
	IF(T1.EQ.0.) GO TO 200
 	NC = NC+1
 	CASFREQ(NC) = T1
	CASSIG(NC) = T2     ! IN (V/M)^2/HZ
 	GO TO 200
  210	PRINT*,NC,' CASSINI DATA POINTS' 
	CLOSE(UNIT=59)

	DO N = 1,NC
	  XX(N) = ALOG10(CASFREQ(N))
	  CALL ANTENNAL(CASFREQ(N),WINDLEN,EFFLENC,EFFLEN)
	print*,'f,efflen,m',n,casfreq(n),efflen
	  YY(N) = ALOG10(CASSIG(N)*EFFLEN**2)
C	  WRITE(97,198) CASFREQ(N),GAPM**2*CASSIG(N),GM**2*CASSIG(N)
	ENDDO
	CALL MGOCONNECT(XX,YY,NC)
C
	CALL MGOBOX(1,2)
	CALL MGOXLABEL(9,'FREQ (Hz)')
	CALL MGOYLABEL(19,'X INPUT V\U2/Hz')
	CALL MGOPLOTID('[.WIND]NOISE','EX')
C
	IF(ITERM.LT.0) THEN
	  CALL MGOPRNTPLOT(NVEC)
	  PRINT*,' NO. VECTORS PLOTTED',NVEC
	ELSE
	  READ(5,1023) DISPOSE
 1023	  FORMAT(A1)
	  CALL MGOTCLOSE
	ENDIF
C
	RETURN
	END
	SUBROUTINE NOISEY(ITERM)
C
C	PLOT SHOT NOISE, RESISTOR NOISE,DEVICE NOISE,AND A CASSINI SPECT.
C
	COMMON /MIDOUT/ VJY2(50),VSY2(50),VSSY2(50)
	COMMON /BOTH/ NF,FLIST(50)
	REAL CASFREQ(1025),CASSIG(1025)
C
	CHARACTER*12 TITLE(30)
	CHARACTER*120 STR
	CHARACTER*1 DISPOSE
C
	COMMON /MONGOPAR/
     1  X1,X2,Y1,Y2,GX1,GX2,GY1,GY2,LX1,LX2,LY1,LY2,
     1  GX,GY,CX,CY,
     1  EXPAND,ANGLE,LTYPE,LWEIGHT,
     1  CHEIGHT,CWIDTH,CXDEF,CYDEF,PSDEF,PYDEF,COFF,
     1  TERMOUT,XYSWAPPED,NUMDEV,
     1  PI,USERVAR(10),AUTODOT
	INTEGER*4 LX1,LX2,LY1,LY2,LTYPE,LWEIGHT,NUMDEV,DDS
C
	DIMENSION YY(2048),YYT(2048),XX(2048)
	DATA TWOPI /6.2831853/
C
	CALL MGOINIT
	CALL MGOSETUP(ITERM)
	CALL MGOERASE
C
	IF(ITERM.LT.0) THEN
	  CALL MGOSETLOC(500.,1000.,2100.,2600.)
	ENDIF
	CALL MGOSETEXPAND(.8)
C
	CALL MGOSETLIM( -2.,  -15., 2.3 , -4.)
	CALL MGOTICKSIZE(-1.,-1.,-1.,-1)
C
C	PLOT ANTENNA SHOT NOISE
C
	DO N = 1,NF
	  XX(N) = ALOG10(FLIST(N))
	  YY(N) = ALOG10(VSY2(N))
	ENDDO
	CALL MGOCONNECT(XX,YY,NF)
	LABL = NF/2 + 1
	CALL MGORELOCATE(XX(LABL),YY(LABL))
	CALL MGOLABEL(14,'ANT SHOT NOISE')
C
C	PLOT SATELLITE SHOT NOISE
C
	DO N = 1,NF
	  XX(N) = ALOG10(FLIST(N))
C	  YY(N) = ALOG10(VSSY2(N))
	ENDDO
C	CALL MGOCONNECT(XX,YY,NF)
C	LABL = NF/2 +2
C	CALL MGORELOCATE(XX(LABL),YY(LABL))
C	CALL MGOLABEL(14,'SAT SHOT NOISE')
C
C	PLOT RESISTOR NOISE
C
	DO N = 1,NF
	  XX(N) = ALOG10(FLIST(N))
	  YY(N) = ALOG10(VJY2(N))
	ENDDO
	CALL MGOCONNECT(XX,YY,NF)
	CALL MGORELOCATE(XX(LABL),YY(LABL))
	CALL MGOLABEL(13,'JOHNSON NOISE')
C	
C	  CALL MGOSETEXPAND(.85)
C	  IF(ITERM.GT.0) THEN
C	    CALL MGOGRELOCATE(10.,0.)                      ! maxch, crt
C	  ELSE
C	    CALL MGOGRELOCATE(400.,50.)                      ! hardcopy
C	  ENDIF
C	  CALL MGOPUTLABEL(53,STR,9)
	  CALL MGOSETEXPAND(1.)
C
C
C	PUT ON A SPECTRUM FROM CASSINI
C
	OPEN(UNIT=59,FILE='[KELLOGG.CASSINI.PAPERS]TSPECTAV.DAT;329'
     1		,STATUS='OLD',READONLY)
C
	READ(59,*) NUMBER
	PRINT*,'NUMBER OF SPECTRA AVERAGED',NUMBER
	NC = 0
  200   READ(59,*,END=210) T1,T2,T3,T4,T5,T6
	IF(T1.EQ.0.) GO TO 200
 	NC = NC+1
 	CASFREQ(NC) = T1
	CASSIG(NC) = 25.*T3     ! MULTIPLY BY Ew EFFECTIVE LENGTH SQUARED
 	GO TO 200
  210	PRINT*,NC,' CASSINI DATA POINTS' 
	CLOSE(UNIT=59)
	DO N = 1,NC
	  CALL PREAMP(CASFREQ(N),VM,VAPM,GM,GAPM,GMPI,GAPMPI)
	  XX(N) = ALOG10(CASFREQ(N))
	  YY(N) = ALOG10(GM**2*CASSIG(N))
	ENDDO
	CALL MGOCONNECT(XX,YY,NC)
C
	CALL MGOBOX(1,2)
	CALL MGOXLABEL(9,'FREQ (Hz)')
	CALL MGOYLABEL(18,'TDS OUTPUT V\U2/Hz')
	CALL MGOPLOTID('[.WIND]NOISE','TDS')
C
	IF(ITERM.LT.0) THEN
	  CALL MGOPRNTPLOT(NVEC)
	  PRINT*,' NO. VECTORS PLOTTED',NVEC
	ELSE
	  READ(5,1023) DISPOSE
 1023	  FORMAT(A1)
	  CALL MGOTCLOSE
	ENDIF
C
	RETURN
	END
	SUBROUTINE CHECK
C
C	MAKES A TABLE TO CHECK AGAINST STEVE'S MEASUREMENTS
C
	REAL FLIST(10)
	DATA FLIST /1.,2.,5.,7.,6*10./
C
	FACTOR = .1
	DO N = 1,8
	  DO J = 1,4
	    F = FACTOR*FLIST(J)	
	    CALL PREAMP(F,VM,VAPM,GM,GAPM,GMPI,GAPMPI)
	    WRITE(67,*) F,GAPMPI,GMPI
	  ENDDO
	  FACTOR = 10.*FACTOR
	ENDDO
	RETURN
	END
	SUBROUTINE ANTENNAL(F,PHYSLEN,EFFLENC,EFFLEN)
C
	COMMON /ANTENNZ/ RANTPL,RBASE,CANT,CBASE
	COMPLEX YC1,Z1,YC2,Z2,ZIN,GMCPI,EFFLENC
	DATA TWOPI /6.28318531/
C	
	W = TWOPI*F
C	CALL PREAMP(F,GMCPI,GMPI,PHASE,ZIN,VN2)
C	YC1 = CMPLX(1./RBASE,W*CBASE) + 1./ZIN
	YC1 = CMPLX(1./RBASE,W*CBASE) 
	Z1 = 1./YC1
	YC2 = CMPLX(1./RANTPL,W*CANT)
	Z2 = 1./YC2
	EFFLENC = .01*PHYSLEN*Z1/(Z1+Z2)    	! WINDLEN IS IN CM
	EFFLEN = CABS(EFFLENC)
C
	RETURN
	END
	SUBROUTINE PANOISE(IRX,F,VN2)
C
	COMMON /CPARAMS/R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,CIN,C2,C3,CC,C5,C6,C9
	COMMON /ANTENNZ/ RANT,RBASE,CANT,CBASE
	DATA TWOPI /6.28318531/
	DATA BOLTZK /1.3807E-23/			! SI
	DATA T_PREAMP /273./		! 0. C
C
	COMPLEX DENC,ZANT,YANT,Z1
C
	W = TWOPI*F
	E6 = 4.*BOLTZK*T_PREAMP*R6 
	E7 = 4.*BOLTZK*T_PREAMP*R7
	YANT = CMPLX(1./RANT+1./RBASE,W*(CANT+CBASE))
	ZANT = 1./YANT
	Z1 = CMPLX(1., W*R6*C6)
	DENC = (R6 + R7*Z1)/ZANT
	VN2 = (E7*CABS(Z1)**2 + E6)/CABS(DENC)**2 
	RETURN
	END
