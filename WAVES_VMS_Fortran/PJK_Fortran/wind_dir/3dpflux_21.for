	SUBROUTINE TDPFLUX(YYYYMMDD,FDAY,FLUX,DENS,ETEMP)
C
C	RETURN ACCURATE FLUXES FROM STUART 
C
C	THERE ARE TWO VERSIONS OF THIS.  THIS ONE RETURNS FLUX AT
C		A CERTAIN TIME.  FLUX_3DP RETURNS AN AVERAGE FLUX AND
C		VARIANCE FOR THE RESISTANCE PAPERS
C
	CHARACTER*50 FILENAME
	INTEGER DATE,YYYYMMDD,ANGLE
	DATA IOPEN/0/
	DATA FDAYSV /0./
C
C	FLUX = 1.68E7*FLUX
C	
C
	IF(IOPEN.NE.1) THEN
	  WRITE(FILENAME,123) YYYYMMDD
C 123	  FORMAT('MONTHLY:[KELLOGG.EFLUX]FLUX_',I8.8,'.ASC')	
 123	  FORMAT('USER_A:[KELLOGG.WIND.STUFF]FLUX_',I8.8,'.DAT')	
	  OPEN(UNIT=83,FILE=FILENAME,STATUS='OLD',READONLY)
C	  READ(83,*,END=141,ERR=141) NYR,MO,NDAY,N4,N5,N6,EFLUXSV
	  READ(83,*,END=141,ERR=141) SEC,EFLUXSV
	  FDAYSV = SEC/86400.
	  FDAYF = FDAYSV
	  IOPEN = 1
	ENDIF
C
	IF(FDAY.GE.FDAYF) THEN
 140	  CONTINUE 
c	  READ(83,*,END=141,ERR=140) NYR,MO,NDAY,N4,N5,N6,EFLUX
c	  print*,'nyr,n4,n5,eflux',nyr,n4,n5,eflux
	  EFLUXSV = EFLUX
	  FDAYSV = FDAYF
	  READ(83,*,END=140,ERR=140) SEC,EFLUX
c	  FDAYF = N4/24. + N5/1440. + N6/86400.
	  FDAYF = SEC/86400.
	  IF(FDAYF.LT.FDAY) GO TO 140
	ENDIF
 141	CONTINUE
	FLUX = EFLUX + (FDAY-FDAYF)*(EFLUX-EFLUXSV)/(FDAYF-FDAYSV)
	TE = 0.
	DENS = 0.
C	WRITE(72,1072) YYYYMMDD,DENS,SDENS,TE,STE,FLUX,TEFLUX,SEFLUX,
C     1		FLUX-TEFLUX
C 1072	FORMAT(I9,F7.2,F7.3,F6.1,F6.2,E11.3,E11.3,E11.3,e11.3)
	print*,'tdpflux',fday,sec,efluxsv,flux
	RETURN
 200	CONTINUE
C	PRINT*,'END OF FLUX TABLE'
	RETURN
	END
