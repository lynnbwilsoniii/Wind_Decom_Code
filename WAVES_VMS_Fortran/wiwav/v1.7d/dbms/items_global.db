! items_global.db
!
! - WIND/WAVES Telemetry Item Database
! - Define/describe items of information pertaining to a WIND/WAVES 
!   telemetry stream
!
!  Notes:
!
!  An item definition is a collection of keyword= clauses spanning several
!  physical records of this file.  An item definition begins with the clause 
!  ITEM=name, where "name" is a sequence of non-whitespace characters.  This
!  clause must begin in column one.
! 
!  Following the ITEM=name clause may be one or more additional clauses 
!  occurring on separate lines.  These subsequent keyword= clauses associate
!  with the most recently named item.
!
!  Most, but not all, keyword= clauses are terminated by whitespace
!
!  Comments may occur practically anywhere provided they do not begin with an
!  uppercase alphabetic character in column 1.  Comments also may not contain
!  any of the keyword field identifiers such as EXTRACT=, COUNT=,
!  COMPOSITE=, FILE=, and so on, unless the first character in the comment
!  line is the exclamation mark "!".
!
!  Special CDF related clauses are documented in the header of file
!  items_cdf.inc.
!
!  Arithmetic Expressions:
!  ----------------------
!  Beginning with Wind_lib version 1.3b (SEP-95)
!  FIXED_VALUE and EXTRACT clauses may contain arithmetic expressions.
!  Item names and embedded parameters may be used in the expression freely.
!  Use parens for clarity.  Operator precedence and data type promotion
!  work as in regular programming languages like C.  Item names
!  that contain special characters (like /, +, (, $, %, etc.) or begin
!  with a digit must be enclosed in double quotation marks.
!  Examples:  FIXED_VALUE=1:(17*33)/2.0)*100.0)
!             FIXED_VALUE=1:"50KHZ_CLOCK_R4"/16.
!	      EXTRACT=($1 - 1) * 8,AN_ITEM_NAME*8,-1,1,0,AREA:P
!  Summary of operators:
!	+ ==> addition, unary plus
!	- ==> subtraction, unary minus
!	* ==> multiplication
!	/ ==> division
!	% ==> modulo (integer expressions only)
!	^ ==> exponention
!
!
!  Embedding Values In Item Names:
!  ------------------------------
!  Beginning with Wind_lib version 1.3b 
!  (SEP-95) the name field in ITEM= reserves the dollar sign character "$"
!  as the embedded parameter introducing character.  The "$" symbol is also
!  used to flag an embedded parameter value occuring in an arithmetic
!  expression.  Up to nine embedded parameters may be used in the
!  body of an expression: $1, $2, $3, $4, $5, $6, $7, $8, and $9.
!  Consider the following item definition from items_major_frame.db:
!
!       ITEM=WORD$col_$row
!	   DESC="Any word (byte) specified by column [0..255] and row [0..249]"
!	   EXTRACT=($1 * 8) + ($2 * 256 * 8),8,-1,1,0,AREA:M
!
!  Wind_lib stores the item name as WORD$ ignoring everything right of the "$".
!  The tokens $1 and $2 in the EXTRACT expression signal wind_lib to seek
!  replacement strings from the item name passed by the user via a w_item_*
!  routine.  So, a user might call w_item_i4 with an item name like 
!  'word$044_$212'.  Wind_lib searches the item database for 'WORD$', saving
!  the '$044_$212' for string replacement purposes later.  After wind_lib
!  locates the item it resolves any parameter names (044 replaces $1 and 212
!  replaces $2 ) and/or additional item names occuring within the expression
!  during the expression evaluation process.
!  Finally, after all the expressions in the EXTRACT= clause are resolved,
!  the extraction is performed.
!
!  Embedded parameter values provide a convenient way to describe a single item
!  definition for use by a family of items names.  Consider the major frame
!  event.
!  There are 64,000 data words in a major frame event.  Embedded values enable
!  one item definition to cover the 64,000 single word possibilities.
!  For example, a user desiring word 24
!  of minor frame 121 (which is equivalent to saying col=24 and row=121) could
!  use any of the following w_item_i4 calls or others:
!       ok = w_item_i4(ch,'word$24$121',buf,size,ret_size)
!       ok = w_item_i4(ch,'word$24_$121',buf,size,ret_size)
!       ok = w_item_i4(ch,'word$24abcdefg$121',buf,size,ret_size)
!  The variability here is allowed because the expression evaluator searches
!  for the Nth "$" in the caller's item name to find the sequential string
!  of digits to replace the token $N in the expression.
!
!
!  ITEM Clauses:
!  ------------
!
!  ITEM=name
!	Field is terminated by white space.
!	Examples for name are DPU_CLOCK, TEMP_BX
!
!  DATA_TYPE=type
!	Field is terminated by white space.
!	Specifies the data type of the item.  Valid types are INTEGER,
!	REAL*4, REAL*8, and CHARACTER.  Specify only valid types in
!	upper case characters.
!
!  EXTRACT=v,w,x,y,z,AREA:#
!	where v, w, x, y, and z are integers (or expressions that resolve
!       to integers) standing for:
!		v = startbitfromzero
!		w = bitlen (must be <= 32)
!		x = bitoffsettonextgroup
!		y = repititions
!		z = previousgroupsize
!	Field is terminated by white space.
!	This field contains five comma-delimited integers and an area
!	specification following the keyword , eg: 
!
!	ex #1:	EXTRACT=64,32,-1,1,0,AREA:3
!
!	This example means to extract 32 bits from the tertiary header (area:3)
!	beginning with bit number 64, this is a scaler item (not an array) to
!	be returned (repititions = 1 and bitoffsettonextgrp = -1).
!
!	Here is an array example for contiguous elements:
!
!	ex #2:	EXTRACT=24,8,-1,4,0,AREA:5
!
!	Example #2 means to extract 4 elements, each 8 bits long, and
!	all elements contiguous beginning with bit 24 in the data portion
!	of the packet.
!
!	Here is an another, slightly different, array example for
!	contiguous elements:
!
!	ex #3:	EXTRACT=0,8,8,1,0,AREA:5
!
!	In example #3 we specify the extraction as consecutive 8-bit chunks 
!	taken over the entire range of the data area (AREA:5).  This is
!	handy for items whose length may vary or diagnositc items intended
!	to copy entire packet headers or wind_lib buffers.
!
!	Here is an array example for non-contiguous elements:
!
!	ex #4:	EXTRACT=16,8,40,2,0,AREA:5
!
!	This is for situations where the data occurs in groups, like
!	in AABBC.AABBC.AABBC..., where A, B, and C are all 8-bit entities and
!	the task is to extract the B's.
!	This example means that beginning with bit 16 (startbit) in the data
!	portion of the packet (AREA:5), to extract 2 (repititions) 
!	8-bit elements (bitlen=8), and then continue to extract 8-bit
!	2-element groups after succisvely incrementing the initial bit index
!	(startbit) by 40 (bitoffsettonextgrp) until the end of the data
!	area (AREA:5) is reached.  Specify a COUNT= clause if the extraction
!	pattern is not valid through to the end of the data area.
!
!	Groupsize is NOT optional (currently used for some TNR items only,
!	see inline documentation for get_item.c) and serves to flag an
!	item whose startbit is measured relative from the end of the last
!	repeat group.  Specify 0 when groupsize is not used.
!
!	Here is an example of a complicated TNR-type item where the data
!	portion of the TNR event is structured like AABC.AABC.AABC.DEE.DEE...
!	and the task is to extract the E's:
!
!	ex #5:	EXTRACT=8,4,16,2,32,AREA:5
!		COUNT=SOME_COUNT_ITEM
!		...
!		ITEM=SOME_COUNT_ITEM
!		FIXED_VALUE=1:3
!
!	In the above example we declare that there are 3 (COUNT=) groups
!	of size 32 bits (prevgroupsize) preceding the desired data,
!	which tells wind_lib to initially offset into area 5 by 3x32=96 bits.
!	Then, offset an additonal 8 bits (bitstart) and extract 2 (repitions)
!	4-bit elements (bitlen).  Then, continue to extract pairs of 4-bit
!	elements after sliding the index in increments of 16 bits 
!	(bitoffsettonextgroup) until the end of area 5 is reached.
!
!	Valid codes following the "AREA:" prefix are are:
!	0 - fixed value item, value is in the current item record
!	1 - in the primary header
!	2 - in secondary header
!	3 - in tertiary header
!	4 - in quartinary header
!	5 - in data portion of packet
!	6 - in "extra info" section maintained by WIND_LIB software
!	7 - in a function, current record contains a function id number
! 	8 - in house keeping event associated with current instrument event
!	A - item is within an internal wind_lib buffer for channel information
!	B - item is within an internal wind_lib buffer for event extraction info
!	M - item is within an internal wind_lib event major frame buffer
!	m - item is within an internal wind_lib event minor frame buffer
!	P - item is within an internal wind_lib event packet buffer
!
!  COMPOSITE=stringitemname
!	Field is terminated by white space.
!	This field identifies the name of another item whose bits are to
!	be glued to the end of the current item, eg: COMPOSITE=TC_VER2.
!
!  COUNT=stringitemname
!	Field is terminated by white space.
!	This field identifies the name of another item which is the total
!	number of elements to be extracted from the telemetry (meant for
!	certain strangely defined array items not falling into the EXTRACT=
!	category).
!
!  FIXED_VALUE=value_count:value1,value2,...,valueN
!	Field is terminated by physical end of line or the Nth value.
!	This field contains any number of comma-delimited values (integers
!	reals, doubles, or characters).  The number of values listed must
!	match the value_count integer.  The DATA_TYPE= clause determines
!	the data type of all values (execpt the integer value_count) in
!	this field.
!		Example:  FIXED_VALUE=2:78,3
!	For character type the next value_count characters after the colon
!	are read and stored internally.  Character case is preserved.
!
!  FILE=codedstringwithoutwhitespace
!	This field is used to specify a file name containing a variable
!	length list of integer values.  This field is terminated by white space.
!	Note that FILE= must be associated with an F9 record type/area.
!	Example:  for RAD1 an item named FREQ_LIST is a list of numbers to
!	be read from a particular file.  To find the correct file among the
!	dozens of RAD1 frequency files the file creator cleverly 
!	incorporated into each file name the values of the distinguishing
!	RAD1 telemetry items FREQ_TABLE and XLATE_TABLE.  The FILE= clause
!	in this case might look fairly complicated:
!
!	FILE='WIND_DBMS_AUX:rad1_',FREQ_TABLE,%02d,'_',XLATE_TABLE,%02d,'.dat'
!
!	The FILE= clause can also be quite simple, as in:
!
!	FILE='WIND_DBMS_AUX:channel_numbers.dat'
!
!	or
!
!	FILE=SOME_CHAR_ITEM_NAME
!
!	The coded string right of the FILE= keyword may use three different
!	types of subfields, separated by commas, to construct a file
!	specification:
!
!		1.) ordinary text enclosed in single or double quotes
!		2.) item names of the same event type (RAD1 in this case)
!		3.) C language style formats, like %3.3d, %8.8x, %s %f, etc.
!
!	Item names are not required in the coded string, but, if they are used
!	the following rules apply:
!
!	1)  The item name in the coded string must be immediately followed 
!	by a C language style output format for an item which returns a
!	numeric value.
!	2)  An item name in the coded string returning a charater string
!	may omit the %s format as %s is the default format.
!	3)  Ordinary text and item names (with formats as required)
!	may be used in any order any number of times within the coded string.
!
!	Note that character case is preserved, which is critical in UNIX
!	environments.
!
!  TEXT=free_format_string_until_end_of_line
!	Field is terminated by end of line.  All characters between TEXT=
!	and end of line are stored and retreivable via the w_item_char
!	wind_lib function.  Character case is preserved, which is critical
!	in UNIX environments.
!
!  DESC=descriptive_item_documenting_comment
!	Field begins with any delimiter character of choice and
!	is terminated by the same leading delimiter.  DESC= identifies
!	a comment documenting the item.  This comment may be retrieved
!	through a WIND_LIB routine call.
!
!  FUNCTION=function_id_number,arg1,arg2,...,argN
!  ARG=arg(i)
!	Field is terminated by white space.  Arguments arg1..argN may be
!	item names or numeric constants.  Floating point constants contain
!	a decimal point and integer constants do not.  Specify a double
!	precision value in "E" exponential format, eg. 1.045e-7.  Specify
!	a single precision number in decimal format containing a decimal
!	point, eg. 334.55009.  Integer values are whole numbers without
!	a decimal point.
!
!	Alternatively, function arguments can be specified on separate
!	lines of text with the ARG= clause.  Only one ARG= clause may
!	occur on a line, and only one arguement specified per ARG= clause
!	(no comma delimited argument string allowed with ARG=).  Field is
!	terminated by white space.
!
!  VALIDATION=stringitemname,operator1,operand1[,operator2,operand2]
!	Field is terminated by white space.  Multiple validation clauses
!	may appear in a single item definition.  The item is validated
!	with all validation clauses listed.
!	Example:  VALIDATION=EVENT_SCET,LT,DATE:19920321-000000
!	   Note how a date-time specification is specified with the "DATE:"
!	   prefix introducing the YYYYMMDD-HHMMSS format.
!	Example:  VALIDATION=TDS_VERSION,LE,2
!	Example:  VALIDATION=PACKET_SUBTYPE,MO,b1000
!	   Note the use of the binary mask operator, MO, to validate on
!	   packet subtype.
!	   There are 16 possible packet subtypes numbered from 0 to 15,
!	   any number of which may be specified via the MO validation operator.
!
!	Only integer values may be used for operands.
!	Integer values may be specified as whole numbers
!	(no decimal point), as hexidecimal constants containing a leading
!	"h" or "H" (eg. hFF), or as a binary constant containing a leading
!	"b" or "B" (eg. b100110).
!
!	Valid operators include:
!
!		EQ   - equal to
!		GE   - greater than or equal to
!		GT   - greater than
!		LE   - less than or equal to
!		LT   - less than
!		NE   - no equal to
!		BT   - between
!		NBT  - not between
!		AND  - bitwise logical and
!		OR   - bitwise logical or
!		MO   - bitwise mask operator
!		IBS  - is bit set
!
!	Note that only the GE, GT, LE, and LT operators work with the
!	date-time data type.
!
!  LOOKUP=item_name
!  TABLE=const_int_value,lookup_value
!	Lookup_value may be integer, real*4, real*8, or character as specified
!	in the DATA_TYPE= clause.  Const_int_value must range between 0 and 15
!	for real*8 datatype and between 0 and 31 for all other data types.
!
!  FORMAT=paren_delimited_fortran_format
!	eg.: FORMAT=(2x,z8.8,' HEX')
!	eg.: FORMAT=(F16.10)
!	eg.: FORMAT=(a20)
!	Provides a default output specification for an item value.  Embedded
!	blanks are allowed.  Leading and trailing parentheses are required.
!
! #include filename
!	Includes another set of item definitions from an external file into
!	the current event's item list.  Includes may nest without practical
!	limit.  Argument "filename" should include a full path specification.
!	Under SunOS, VMS logical names (eg. the wind_dbms in 
!	wind_dbms:items_jk.db) are parsed out and translated as "path" style
!	environment variables.


ITEM=DB_VERSION_GLOBAL
	DATA_TYPE=CHARACTER
	TEXT=GLOBAL  2.0
	DESC=This is the current item database version number
	AUTHOR_DATE=19950901

ITEM=WIND_LIB_VERSION
	DATA_TYPE=CHARACTER
	FUNCTION=4
	DESC=The current WINDlib version (string)

ITEM=WIND_LIB_VERSION_I4
	DATA_TYPE=INTEGER*4
	DESC=The current WINDlib version (coded integer)
 	EXTRACT=88*8,32,0,1,1,AREA:6
	AUTHOR_DATE=19960503

ITEM=PRIMARY_HEADER  
	VALIDATION=EVENT_SCET,GT,DATE:19920321-000000
	FIXED_VALUE=1:24
 	DESC=Current length in bits of primary header
	AUTHOR_DATE=19910601
ITEM=PRIMARY_HEADER  
	VALIDATION=EVENT_SCET,LT,DATE:19920321-000000
	FIXED_VALUE=1:16   
 	DESC=Former length in bits of primary header
	AUTHOR_DATE=19910601

ITEM=TDS_FILL_POINTER
	VALIDATION=EVENT_SCET,GT,DATE:19920321-000000
	EXTRACT=16,8,-1,1,0,AREA:1
	COMPOSITE=TDS_FILL_PTRMSB
 	DESC=Offset to TDS in packet
	AUTHOR_DATE=19920321
ITEM=TDS_FILL_POINTER
	VALIDATION=EVENT_SCET,LT,DATE:19920321-000000
	FIXED_VALUE=1:403   
 	DESC=Beginning of TDS fill as offset from packet start
	AUTHOR_DATE=19920321
ITEM=TDS_FILL_PTRMSB 
	EXTRACT=8,1,-1,1,0,AREA:1
 	DESC=Pointer to TDS fill, msb. Part of composite item

ITEM=FIRST_PACK_FLAG 
	EXTRACT=0,1,-1,1,0,AREA:1
 	DESC=Flag showing this is the first packet of event (1)
	AUTHOR_DATE=19910601
ITEM=LAST_PACK_FLAG  
	EXTRACT=1,1,-1,1,0,AREA:1
 	DESC=Flag showing this is last packet of event (1)
	AUTHOR_DATE=19910601

ITEM=INST_HDR_PRES   
	EXTRACT=2,1,-1,1,0,AREA:1
 	DESC=Flag showing that instrument header is present (1) =2nd Header
	AUTHOR_DATE=19910601
ITEM=MEAS_HDR_PRES   
	EXTRACT=3,1,-1,1,0,AREA:1
 	DESC=Flag showing the measurement header is present(1) =3rd Header
	AUTHOR_DATE=19910601
ITEM=PACK_HDR_PRES   
	EXTRACT=9,1,-1,1,0,AREA:1
	DESC=Flag showing that a packet header is present (1) =4th Header
	AUTHOR_DATE=19910601

ITEM=PACKET_SUBTYPE  
	EXTRACT=12,4,-1,1,0,AREA:1
 	DESC=Field giving number of packet subtype of event
	AUTHOR_DATE=19910601

ITEM=PACKET_ID_ARRAY
	FIXED_VALUE=10:1,2,3,4,5,6,7,8,9,13
	AUTHOR_DATE=19941207
	DESC=JK test item for array of xlated items
	XLATE=1,"RAD1"
	XLATE=2,"RAD2"
	XLATE=3,"TNR"
	XLATE=4,"FFT"
	XLATE=5,"TDSF"
	XLATE=6,"TDSS"
	XLATE=7,"FFTL"
	XLATE=8,"FFTM"
	XLATE=9,"FFTH"
	XLATE=13,"DUMP"

ITEM=PACKET_TYPE     
	EXTRACT=4,4,-1,1,0,AREA:1
	DESC=Portion of primary header identifying packet type
	! Xlate's are used by 'TDS Fill' software
	AUTHOR_DATE=19910601
	XLATE=1,"RAD1"
	XLATE=2,"RAD2"
	XLATE=3,"TNR"
	XLATE=4,"FFT"
	XLATE=5,"TDSF"
	XLATE=6,"TDSS"
	XLATE=7,"FFTL"
	XLATE=8,"FFTM"
	XLATE=9,"FFTH"
	XLATE=13,"DUMP"

ITEM=ERT_MAJOR_FRAME 
	EXTRACT=64,32,-1,1,0,AREA:6
	DESC=Major frame in which event was telemetered
	AUTHOR_DATE=19910825
ITEM=ERT_MINOR_FRAME 
	EXTRACT=96,32,-1,1,0,AREA:6
	DESC=Minor frame in which event was telemetered
	AUTHOR_DATE=19910825

ITEM=EVENT_TM_SCET_I4
	EXTRACT=0,32,-1,2,0,AREA:6
	DESC=Earth Receive Time in YYYYMMDD HHMMSS format
	DESC=Formerly named EVENT_ERT
	AUTHOR_DATE=19910825
ITEM=EVENT_TM_SCET_FRCTN_I4
	EXTRACT=344,32,-1,1,0,AREA:6
	DESC=Fractional ERT (milliseconds)
	DESC=Formerly named EVENT_ERT_FRCTN
	AUTHOR_DATE=19910825

ITEM=EVENT_SCET      
	EXTRACT=128,32,-1,2,0,AREA:6
 	DESC=Spacecraft Event Time in YYYYMMDD HHMMSS format
	AUTHOR_DATE=19910825
ITEM=EVENT_SCET_FRCTN
	EXTRACT=192,32,-1,1,0,AREA:6
 	DESC=fractional SCET (milliseconds)
	AUTHOR_DATE=19910825

ITEM=EVENT_SCET_R8_OLD
	DATA_TYPE=REAL*8
	FUNCTION=3,EVENT_SCET,EVENT_SCET_FRCTN
	FORMAT=(f16.10)
 	DESC=Current event's spacecraft event time (UR8)
	AUTHOR_DATE=19941020
ITEM=EVENT_SCET_R8
	DATA_TYPE=REAL*8
	EXTRACT=48*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Current event's spacecraft event time (UR8)
	AUTHOR_DATE=19951214

ITEM=EVENT_BOE_R8
	DATA_TYPE=REAL*8
	EXTRACT=56*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=SCET of 1st frame of first packet of event (UR8)
	AUTHOR_DATE=19951214
ITEM=EVENT_EOE_R8
	DATA_TYPE=REAL*8
	EXTRACT=64*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=SCET of last frame of last packet of event (UR8)
	AUTHOR_DATE=19951214

ITEM=EVENT_POSITION_R8
	DATA_TYPE=REAL*8
	EXTRACT=72*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Current stream position (UR8)
	AUTHOR_DATE=19951214

ITEM=CONTEXT_SCET_R8
	DATA_TYPE=REAL*8
	EXTRACT=80*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
	DESC=Current Event SCET or most recent w_channel_position (UR8)
	AUTHOR_DATE=19951129

ITEM=STREAM_BOI_R8
	DATA_TYPE=REAL*8
	EXTRACT=96*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream Beginning-Of-Information position value (UR8)
	DESC=Local earliest access limit in current/today's file
	AUTHOR_DATE=19960513
ITEM=STREAM_EOI_R8
	DATA_TYPE=REAL*8
	EXTRACT=104*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream End-Of-Information position value (UR8)
	DESC=Local latest access limit in current/today's file
	AUTHOR_DATE=19960513

ITEM=STREAM_BOW_R8
	DATA_TYPE=REAL*8
	EXTRACT=112*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream Beginning-Of-Window position value (UR8)
	DESC=Overall earliest access limit in multi-file set
	AUTHOR_DATE=19960513
ITEM=STREAM_EOW_R8
	DATA_TYPE=REAL*8
	EXTRACT=120*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream End-Of-Window position value (UR8)
	DESC=Overall latest access limit in multi-file set
	AUTHOR_DATE=19960513

ITEM=STREAM_BOF_R8
	DATA_TYPE=REAL*8
	EXTRACT=128*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream Beginning-Of-File position value (UR8)
	DESC=SCET of first minor frame of first major frame of current file
	AUTHOR_DATE=19960513
ITEM=STREAM_EOF_R8
	DATA_TYPE=REAL*8
	EXTRACT=136*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream End-Of-File position value (UR8)
	DESC=SCET of last minor frame of last major frame of current file
	AUTHOR_DATE=19960513

ITEM=STREAM_BOD_R8
	DATA_TYPE=REAL*8
	EXTRACT=144*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream Beginning-Of-Day value (UR8)
	DESC=Earliest possible time in current file's day (NNNN.0)
	AUTHOR_DATE=19960513
ITEM=STREAM_EOD_R8
	DATA_TYPE=REAL*8
	EXTRACT=152*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream End-Of-Day position value (UR8)
	DESC=Latest possible time in current file's day (NNNN.9999999999)
	AUTHOR_DATE=19960513

ITEM=STREAM_EOY_R8
	DATA_TYPE=REAL*8
	EXTRACT=160*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream End-Of-Yesterday value (UR8) (if known)
	DESC=Relative to the current file, yesterday's end-of-information time
	AUTHOR_DATE=19960513
ITEM=STREAM_BOT_R8
	DATA_TYPE=REAL*8
	EXTRACT=168*8,64,0,1,1,AREA:6
	FORMAT=(f16.10)
 	DESC=Stream Beginning-Of-Tomorrow position value (UR8) (if known)
	DESC=Relative to the current file, tomorrow's beginning-of-info time
	AUTHOR_DATE=19960513

ITEM=SP_TEST_NUMBER  
	EXTRACT=320,8,-1,1,0,AREA:6
 	DESC=WIND/WAVES Script Player Test Number
	AUTHOR_DATE=19930424
ITEM=SP_STEP_NUMBER  
	EXTRACT=328,8,-1,1,0,AREA:6
 	DESC=WIND/WAVES Script Player Step Number
	AUTHOR_DATE=19930424

ITEM=SC_MODE
	EXTRACT=336,8,-1,1,0,AREA:6
 	DESC=S/C telemetry mode using CDHF convention
	AUTHOR_DATE=19950314
	XLATE=1,"Science 1x"
	XLATE=3,"Maneuver 1x"
	XLATE=4,"Contingency 1x"
	XLATE=5,"Science 2x"
	XLATE=7,"Maneuver 2x"
	XLATE=8,"Contingency 2x"

ITEM=BIT_RATE
	EXTRACT=344,8,-1,1,0,AREA:6
 	DESC=S/C bit rate: 0=Low, 1=High
	AUTHOR_DATE=19950314
	XLATE=0,"Low"
	XLATE=1,"High"
ITEM=BIT_RATE_R4
	VALIDATION=BIT_RATE,EQ,0
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:5565.2174
	DESC=Spacecraft low bit rate (5,565 bits/second)
	AUTHOR_DATE=19960403
ITEM=BIT_RATE_R4
	VALIDATION=BIT_RATE,EQ,1
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:11130.435
	DESC=Spacecraft high bit rate (11,130 bits/second)
	AUTHOR_DATE=19960403

ITEM=BYTES_PER_MINORFRAME
	FIXED_VALUE=1:256
	DESC=Bytes per spacecraft minor frame (256 bytes)
	AUTHOR_DATE=19960403
ITEM=BITS_PER_MINORFRAME
	FIXED_VALUE=1:BYTES_PER_MINORFRAME*8
	DESC=Bits per spacecraft minor frame (2,048 bits)
	AUTHOR_DATE=19960403
ITEM=MINORFRAMES_PER_MAJORFRAME
	FIXED_VALUE=1:250
	DESC=Number of minor frames in a major frame (250)
	AUTHOR_DATE=19960403
ITEM=MINORFRAMES_PER_PACKET
	FIXED_VALUE=1:10
	DESC=Number of minor frames in a WAVES packet (10)
	AUTHOR_DATE=19960403
ITEM=BYTES_PER_MAJORFRAME
	FIXED_VALUE=1:BYTES_PER_MINORFRAME*MINORFRAMES_PER_MAJORFRAME
	DESC=Bytes per spacecraft Major Frame (64,000 bytes)
	AUTHOR_DATE=19960403
ITEM=BITS_PER_MAJORFRAME
	FIXED_VALUE=1:BYTES_PER_MAJORFRAME*8
	DESC=Bits per spacecraft Major Frame (512,000 bits)
	AUTHOR_DATE=19960403

ITEM=BYTE_RATE_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:BIT_RATE_R4/8.
	DESC=Spacecraft byte rate (bytes/second)
	AUTHOR_DATE=19960403
ITEM=BYTE_PERIOD_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1./BYTE_RATE_R4
	DESC=Spacecraft byte period (seconds/byte)
	AUTHOR_DATE=19960403
ITEM=MINORFRAME_RATE_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:BIT_RATE_R4/BITS_PER_MINORFRAME
	DESC=Spacecraft minor frame rate (mf/second)
	AUTHOR_DATE=19960403
ITEM=MINORFRAME_PERIOD_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1./MINORFRAME_RATE_R4
	DESC=Spacecraft minor frame period (seconds/mf)
	AUTHOR_DATE=19960403
ITEM=MAJORFRAME_RATE_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:BIT_RATE_R4/BITS_PER_MAJORFRAME
	DESC=Spacecraft major frame rate (MF/second)
	AUTHOR_DATE=19960403
ITEM=MAJORFRAME_PERIOD_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1./MAJORFRAME_RATE_R4
	DESC=Spacecraft major frame period (seconds/MF)
	AUTHOR_DATE=19960403
ITEM=PACKET_PERIOD_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:MINORFRAMES_PER_PACKET*MINORFRAME_PERIOD_R4
	DESC=Spacecraft minor frame period (seconds/packet)
	AUTHOR_DATE=19960403
ITEM=PACKET_RATE_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1./PACKET_PERIOD_R4
	DESC=Spacecraft minor frame rate (packets/seconds)
	AUTHOR_DATE=19960403

ITEM=CH_EVENT_COUNT
	EXTRACT=32,32,-1,1,0,AREA:A
 	DESC=Sum of all events of all types gathered on specified channel
	AUTHOR_DATE=19930424
!ITEM=DPU_MF          
!	EXTRACT=104,8,-1,1,0,AREA:8
!	COMPOSITE=DPU_MF1
!	DESC=DPU major frame composite, not used, jk
!	AUTHOR_DATE=19910901
!ITEM=DPU_MF1         
!	EXTRACT=96,8,-1,1,0,AREA:8
!	COMPOSITE=DPU_MF2 
!	DESC=DPU major frame composite, not used, jk
!	AUTHOR_DATE=19910901
!ITEM=DPU_MF2         
!	EXTRACT=264,8,-1,1,0,AREA:8
!	DESC=DPU major frame composite, not used, jk
!	AUTHOR_DATE=19910901

ITEM=DPU_MAJOR_ERT
	EXTRACT=224,32,-1,1,0,AREA:6
	DESC=Flight software DPU major frame number from HK via wind_lib
	AUTHOR_DATE=19940922

ITEM=DPU_VERSION     
	EXTRACT=256,8,-1,1,0,AREA:6
	DESC=Flight software DPU version number from HK via wind_lib
	AUTHOR_DATE=19940922
ITEM=FFT_VERSION     
	EXTRACT=264,8,-1,1,0,AREA:6
	DESC=Flight software FFT version number from HK via wind_lib
	AUTHOR_DATE=19940912
ITEM=TDS_VERSION     
	EXTRACT=272,8,-1,1,0,AREA:6
	DESC=Flight software TDS version number from HK via wind_lib
	AUTHOR_DATE=19940912

!
!  DPU clock values
!
ITEM=50KHZ_CLOCK_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:50018.80
!	                     ^
	AUTHOR_DATE=19951013
	DESC=Measured frequency of the 50kHz clock (Hertz)
	VALIDATION=EVENT_SCET,GT,DATE:19941101-000000
ITEM=50KHZ_CLOCK_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:50000.0
	AUTHOR_DATE=19951013
	DESC=Designed frequency of the 50kHz clock (Hertz)
	VALIDATION=EVENT_SCET,LE,DATE:19941101-000000

ITEM=50KHZ_CLOCK_PERIOD_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1./"50KHZ_CLOCK_R4"
	AUTHOR_DATE=19951013
	DESC=Period of the 50kHz clock (seconds)

ITEM=DPU_CLOCK_FREQUENCY_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:"50KHZ_CLOCK_R4"/16.
	AUTHOR_DATE=19951013
	DESC=Frequency of the DPU clock (Hertz)

ITEM=DPU_CLOCK_PERIOD_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:16.0/"50KHZ_CLOCK_R4"
	AUTHOR_DATE=19951013
	DESC=Period of the DPU clock (seconds)


ITEM=EX_LENGTH_EFF
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:43.5
	DESC=Effective length of Ex antenna (meters)
	AUTHOR_DATE=19950816
ITEM=EY_LENGTH_EFF
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:4.68
	DESC=Effective length of Ey antenna (meters)
	AUTHOR_DATE=19950816
ITEM=EZ_LENGTH_EFF
	DATA_TYPE=REAL*4
	VALIDATION=EVENT_SCET,LT,DATE:19961120-210000
	FIXED_VALUE=1:2.17
	DESC=Effective length of Ez antenna (meters)
	AUTHOR_DATE=19950816
ITEM=EZ_LENGTH_EFF
	DATA_TYPE=REAL*4
	VALIDATION=EVENT_SCET,GE,DATE:19961120-210000
	FIXED_VALUE=1:2.82
	DESC=Effective length of Ez antenna (meters)
	AUTHOR_DATE=19970422

ITEM=EX_LENGTH
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:100.0
	DESC=Tip to tip length of Ex dipole (meters)
	AUTHOR_DATE=19950816
ITEM=EY_LENGTH
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:15.0
	DESC=Tip to tip length of Ey dipole (meters)
	AUTHOR_DATE=19950816
ITEM=EZ_LENGTH
	DATA_TYPE=REAL*4
	VALIDATION=EVENT_SCET,LT,DATE:19961120-210000
	FIXED_VALUE=1:10.6
	DESC=Tip to tip length of Ez dipole (meters)
	AUTHOR_DATE=19950816
ITEM=EZ_LENGTH
	DATA_TYPE=REAL*4
	VALIDATION=EVENT_SCET,GE,DATE:19961120-210000
	FIXED_VALUE=1:12.36
	DESC=Tip to tip length of Ez dipole (meters)
	AUTHOR_DATE=19970422

ITEM=EX_MONOPOLE_LENGTH_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:50.
	DESC=Length of Ex monopole (meters)
	AUTHOR_DATE=19950816
ITEM=EY_MONOPOLE_LENGTH_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:7.5
	DESC=Length of Ey monopole (meters)
	AUTHOR_DATE=19950816
ITEM=EZ_MONOPOLE_LENGTH_R4
	DATA_TYPE=REAL*4
	VALIDATION=EVENT_SCET,LT,DATE:19961120-210000
	FIXED_VALUE=1:4.4
	DESC=Length of Ez monopole (meters)
	AUTHOR_DATE=19950816
ITEM=EZ_MONOPOLE_LENGTH_R4
	DATA_TYPE=REAL*4
	VALIDATION=EVENT_SCET,GE,DATE:19961120-210000
	FIXED_VALUE=1:5.28
	DESC=Length of Ez monopole (meters)
	AUTHOR_DATE=19970422

ITEM=BX_LENGTH_EFF
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1.0
	DESC=Effective length of Bx antenna (meters)
	AUTHOR_DATE=19950816
ITEM=BY_LENGTH_EFF
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1.0
	DESC=Effective length of By antenna (meters)
	AUTHOR_DATE=19950816
ITEM=BZ_LENGTH_EFF
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1.0
	DESC=Effective length of Bz antenna (meters)
	AUTHOR_DATE=19950816
ITEM=BX_LENGTH
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1.0
	DESC=Actual length of Bx antenna (meters)
	AUTHOR_DATE=19950816
ITEM=BY_LENGTH
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1.0
	DESC=Actual length of By antenna (meters)
	AUTHOR_DATE=19950816
ITEM=BZ_LENGTH
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1.0
	DESC=Actual length of Bz antenna (meters)
	AUTHOR_DATE=19950816

!
! constants
!
ITEM=PI_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:3.14159265
!	                     ^
	AUTHOR_DATE=19951013
	DESC=Value of pi - single precision

ITEM=PI_R8
	DATA_TYPE=REAL*8
	FIXED_VALUE=1:3.141592653589793238
!	                               ^
	AUTHOR_DATE=19951013
	DESC=Value of pi - double precision

ITEM=C_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:299792500.0
!	                    ^
	AUTHOR_DATE=19951013
	DESC=Speed of light (m/s)

ITEM=R_EARTH_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:6378160.0
	AUTHOR_DATE=19951013
	DESC=Equatorial radius of Earth (meters)
ITEM=REARTH_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:R_EARTH_R4
	AUTHOR_DATE=19951013
	DESC=Equatorial radius of Earth (meters)

ITEM=R_MOON_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:1738160.0
	AUTHOR_DATE=19951013
	DESC=Mean radius of Moon (meters)
ITEM=RMOON_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:R_MOON_R4
	AUTHOR_DATE=19951013
	DESC=Mean radius of Moon (meters)

ITEM=R_SUN_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:696265000.0
	AUTHOR_DATE=19951013
	DESC=Mean radius of solar photosphere (meters)
ITEM=RSUN_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:R_SUN_R4
	AUTHOR_DATE=19951013
	DESC=Mean radius of solar photosphere (meters)

ITEM=EARTH_TO_SUN_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:149560000000.0
	AUTHOR_DATE=19951013
	DESC=An AU - mean distance from Earth to Sun (meters)

ITEM=EARTH_TO_MOON_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:384403000.0
	AUTHOR_DATE=19951013
	DESC=Mean distance from Earth to Moon (meters)

ITEM=JUPITER_TO_SUN_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:778300000000.0
	AUTHOR_DATE=19951013
	DESC=Mean distance from Jupiter to Sun (meters)

ITEM=METERS2MILES_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:0.0006213711
	AUTHOR_DATE=19951013
	DESC=Conversion factor - meters to miles (miles/meter)

ITEM=METERS2FEET_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:3.2808399
	AUTHOR_DATE=19951013
	DESC=Conversion factor - meters to feet (feet/meter)

ITEM=STICS2DEGREES_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:.087890625
	AUTHOR_DATE=19960329
	DESC=Conversion factor - Spin 4096 tics to degrees (360/4096)

ITEM=DEGREES2RADIANS_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:.017453293
	AUTHOR_DATE=19960329
	DESC=Conversion factor - degrees to radians (2pi/360)

ITEM=RADIANS2DEGREES_R4
	DATA_TYPE=REAL*4
	FIXED_VALUE=1:57.2957795
	AUTHOR_DATE=19960329
	DESC=Conversion factor - radians to degrees (360/2pi)

#include WIND_DBMS:items_cdf.inc
